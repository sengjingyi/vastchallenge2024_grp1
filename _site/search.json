[
  {
    "objectID": "Shiny_app/data/shp/Oceanus Geography.html",
    "href": "Shiny_app/data/shp/Oceanus Geography.html",
    "title": "IS608 - Group 1",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Proposal.html",
    "href": "Proposal.html",
    "title": "Proposal for Mini Challenge 2",
    "section": "",
    "text": "To prevent illegal fishing from happening again, FishEye analyst aims to perform geographic and temporal analysis of CatchNet data."
  },
  {
    "objectID": "Proposal.html#use-of-network-analysis",
    "href": "Proposal.html#use-of-network-analysis",
    "title": "Proposal for Mini Challenge 2",
    "section": "3.1. Use of Network Analysis:",
    "text": "3.1. Use of Network Analysis:\n\nNetwork Metrics Analysis (e.g., Centrality indices) to identify relationship of actors within the network data.\nUse of Facet Graphs to visualise relationship across edges (facet_edges()) and nodes (facet_nodes())\n\nReference: Modelling, Visualising and Analysing Network Data with R"
  },
  {
    "objectID": "Proposal.html#use-of-geospatial-analysis",
    "href": "Proposal.html#use-of-geospatial-analysis",
    "title": "Proposal for Mini Challenge 2",
    "section": "3.2. Use of Geospatial Analysis",
    "text": "3.2. Use of Geospatial Analysis\n\nPlot vessel movement across Oceanus geography given Oceanus geojson file to identify most frequent routes and travel patterns by vessel.\nIdentify if the fish species caught in cargos delivered to port is reasonable and if any illegal fishes caught from ecological preserves.\n\nReference: Visualising and Analysing Geographical Data - Choropleth Mapping with R"
  },
  {
    "objectID": "Proposal.html#use-of-temporal-analysis",
    "href": "Proposal.html#use-of-temporal-analysis",
    "title": "Proposal for Mini Challenge 2",
    "section": "3.3. Use of Temporal Analysis",
    "text": "3.3. Use of Temporal Analysis\n\nPinpoint rough timeline where South Seafood Express Corp has been caught for illegal behaviour based on vessel movement.\nCompare the fishing behaviour (cargo loaded, vessels movement) before and after South Seafood Express Corp has been caught.\nIdentify any seasonality in fishing patterns across time at various ports.\n\nReference: Visualising and Analysing Time-oriented Data"
  },
  {
    "objectID": "Proposal.html#sub-question-1",
    "href": "Proposal.html#sub-question-1",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.1 Sub-question 1:",
    "text": "4.1 Sub-question 1:\nIn order to associate vessels with their probable cargo, Transaction data and delivery doc data can be match first to determine which cargo contain which fish species.\nThis step is followed by connecting transponder ping data of vessels to ports with deliver date of cargo. This will give probable link between and vessels and cargo.\n\nUsing this data, visualisations can be performed to show which vessels/company deliver which cargo/ fish species. These visualisations can be further break down by season to check any seasonal trends in cargo delivery.\n\n4.1.1 Early Prototype for Sub-question 1:\n\nInteractive data table with the purpose of returning the list of `cargo_id` and `vessel_id` based on filtering of `Port name` and `Date` (+/- 5 days) and underlying conditions as defined above."
  },
  {
    "objectID": "Proposal.html#sub-question-2",
    "href": "Proposal.html#sub-question-2",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.2 Sub-question 2:",
    "text": "4.2 Sub-question 2:\nTo answer where SouthSeafood Express Corp vessels perform their illegal fishing, graph visualization based on Vessels’ transponder ping data can be used to map locations that SouthSeafood Express Corp vessels been to. This visualization will uncover suspicious activities such as vessel visiting locations not designated for fishing.  By checking the timestamp of these suspicious activities, it is possible to determine when illegal fishing was being performed.  The vessels movement of SouthSeafood Express Corp can be visualized in comparison with other companies in Oceanus to confirm SouthSeafood illegal fishing behaviour.\nReferring to sub-question 1, vessels can be connected to their respective probable cargo. Visualization of SouthSeafood Express Corp vessels and their probable cargo can be compared to that of other companies to determine how does the fishing activity varies.\nOn measure used to describe fishing activity is the relative time spent at respective regions, in comparison to other vessels of similar nature. Filtering the vessel by type (fishing), tonnage and overall length and most frequently visited ports, we can observe the typical behaviour of vessels similar to South Seafood Express. From there, we can compare their relative catch to see if South Seafood Express is able to have higher cargo tonnage at their subsequent port.\n\n4.2.1 Early Prototype for Sub-question 2:\nSouthSeafood Express Corp Vessels Movement\n\nExploring the relative dwell time that SouthSeafood Express Corp Vessels spend at their respective regions in comparison to other vessels. (Red: SouthSeafood Express Corp Vessels; Grey: Other vessels)\n(Note: Diagrams below are illustrative, further fine-tuning is required for representative visualization)\n\nAfter mapping the cargo to their probable vessels, we identify the expected catch from vessels that have taken similar routes as South Seafood Express Corp vessels. Comparing the breakdown of their cargo, we should observe that South Seafood Express Corp has more catch from their illegal fishing activities.\n(Note: Diagrams below are illustrative, further fine-tuning is required for representative visualization)"
  },
  {
    "objectID": "Proposal.html#sub-question-3",
    "href": "Proposal.html#sub-question-3",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.3 Sub-question 3:",
    "text": "4.3 Sub-question 3:\n\nIdentifying vessels with similar travel pattern as South Seafood Express Corp\nIdentifying vessels with high dwell time in non-fishing areas.\nIdentifying vessels that have associated cargo with illegal fish species."
  },
  {
    "objectID": "Proposal.html#sub-question-4",
    "href": "Proposal.html#sub-question-4",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.4 Sub-question 4:",
    "text": "4.4 Sub-question 4:\n\nPerform temporal analysis to see when South Seafood Vessels stop operation.\nCompare the travel patterns of other vessels before and after the timeframe that South Seafood Vessels ceased operation.\nCompare the cargo quantity of fish caught at the various ports before and after South Seafood Vessels ceased operation.\n\n\n4.4.1 Early Prototype for Sub-question 4:\nTemporal Analysis on SouthSeafood Express Corp’s vessel’s operations."
  },
  {
    "objectID": "Observations/data/shp/Oceanus Geography.html",
    "href": "Observations/data/shp/Oceanus Geography.html",
    "title": "IS608 - Group 1",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Meeting_minutes/minutes_8.html",
    "href": "Meeting_minutes/minutes_8.html",
    "title": "Meeting Minute #8",
    "section": "",
    "text": "Date: 22 June 2024\nTime: 4pm to 5pm\nLocation: Physical, after class meeting.\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on existing Shiny R plots\nDiscussion on areas of abnormalities\nDiscussion on final deliverables (Shiny Plot, User Guide, Poster)\n\nMeeting Notes:\nDiscussion on the functionality and areas for improvement for the r Shiny Plots:\n\nShiny Plot 1: Interactive Map of Oceanus\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Help users understand the location in relation to each other on a map.\n\nAllows users to select type of area that they are interested in (e.g., Fishing Ground).\nAllows users to select type of fish species they are interested in to see location of origin.\nAllows users to select activities that they are interested in to see the authorized areas to conduct these activities.\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\nTBC\n\n\n\nShiny Plot 2: Quantity of cargoes received per month\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Help users understand the quantity of cargo caught per month for the various species.\n\nAllows users to zoom into their “Port of Interest”\nTrend line of month on month change to identify the pattern (increase/ decrease)\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\n\nColor of “Salmon” to be shifted to a darker yellow for greater visibility\nInclude mapping of possible vessels that delivered these cargo & association with the companies that delivered these cargo.\nEnforce a “0” reference line for the month on month change to highlight instances where the decrease was negative.\nIntroduce trend line of “Median” across the year to show the relative catch amount difference for the respective months. (TBC - Quarter?)\n\n\n\n\nShiny Plot 3: Network Graph of Vessel ID to Cargo ID mapping\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users to identify the cargo associated with the vessel of interest.\n\nAllows users to filter to identify the cargo mapping and vessel mapping per company.\nAllows user to see the summary of cargo and vessels mapped for each port.\nSize of the nodes for cargo is dependent on the cargo quantity in tons.\nColor of the cargo node reflects if the fish species caught is legal or illegal. (Red: Illegal, Orange: Legal).\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nInclude reference on what is the selected fish species for user’s readability.\nInclude details on which port are these cargo delivered to and which months these cargo are delivered on a summary plot.\n\n\n\n\nShiny Plot 4: Vessel dwell time & relative dwell time to other vessels\n\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\n\n\n\n\nShiny Plot 5: Interactive Calendar Heatmap\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps user see the seasonality of when cargo reaches the respective ports based on a calendar map\n\nAllows users to compare the cargo count across various port at specific dates.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nInclude filter to allow users to zoom into selected dates of interest.\nRelabel of the y axis to make it reasonable instead of using count of weeks.\nTo include reference to other data set (e.g., Count of vessels that is at the port, return the breakdown of fish species caught)\n\n\n\n\nShiny Plot 6: Summary of the most frequent route taken by vessels.\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Identifies the most travelled distinct routes by vessel.\n\nAllow users to select areas of interest that they are looking at and count the number of vessel for these top routes.\nAllow users to zoom into specific companies to identify the distinct locations visited.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nHighlight routes that have trespass illegal fishing route in “Red”\nHighlight routes that have visited fishing grounds and deep sea fishing navigation buoy in “Dark blue”\nInclude reference to map to plot the geographical route taken on the map.\n\n\n\n\nShiny Plot 7: Box Plot of Cargo Weight by Fish Species by Month\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users to identify which vessel contributes to which cargo and the relative position within the month.\n\nAllows users to drill down into desired fish species\nAllows users to drill down into specific port of interest.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nHandling error where there is no record for that fish species for the given port, to properly return “No Available Record”.\nIntroduce option for user to select color for highlighted vessels (Multiple) to contrast\n\n\n\n\nShiny Plot 8: Median Dwell Time of vessel by Area\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users identify the monthly median dwell time of the vessel at the respective area of interest.\n\nAllows users to identify area that they want to contrast to see the median dwell time spent\nAllows users to zoom into specific vessels of interest\nBy hovering on the plot, users are able to see the name of the vessel id contributing to this median dwell time at the area of interest.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nIntroduce filter to identify vessel by company\nIntroduce option for user to select color for highlighted vessels (Multiple) to contrast\nIntroduce reference line that maps the % increase / decrease for month on month median dwell time changes for all vessels & selected vessels.\nIntroduce data table that returns the vessels and their details for those that are included in the “Highlighted Vessel ID”\n\n\n\n\nShiny Plot 9: Route taken by vessels - SOS Myat!\nShiny Plot 10: Dwell time by vessels at the areas visited - SOS Myat!\nShiny Plot 11: Comparison of fish delivered month on month with % change - SOS Myat!\n\nDiscussion on how to combine the r Shiny Plots to address the sub-questions\n\n\n\n\n\n\n\n\nMenu\nPlots and layout\n\n\n\n\nQ1a - Mapping of Cargo Delivered by Vessels\n\nNetwork graph that links cargo to vessel\nQuantity of cargoes received per month\n\n\n\nQ1b - Seasonality\n\n\n\nQ2 - Geographical mapping & dwell time\n\n\n\nQ3 -\n\n\n\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nRefine the r Shiny Plots and document a “User Guide”\nArya, Jing Yi, Myat\n24 June 2024\n\n\nCombine the r Shiny Plots and introduce links between various plots for coordinated linked view.\nArya, Jing Yi, Myat\n24 June 2024\n\n\nInvestigate the possible suspicious behaviours with the r Shiny plots and document down findings in “Observations”\nArya, Jing Yi, Myat\n24 June 2024\n\n\nSummarise the methodology and findings in the poster.\nArya, Jing Yi, Myat\n24 June 2024\n\n\n\nAgenda for Next Meeting:\n\nReview the refined r Shiny plots & test for instance where there is any errors\nReview the observations and potential finding for concurrence and reasonableness check."
  },
  {
    "objectID": "Meeting_minutes/minutes_6.html",
    "href": "Meeting_minutes/minutes_6.html",
    "title": "Meeting Minute #6",
    "section": "",
    "text": "Date: 8 June 2024\nTime: 4pm – 5pm\nLocation: Physical, after class meeting.\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on approach to breaking down questions for Mini Challenge 2\nDiscussion on which areas to venture for Take-home assignment 3 leading up to project deliverable.\nDiscussion\n\nMeeting Notes & Action Items:\nWith Take-home assignment due on 9 June 2024, the team discussed how we should address different sub-questions to maximise the coverage of mini-challenge 2 deliverable. As majority of the focus for mini-challenge 2 is associated with the mapping of vessels to cargo based on the harbor import report and the vessel movement report, the team decided on the following breakdown.\n\nEveryone to attempt Q1\nFor subsequent questions 2,3,4 this will be split evenly amongst the group mates.\n\nEventual assignment of sub-question is as shown.\n\n\n\n\n\n\n\nSub-question & key focus\nTeam member\n\n\n\n\nQ1 & Q2 - Understanding South Seafood’s behaviour in terms of locations visited and dwell time to identify areas of suspicious activity.\nMyat\n\n\nQ1 & Q3 - Identifying vessels that have similar patterns to South Seafood and identify if these behaviour are suspicious.\nArya\n\n\nQ1 & Q4 - Comparing the behaviour of vessels before and after South Seafood was caught (i.e., dwell time at various areas, vessel count at each area, cargo count before and after with time series)\nJing Yi\n\n\n\nAgenda for next meeting:\n\nReview the insights derived from each sub-question covered by the team members.\nPreliminary selection of the plots to use for the final project on Shiny.\nReview possible areas of improvement for the plot to improve clarity and make them more aesthetically pleasing."
  },
  {
    "objectID": "Meeting_minutes/minutes_4.html",
    "href": "Meeting_minutes/minutes_4.html",
    "title": "Meeting Minute #4",
    "section": "",
    "text": "Date: 23/05/2024\nTime: 10 – 10.30 pm\nLocation: SMU\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on dilemma faced during data cleaning for MC2.\nDiscussion on insights derived from knowledge graphs and other visualisations.\nDiscussion on details for project proposal.\n\nMeeting Notes:\nTeam discussed the considerations during data cleaning for MC2, ranging from relabelling of columns, removing of duplicates and possible connector for MC2 sub-question 1 on linking cargo_id to vessel_id.\n\nDiscussion point #1: Aligning of headers and dropping of duplicate columns.\n\n\n\n\n\n\n\nDecision\n\n\n\nIdentified primary keys to link the “Event” edges with the “Entity” nodes.\n\nCargo_id between Event. Transaction, Entity.Delivery.Report\nVessel_id between Event.TransponderPing and Event.HaborReport with Entity.Vessel\n\nColumns to drop due to duplicated information.\n\nCity_name with City_id\nRegion_name with Region_id\nPoint_name with Point_id\nData_author with city_name\n\n\n\n\nDiscussion point #2: Handling nested list within data tables.\n\n\n\n\n\n\n\nDecision\n\n\n\nFor Entity.Region.Point, nested list include:\n\nActivities in region (e.g., Commercial fishing, Deep Sea Fishing)\nFish species in Region (e.g.,Wrasse/Labridae n.refert, Beauvoir/Habeas pisces)\n\n\n\n\nDiscussion point #3: Handling unique columns for certain entity tables.\n\n\n\n\n\n\n\nDecision\n\n\n\nEvent.Transponder,Ping: To determine meaning of “Key”\n\n\n\nDiscussion point #4: Possible calculated fields\n\n\n\n\n\n\n\nDecision\n\n\n\nFor “Event.Transponder.Ping”: Aggregate the dwell time per vessel per ping source to identify time that the vessel spent most.\nFor “Event.Transaction”:\n\nIdentify cargo with illegal fish species\nMatch possible regions where fish can be fished vs city_name where the ship has been to see if there’s any overlap for illegal fishing.\n\n\n\nTeam also discussed the possible connection between the different data table. This can be used as a basis to draw the preliminary knowledge graph used for visualisation of relationship between the various nodes.\n\nTeam discussed possible visualisation to explore:\n\nVisualisation #1: Distribution of fish species captured by the respective vessel companies.\n\nSubsequent steps:\n\nIdentifying companies that deviate from the norm\nIdentifying companies that have uncommon or suspicious fish species.\n\n\n\nVisualisation #2: Interactive data-table to return the list of cargos and the vessels at the ports by specifying the date and selected port.\n\n\n\nVisualisation #3: Vessel movement, zooming into South Seafood Express Corp\n\nSubsequent steps:\n\nIdentifying the common regions that vessel move.\nIdentifying common areas where fishing occurs & dwell time.\n\n\n\nVisualisation #4: Diving into the time spent by vessels at the respective areas to identify vessels that have over-stayed in areas where fishing is not allowed (e.g., Ghoti Reserve)\n\n\nNext steps are agreed as follows:\n\nWork on the details for the project proposal (Deadline of 25 May 2024).\nPush project proposal details onto git.\n\nAction Items:\n\nAgenda for Next Meeting:\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nData cleaning and processing for MC2\nArya, Jing Yi, Myat\n28 May 2024\n\n\nExploring knowledge graph and potential visualizations for MC2 sub questions\nArya, Jing Yi, Myat\n28 May 2024\n\n\nDraft details for project proposal\nArya, Jing Yi, Myat\n28 May 2024\n\n\nCommit, push and pull files from common git\nArya, Jing Yi, Myat\n28 May 2024\n\n\n\n\nAction items review from previous meetings.\nGo through process and challenges from data cleaning for MC2.\nGo through insights derived from knowledge graphs and other visualisations.\nDiscuss project proposal details."
  },
  {
    "objectID": "Meeting_minutes/minutes_2.html",
    "href": "Meeting_minutes/minutes_2.html",
    "title": "Meeting Minute #2",
    "section": "",
    "text": "Date: 15/05/2024\nTime: 10 – 10.30 pm\nLocation: Online – Teams Meeting\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on new project options – China Vis\nDiscussion on preliminary review of Vast Challenge Mini-case 2\nDiscussion on questions for clarification with Prof Kam\nAOB\n\nMeeting Notes:\nTeam went through the context and question for China Vis track 1:\n\n\n\n\n\n\n\nChina Vis Track 1\nComments from Team\n\n\n\n\nTime-Series Multivariate Education Data Visual Analytics Challenge\n\nSimilar to previous batch dataset on PISA results.\nPossible to leverage on similar visualisation methods while adding context for China Vis\nDataset is relatively scattered and requires combination from the various files to aggregate and estimate student’s competency.\n\n\n\nMultivariate Recruitment Data Visual Analytics Challenge\n\nData set relatively clean and easy to read as it is a single excel file.\nPossibility of visualising with distribution graphs and correlation plots or heat map to see the count per education level, work experience.\n\nConsult question for Prof:\n\nIf it is possible to make any assumptions on the relatively encoding for job titles, company.\nIf no meaningful insights from the anonymised job titles, companies, are there other ways to visualise to minimise granularity.\n\n\n\n\nAttempt for visualisation for China Vis:\n\nPlot breakdown of job titles per dimensions\nWhich candidate profile is most in demand – Education & Experience\n\n\n\nBreakdown of opportunities by city and company type à possibly major cities, or cities that specialise in certain area.\n\n\n\nFollowing meeting 1’s agreement to explore Mini Challenge 2, team members voiced challenges faced with viewing the data as the json file includes multiple levels, including nested list and overlapping header names.\nInterim measure for Mini Challenge 2 is to use the extracted files from the “Nodes” and “Edges” data table and segregate into separate tables based on the “Entity.Type” for nodes and “Event.Type” for edges.\n\nNext steps agreed are as follows:\n\nExplore ways to parse Vast Challenge – Mini Case 2 .json file into readable format for future graph drawing.\nExploring ways to use knowledge graphs and other appropriate visualisation methods to visualise interlinked data set within Mini Case 2.\nArrange time for consult with Prof on handling data for 2 shortlisted topics.\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nExplore ways to parse mc2 json. file into readable format and relabeling of columns.\nArya, Jing Yi, Myat\n18 May 2024\n\n\nSearch for ways to overcome challenges faced in exploring China Vis Topic 2 and Vast Challenge MC2.\nArya, Jing Yi, Myat\n18 May 2024\n\n\nArrange time for consult with Prof on assumptions that can be made when handling China Vis and Vast Challenge datasets.\nArya, Jing Yi, Myat\n18 May 2024\n\n\n\nAgenda for Next Meeting:\n\nAction items review from previous meetings.\nGo through possible solutions to overcome data extraction, processing from json file.\nGo through possible visualisations (e.g., network graphs) for mini case 2 data.\nDiscuss possible approach for project proposal (Due: 25 May 2024)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Vast Challenge 2024 - MC 2",
    "section": "",
    "text": "Introduction\nFishEye, a non-profit organization that focuses on illegal fishing, has assembled a knowledge graph from multiple structured and unstructured data sources.\nThe team will focus on Mini-Challenge 2: Creating Signatures for Geo-Temporal Patterns. This focuses on analyzing ship movements and shipping records to understand illegal fishing practices.\n\n\n\nKey objectives\n\nCreate visualisations to show patterns of ship movements and identify suspicious behaviours.\nUnderstand how commercial fishing community changed after a company was caught fishing illegally.\n\n\n\nReferences\nFor more information on VAST Challenge 2024 Mini-Challenge 2, please visit the official website here."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Project Team",
    "section": "",
    "text": "We are students from SMU (MITB) IS608 - Visual Analytics, exploring the Vast Challenge 2024 under the guidance of Dr. Kam Tin Seong, Associate Professor of Information Systems (Practice)."
  },
  {
    "objectID": "Meeting_minutes/minutes_1.html",
    "href": "Meeting_minutes/minutes_1.html",
    "title": "Meeting Minute #1",
    "section": "",
    "text": "Date: 11/05/2024\nTime: 3:45-4:00pm\nLocation: SMU\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on creating group project website\nDiscussion on setting up git to enable code pushing by group members\nChoosing project topic\nAOB\n\nMeeting Notes:\n\nTeam went through together the background of Vast Challenge 2024. Next, team further deep dive in to Mini Challenge 1, Mini Challenge 2, Mini Challenge and Grand Challenge and their respective objectives and tasks.\nTeam agreed on working on Mini Challenge 2 since all team members resonate with the objective to discover and understand signatures of different types of fishing behaviour to prevent illegal fishing.\nNext steps are agreed as follows:\n\no Familiarise with data - Exploring dataset for mc2.\no Think of 1 visualisation each for each sub-qn (1-4).\no Work on launching group website.\no Post a word doc for meeting minute.\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nExploring dataset for mc2\nArya, Jing Yi, Myat\n15 May 2024\n\n\nThink of 1 visualisation each for each sub-qn (1-4)\nArya, Jing Yi, Myat\n15 May 2024\n\n\nWork on launching group website\nArya, Jing Yi, Myat\n15 May 2024\n\n\nPost a word doc for meeting minute\nArya, Jing Yi, Myat\n15 May 2024\n\n\n\nAgenda for Next Meeting:\n\nAction items review from previous meetings\nGo through findings from dataset for mc2\nGo through visualisations idea for each sub-qn\nDiscuss group website launching"
  },
  {
    "objectID": "Meeting_minutes/minutes_3.html",
    "href": "Meeting_minutes/minutes_3.html",
    "title": "Meeting Minute #3",
    "section": "",
    "text": "Date: 18/05/2024\nTime: 3.45-4:00pm\nLocation: SMU\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on final project selection based on 2 shortlisted topics.\nDiscussion on setting up git to enable code pushing by group members.\nDiscussion on potential roadblocks and possible mitigations\nAOB\n\nMeeting Notes:\nTeam went through the possible competencies and potential challenges for the 2 short-listed projects, namely:\n\nVast Challenge – Mini Case 2\nChina Vis – Track 1, Topic 2 on Job Recruitment.\n\n\n\n\n\n\n\n\n\nProject Topic\nWhy team believes this project is manageable\nPotential challenges\n\n\n\n\nChina Vis\n\nData of “Job Wanted.xlsx” is relatively clean, making it easy to load and visualise.\n\n\nAnonymised “Job Description” offers little context for analysis (e.g., not possible to do text analysis, clustering as each instance is unique)\n\n\n\nVast Challenge MC2\n\nRich context given for location, vessel type and events.\nInteresting topic of identifying illegal fishing behaviour given a particular target to focus on of “South Seafood Express”\n\n\nData file is in JSON which is new to the project team.\nDifficulty interpreting the links between the various data set where the crucial link of vessel_id to cargo_id is missing.\n\n\n\n\n\nTeam sought feedback from Prof Kam during the break on whether assumptions can be made during the data processing and analysis of the dataset.\nTeam agreed to continue venturing on Mini Challenge 2, where the learnings from today’s class on Network Analysis will be highly beneficial and useful in uncovering the relationships between the nodes (Vessels, Cargo, Location).\nTeam discussed about the possible avenues to detect abnormal fishing behaviour. This includes:\n\n\nDrilling into extreme values that deviate from interquartile range.\nIdentifying routine patterns from vessels and common cargo and subsequently identifying those records that diverge.\n\n\nOpportunities based on prof’s recommendation include:\n\n\nProcess of elimination to exclude reasonable records.\nUncovering illegal fishing based on the context of the case (e.g., fishing for shark fins by comparing quantity of tons and species.\n\nNext steps are agreed as follows:\n\nData cleaning, processing and introducing links between silo-ed datasets.\nExploring knowledge graphs and network diagrams to identify central nodes.\nWork on the details for the project proposal (Deadline of 25 May 2024).\nTrying to commit to a common git repository set-up, with push and pull.\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nData cleaning and processing for MC2\nArya, Jing Yi, Myat\n23 May 2024\n\n\nExploring knowledge graph and potential visualizations for MC2 sub questions\nArya, Jing Yi, Myat\n23 May 2024\n\n\nDraft details for project proposal\nArya, Jing Yi, Myat\n23 May 2024\n\n\nCommit, push and pull files from common git\nArya, Jing Yi, Myat\n23 May 2024\n\n\n\nAgenda for Next Meeting:\n\nAction items review from previous meetings.\nGo through process and challenges from data cleaning for MC2.\nGo through insights derived from knowledge graphs and other visualisations.\nDiscuss project proposal details."
  },
  {
    "objectID": "Meeting_minutes/minutes_5.html",
    "href": "Meeting_minutes/minutes_5.html",
    "title": "Meeting Minute #5",
    "section": "",
    "text": "Date: 28 May 2024\nTime: 2pm – 3pm\nLocation: Online – Teams Meeting\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on what constitute as illegal fishing.\nDiscussion on improvements to existing visualisation.\nClarification with Prof Kam\nAOB\n\nMeeting Notes:\nTeam discussed possible signs of illegal fishing, which includes:\n\nFishing for illegal fish species.\nFishing in ecological preserves.\n\nAdding to Prof Kam’s suggestions of considering IUU – Illegal, Unreported and Unregulated Fishing, the team will be exploring the following:\nReference: https://www.imo.org/en/OurWork/IIIS/Pages/IUU-FISHING.aspx.\n\n\n\n\n\n\n\nIUU\nPossible visualisations\n\n\n\n\nIllegal: Unauthorised fishing by vessels that are not given the permission to fish from a particular country. \nIdentifying “Unknown” vessels and activities of vessels that are not registered with “Oceanus” flag.\n\n\nUnreported: Fishing activities that are not reported or under-reported to ports which hampers accurate assessment of fish stocks.\nIdentify vessels that have been identified by transponder ping and port report, but consistently not reporting or under-reporting the volume of fish caught.\n\n\nUnregulated: Overfishing that depletes natural fish stocks and disrupts marine ecosystems.\nIdentify vessels that have consistently out-perform comparable peers, and potentially suggest fishing beyond allowable limits.\n\n\n\nWith Prof Kam’s suggestions of cross-referencing to summons issued for over-fishing based on articles given in Mini-challenge 1, we filtered out the articles with key words of “overfishing”, “summons”, “police”, “illegal”.\n\npacman::p_load(tidyverse, DT)\nsuspicious &lt;- read_csv(\"data/suspicious.csv\")\n\ndatatable(suspicious, options = list(pageLength = 1))\n\n\n\n\n\nExamples include:\n\n\n\n\n\n\n\nCompanies Identified\nBehaviour Identified\n\n\n\n\nRechFish Freight Plc\nRepeatedly summoned for overfishing in Cod Table, Wrasse Beds, and Don Limpet Preserve (February, March, April, May 2035)\n\n\nArawakFish Cargo Ges.m.b.H.\nOverfishing in Tuna Shelf, Cod Table, Wrasse Beds, Nemo Reef, and Ghoti Preserve (February, March, April 2035)\n\n\nDry CreekRybachit Marine A/S\nOverfishing in Wrasse Beds (March, July 2035)\n\n\nBaringoAmerica Marine Ges.m.b.H.\nOverfishing in Cod Table and Tuna Shelf (May 2035)\n\n\nDry CreekWorldLogistics Ltd.\nAlleged Overfishing in Wrasse Beds - The company is caught fishing outside their designated area, the Wrasse Beds, and using unauthorized vessels. The company has been summoned multiple times by the cities of Lomark and Himark throughout 2035.\n\n\nKambalaSea Freight Inc.\nOverfishing in the Cod Table, Tuna Shelf, and Wrasse Beds on or around May 1, 2035.\n\n\nKisumuSeafoodBrothers\n\n\n\nLtd.\nOverfishing in Nemo Reef on April 2, 2035.\n\n\n\nDrilling into mini-challenge 2, sub-question 1, the team surfaced challenges mapping the vessels and cargo at each port based on the individual date. As illustrated in the data table below, the count of vessel and cargo at each port on the same date varies.\n\nPossible reason: This may be due to variance in time needed to offload cargo, refuel the ships at the respective ports.\nMoreover, fishing models needs to be considered such as the use of “Transhipment Vessels” where fishing vessel deposit their catch onto cargo vessels with attempt to maximise fishing time in sea.\nReference: https://www.oceansinc.earth/transshipment\nForeseeable challenges include different styles that fishing vessels corporate with cargo vessels. Such as:\n\nSame company owning both fishing vessels and transhipment vessels.\nIndividual fisherman cooperating with larger companies for shipment.\n\nOn improving existing visualisation, to identify the route taken by vessels, the path taken by each vessel will be reordered by date to identify the usual routes taken. Any deviation of fishing route may prompt further investigation. The sailing route will further be transposed on Oceanus map.  \nAction Items:\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nAgenda for Next Meeting:"
  },
  {
    "objectID": "Meeting_minutes/minutes_7.html",
    "href": "Meeting_minutes/minutes_7.html",
    "title": "Meeting Minute #7",
    "section": "",
    "text": "Date: 15 June 2024\nTime: 4pm to 5pm\nLocation: Physical, after class meeting.\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on findings from Take Home Assignment 3\nDiscussion on charts to include for Project Shiny\nClarification with Prof Kam\n\nMeeting Notes:\nReviewing the learnings from our fellow classmates\n\nLearning 1: Jaya’s “Fish Arrival by City over Time”\n\n\n\n\n\n\n\n\nInsights & Possible Area for Further Investigation\n\n\n\n\nPossibility of transfer of illegal fish species from one port to another delivery port after South Seafood Express Corp was flagged for illegal fishing.\nDecline in illegal fish species for “City of Paackland” in May and shift to “City of Himark” or “City of Haacklee”.\n\n\n\n\nLearning 2: Jaya’s & Wei Peng’s Combined Path of Vessel Locations over Time\n\n\n\n\n\n\n\n\nInsights & Possible Area for Further Investigation\n\n\n\n\nConsidering possibility of transhipment arising from overlap of transponder ping\nBy identifying vessels at the same location on the same date for possibility of transfer.\n\n\n\n\nLearning 3: Rydia’s Changes in Visit Frequency by Month by Fishing Vessels\n\n\n\n\n\n\n\n\nInsights & Possible Area for Further Investigation\n\n\n\n\nPlot of visit frequency of fishing vessels by month which showed decline in visit aft South Seafood was caught, while other cities (e.g., City of Lomark) showed an increase.\nFurther investigation where plot shows that frequency visit to Nav C has decreased after South Seafood Express was caught.\n\n\n\nDiscussion on plots to include for the project:\nThe team circled back to the Mini-challenge 2 questions and summarised the intended visualizations for the respective questions.\n\nSub-question 1a: Develop a visualization system to associate vessels with their probable cargos.\n\n![](images/clipboard-4038435692.png)\n\n\n\n\n\n\nConsiderations\n\n\n\nFilter:\n\nTransaction date to filter scope of cargo\nCargo of specific fish species\nSpecific vessels\n\nAesthetics:\n\nGrey out links where it is a poor match\nCargo coloured red where it belongs to illegal fish species.\n\n\n\n\nSub-question 1b: Which vessels deliver which products and when?\n\n\n\n\n\n\n\nIdeal visualisation / data table\n\n\n\nFor each vessel, return the details of the associated cargo, including tx_date and fish_species for that respective cargoes.\n\n\n\nSub-question 1c: What are the seasonal trends and anomalies in the port exit records?\n\n\n\n\n\n\n\n\nConsiderations\n\n\n\nPlot of calendar heat map\n\nFilter by port\nFilter by fish species of interest\n\nAnalysis to include trendline comparing month-on-month change\n\n\n\nSub-question 2a: Develop visualizations that illustrate the inappropriate behavior of SouthSeafood Express Corp vessels.\n\n\n\n\n\n\n\n\nConsiderations\n\n\n\nPlot the path taken by South Seafood Express Corp to observe areas where South Seafood Vessels may have trespass.\n\n\n\nSub-question 2b: How do their movement and catch contents compare to other fishing vessels? .\n\n\n\n\n\n\n\nIdeal visualisation / data table\n\n\n\n\nInclude map and interactive filter by fish species to show probable fishing location and dwell time of vessels at each location.\nInclude parallel coordinate plot with (x axis as location, y as median dwell time, each vessel drawing a line)\n\n\n\n\nSub-question 2c: Develop a visualization system to associate vessels with their probable cargoes.\n\n\n\n\n\n\n\n\nIdeal visualisation / data table\n\n\n\n\nInteractive plot where the median dwell time spent by each vessel is highlighted by circle.\nCompare the median dwell time of this vessel with other vessel to see if this vessel is overstaying its visit.\nCompare the transponder ping record for each vessel across regions it visited over the period and see any difference per month.\n\n\n\n\nSub-question 2d: How many different types of suspicious behaviors are observed? Use visual evidence to justify your conclusions.\n\n\n\n\n\n\n\nPossible Area for Investigation\n\n\n\nSuspicious behaviour include:\n\nOverstaying in ecological preserves\nCatch of illegal fish species\nRepeatedly catching top 90% of cargo (possibility of overfishing)\n\n\n\n\nSub-question 3: To support further Fisheye investigations, develop visual analytics workflows that allow you to discover other vessels engaging in behaviors similar to SouthSeafood Express Corp’s illegal activities? Provide visual evidence of the similarities.\n\n\n\n\n\n\n\nPlanned Approach\n\n\n\nVisualisations will be taken from Q1 and Q2 to identify common groups of illegal fishing behaviour.\n\n\n\nSub-question 4a: How did fishing activity change after SouthSeafood Express Corp was caught?\n\n\n\n\n\n\n\nPlanned Approach\n\n\n\nVisualisation will be taken from Q1 and Q2 to include filter on time parameter to compare the before and after May 2035.\n\n\n\nSub-question 4b: What new behaviors in the Oceanus commercial fishing community are most suspicious and why?\n\n\n\n\n\n\n\nPlanned Approach\n\n\n\nIdentify any drastic change immediately in June (post May) and subsequent month.\nArea of investigation include:\n\nDiversion of vessel path from where South Seafood was at. (Port, Fishing Ground, Ecological Preserve)\nVessels that have remained at the port in June and no activity in June.\nChange in cargo quantity and fish species caught\n\n\n\nAreas to note:\n\nWhen comparing with other fishing vessel and cargo vessel, consider their capacity.\nWhen using the mapped records of vessel to cargo, take note of the denominator to prevent duplicate records. (e.g., vessel_id, or cargo_id).\nFor interactive plot, it is possible to call ggplotly within Shiny.\nTo have coordinated link view, introduce the common ID to have a common data table and filters applied. https://rstudio.github.io/crosstalk/shiny.html\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nPlot the r Shiny plots for the respective sub-questions\nArya, Jing Yi, Myat\n22 June 2024\n\n\nSummarise the insights derived from exploring the r Shiny plots.\nArya, Jing Yi, Myat\n22 June 2024\n\n\n\nAgenda for Next Meeting:\n\nReview of Shiny Plot Progress\nReview of possible observations arising from Shiny Plots (more granular deep dive)"
  },
  {
    "objectID": "Meeting_minutes/minutes_9.html",
    "href": "Meeting_minutes/minutes_9.html",
    "title": "Meeting Minute #9",
    "section": "",
    "text": "Date: 24 June 2024\nTime: 9pm to 10pm\nLocation: Virtual, Teams Meeting\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nSummarise the findings obtained from the plots.\nFinalise the deliverables (Shiny Plot, User Guide, Poster)\n\nMeeting Notes:\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nPresentation of Poster on 29 June 2024\nArya, Jing Yi, Myat\n29 June 2024"
  },
  {
    "objectID": "Observations/Observation_1.html",
    "href": "Observations/Observation_1.html",
    "title": "Observation on Seasonality of Oceanus Catch",
    "section": "",
    "text": "Code\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly)\n\ntx_qty &lt;- read_csv(\"data/tx_qty.csv\")\nping_activity &lt;- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v &lt;- read_csv(\"data/hbrpt.csv\")\nN_vessel &lt;- read_csv(\"data/N_vessel.csv\")\n#location_legend &lt;- read_csv(\"data/location_legend.csv\")\n#vessel_movement &lt;- read_rds(\"data/rds/vessel_movement_data.rds\")\nnearest_tx_date &lt;- read_csv(\"data/mapped_records.csv\")\ntime_summary_df &lt;- read_csv(\"data/time-summary.csv\")"
  },
  {
    "objectID": "Observations/Observation_1.html#unauthorised---vessels-with-possibility-of-illegal-fishing",
    "href": "Observations/Observation_1.html#unauthorised---vessels-with-possibility-of-illegal-fishing",
    "title": "Observation on Seasonality of Oceanus Catch",
    "section": "Unauthorised - Vessels with Possibility of Illegal Fishing",
    "text": "Unauthorised - Vessels with Possibility of Illegal Fishing\nBased on the Transponder Ping records, we observed the following vessels may have overstayed their visits to ecological preserves.\n\n\nCode\nping_activity$start_time &lt;- ymd_hms(ping_activity$start_time)\nping_activity$month &lt;- floor_date(ping_activity$start_time, \"month\")\n\n# Convert the month column to Date format (first day of each month)\nping_activity$month &lt;- as.Date(ping_activity$month)\n\n# Calculate median dwell time per vessel_id per month for each area\nagg_data &lt;- ping_activity %&gt;%\n  group_by(area, vessel_id, month) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nagg_data2 &lt;- agg_data %&gt;%\n  group_by(area, month) %&gt;%\n  mutate(`90%_dwell_time` = quantile(median_dwell, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(`Is_above_90%` = ifelse(median_dwell &gt; `90%_dwell_time`, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\n# count the number of times that vessel stayed &gt;90% dwell time\nsummary_data &lt;- agg_data2 %&gt;%\n  filter(`Is_above_90%` == \"Yes\") %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(count_above_90 = n()) %&gt;%\n  spread(key = area, value = count_above_90, fill = 0)\n\n# return vessels that overstayed preserve 2 or more times\noverstay_ghoti &lt;- summary_data %&gt;%\n  filter(`Ghoti Preserve` &gt; 0 )\n\nvessel_overstay_ghoti &lt;- unique(overstay_ghoti$vessel_id)\n\noverstay_nemo &lt;- summary_data %&gt;%\n  filter(`Nemo Reef` &gt; 0 )\n\nvessel_overstay_nemo &lt;- unique(overstay_nemo$vessel_id)\n\noverstay_donlimpet &lt;- summary_data %&gt;%\n  filter(`Don Limpet Preserve` &gt; 0)\n\nvessel_overstay_donlimpet &lt;- unique(overstay_donlimpet$vessel_id)\n\n## generating data table \n\noverstay_locations &lt;- c(rep(\"Ghoti Preserve\", length(vessel_overstay_ghoti)),\n                        rep(\"Nemo Reef\", length(vessel_overstay_nemo)),\n                        rep(\"Don Limpet Preserve\", length(vessel_overstay_donlimpet)))\n\nvessel_ids &lt;- c(vessel_overstay_ghoti, vessel_overstay_nemo, vessel_overstay_donlimpet)\n\n# Create a data frame\noverstay_data &lt;- data.frame(\"Overstay Location\" = overstay_locations, \"Vessel ID\" = vessel_ids)\n\n# Summarize by concatenating vessel IDs as a single string for each location\noverstay_summary &lt;- aggregate(Vessel.ID ~ Overstay.Location, data = overstay_data, paste, collapse = \", \")\n\n# Print the first 3 rows\nprint(head(overstay_summary, 3))\n\n\n    Overstay.Location\n1 Don Limpet Preserve\n2      Ghoti Preserve\n3           Nemo Reef\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Vessel.ID\n1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                himarkroyal032, mrray9c4\n2 bigeyetunabuccaneera16, brillbandit0a1, chumsalmoncatcher41e, codcatcher04c, crabcatcher1aa, crappiecapturer875, fishfinderb9d, fishflingere29, gurnardgrabberd9a, largemouthbasslooterf95, muskellungemastere7c, northernpikepirated97, oceanoracle1d0, redfinpickerelraider744, sailfishswindlerb4f, salmonsnatcher19d, seabassbandit9ad, seaserpent4b4, sockeyesalmonseekerb95, spanishmackerelmaster037, squidsquasherda9, stripedbassseeker80c, swordfishsaboteur22f, tunataker80c, whitemarlinwranglerbac, whitesuckerwrangler0b3\n3                                                                                                                                                                                                                                                                                                                      bluefishbandit8ec, clownfishe3d, costasmeraldaac7, deepseadrifter9f2, dolphindasher004, eelenthusiast8c6, harborhalo9dd6, harborhelios585, heartofoceanusf11, louietheii3e0, mrray9c4, tunatrawlerafd, webigailba7\n\n\n\nLooking at the route of these vessels, we observe the common path taken by these vessels.\nDiving into the associated cargo for these vessels, we observe the quantity of cargo"
  },
  {
    "objectID": "Observations/Observation_1.html#unregulated---vessels-with-possibility-of-overfishing",
    "href": "Observations/Observation_1.html#unregulated---vessels-with-possibility-of-overfishing",
    "title": "Observation on Seasonality of Oceanus Catch",
    "section": "Unregulated - Vessels with possibility of Overfishing",
    "text": "Unregulated - Vessels with possibility of Overfishing\n\nRepeatedly high cargo catch (cargo quantity / vessel’s tonnage)\nFilter to return the vessels where frequency at above 90 percentile &gt;= 5 times each month.\n\n\n\nCode\nvessel_cargo_map &lt;- nearest_tx_date %&gt;% \n  left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\")) %&gt;% \n  group_by(cargo_id, tx_date, vessel_id, fish_species) %&gt;%\n  summarise(percent_fill = qty_tons/tonnage)\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;% mutate(tx_date = as.Date(tx_date))\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;%\n  group_by(fish_species, month = floor_date(tx_date, \"month\")) %&gt;%\n  mutate(monthly_mean = mean(percent_fill),\n         percentile_90 = quantile(percent_fill, 0.90)) %&gt;%\n  ungroup()\n\np &lt;- ggplot(vessel_cargo_map, aes(x = tx_date, y = percent_fill, text = vessel_id)) +\n  geom_point(aes(color = percent_fill &gt; percentile_90)) +\n  scale_color_manual(values = c(\"FALSE\" = \"black\", \"TRUE\" = \"red\")) +\n  geom_line(aes(y = monthly_mean), linetype = \"dashed\", color = \"blue\") +\n  facet_wrap(~ fish_species, scales = \"free_y\") +\n  labs(title = \"Percent Fill Over Time by Fish Species\",\n       x = \"Transaction Date\",\n       y = \"Percent Fill\",\n       color = \"Above 90th Percentile\") +\n  theme_minimal()\n\n# Make the plot interactive with ggplotly\np_interactive &lt;- ggplotly(p, tooltip = c(\"text\", \"percent_fill\", \"monthly_mean\"))\n\n\n\n\nCode\nvessel_cargo_map_above_90th &lt;- vessel_cargo_map %&gt;%\n  filter(percent_fill &gt; percentile_90)\n\n# Summarize the count of records per vessel_id, month, and fish species\nsummary &lt;- vessel_cargo_map_above_90th %&gt;%\n  group_by(vessel_id, month, fish_species) %&gt;%\n  summarize(count_records_above_90th = n()) %&gt;% \n  filter(count_records_above_90th &gt;=5) %&gt;%\n  ungroup()\n\nunique(summary$vessel_id)\n\n\n [1] \"albacoreangler47d\"        \"barracudabaiter8b3\"      \n [3] \"bigeyetunabuccaneera16\"   \"brownbullheadbriganded2\" \n [5] \"cargocentric4d0\"          \"cutthroattroutcatchere2b\"\n [7] \"fishfinderb9d\"            \"fishflingere29\"          \n [9] \"gurnardgrabberd9a\"        \"kingfisher87d\"           \n[11] \"largemouthbasslooterf95\"  \"mackerelmarauder2d4\"     \n[13] \"plaicepirate8c6\"          \"prawnpredator5d7\"        \n[15] \"redfinpickerelraider744\"  \"ruddraiderced\"           \n[17] \"salmonseeker630\"          \"swimmingsafely92d\"       \n[19] \"tidetamerbe1\"             \"whitesuckerwrangler0b3\"  \n\n\nCode\ndatatable(summary, option = list(page_length = 5), filter = \"top\")"
  },
  {
    "objectID": "Observations/Observation_1.html#disrupted-vessels-after-ssec-was-caught",
    "href": "Observations/Observation_1.html#disrupted-vessels-after-ssec-was-caught",
    "title": "Observation on Seasonality of Oceanus Catch",
    "section": "Disrupted vessels after SSEC was caught",
    "text": "Disrupted vessels after SSEC was caught\n\nReturns route diversion for the vessels\nReturns list of vessel_ids that have diverted from Ghoti in June, after SSEC was caught in May\n\n\n\nCode\nvessel_trips &lt;- time_summary_df %&gt;%\n  mutate(start_date = as.Date(start_date))\n\n# Define the cutoff date for 14 May 2035\ncutoff_date &lt;- as.Date(\"2035-05-14\")\n\ntrips_before_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &lt;= cutoff_date)\n\n# Filter trips that started in June 2035\ntrips_in_june &lt;- vessel_trips %&gt;%\n  filter(start_date &gt;= as.Date(\"2035-06-01\") & start_date &lt; as.Date(\"2035-07-01\"))\n\n# Filter trips that started after 14 May 2035\ntrips_after_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &gt; cutoff_date)\n\n# Function to get unique areas\nget_unique_areas &lt;- function(data) {\n  data %&gt;%\n    pull(unique_areas) %&gt;%\n    strsplit(\", \") %&gt;%\n    unlist() %&gt;%\n    unique()\n}\n\n# Get unique areas per vessel before the cutoff date\nareas_before_cutoff &lt;- trips_before_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_before = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel after the cutoff date\nareas_after_cutoff &lt;- trips_after_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_after = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel in June 2035\nareas_in_june &lt;- trips_in_june %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_june = list(get_unique_areas(cur_data())))\n\n# Combine the data\ncombined_areas &lt;- full_join(areas_before_cutoff, areas_after_cutoff, by = \"vessel_id\") %&gt;%\n  full_join(areas_in_june, by = \"vessel_id\")\n\n# Determine new areas visited, old areas avoided, and old areas avoided in June for each vessel\nresults &lt;- combined_areas %&gt;%\n  rowwise() %&gt;%\n  mutate(new_areas = if(length(setdiff(areas_after, areas_before)) &gt; 0) \n                        paste(setdiff(areas_after, areas_before), collapse = \", \") else NA,\n         old_areas_avoided = if(length(setdiff(areas_before, areas_after)) &gt; 0) \n                                paste(setdiff(areas_before, areas_after), collapse = \", \") else NA,\n         old_areas_avoided_june = if(length(setdiff(areas_before, areas_june)) &gt; 0) \n                                    paste(setdiff(areas_before, areas_june), collapse = \", \") else NA,\n         new_areas_count = ifelse(is.na(new_areas), 0, length(unlist(strsplit(new_areas, \", \")))),\n         old_areas_avoided_count = ifelse(is.na(old_areas_avoided), 0, length(unlist(strsplit(old_areas_avoided, \", \")))),\n         old_areas_avoided_june_count = ifelse(is.na(old_areas_avoided_june), 0, length(unlist(strsplit(old_areas_avoided_june, \", \"))))) %&gt;%\n  select(vessel_id, new_areas, old_areas_avoided, old_areas_avoided_june, new_areas_count, old_areas_avoided_count, old_areas_avoided_june_count) %&gt;%\n  ungroup()\n\n# Print the results\ndatatable(results, options = list(pagelength = 10), filter = \"top\")\n\n\n\n\n\n\nCode\nsubset_with_ghoti &lt;- results %&gt;%\n  filter(grepl(\"Ghoti\", old_areas_avoided_june))\n\n# Print the subset\nunique(subset_with_ghoti$vessel_id)\n\n\n [1] \"amberjackassaulterd52\"      \"barracudabandit836\"        \n [3] \"bigeyetunabanditb73\"        \"bigeyetunabuccaneera16\"    \n [5] \"catfishcapturer7a8\"         \"channelcatfishcapturer175\" \n [7] \"clamcatcherfb3\"             \"cohosalmoncapturera7b\"     \n [9] \"crabcatcher1aa\"             \"fishfinderb9d\"             \n[11] \"fishflingere29\"             \"flukefinder28d\"            \n[13] \"freightforte6f28\"           \"freightfrontiers7134\"      \n[15] \"freightfusion141\"           \"graylinggrabber802\"        \n[17] \"haddockhawkb7c\"             \"hooklinesinkera2d\"         \n[19] \"huron1b3\"                   \"kingfishcapturerbe7\"       \n[21] \"kingsalmonking5b4\"          \"lobsterlooterd41\"          \n[23] \"musselmaraudere9b\"          \"northernpikepirated97\"     \n[25] \"oceanoracle1d0\"             \"opheliacac\"                \n[27] \"redfinpickerelraider744\"    \"ruddraiderced\"             \n[29] \"sailfishswindlerb4f\"        \"salmonseeker630\"           \n[31] \"sardineseeker62e\"           \"seawaysavvy102\"            \n[33] \"snappersnatcher7be\"         \"sockeyesalmonseekerb95\"    \n[35] \"spanishmackerelmaster037\"   \"squidsquasherda9\"          \n[37] \"trawlertriumph31f\"          \"whitemarlinmasterfa1\"      \n[39] \"yellowbullheadbuccaneer968\"\n\n\n\n\n\n\n\n\n\nIUU\nPossible visualisations\n\n\n\n\nIllegal: Unauthorised fishing by vessels that are not given the permission to fish from a particular country. \nIdentifying “Unknown” vessels and activities of vessels that are not registered with “Oceanus” flag.\n\n\nUnreported: Fishing activities that are not reported or under-reported to ports which hampers accurate assessment of fish stocks.\nIdentify vessels that have been identified by transponder ping and port report, but consistently not reporting or under-reporting the volume of fish caught.\n\n\nUnregulated: Overfishing that depletes natural fish stocks and disrupts marine ecosystems.\nIdentify vessels that have consistently out-perform comparable peers, and potentially suggest fishing beyond allowable limits."
  },
  {
    "objectID": "Shiny_app/dashboard.html",
    "href": "Shiny_app/dashboard.html",
    "title": "Vast Challenge - MC 2",
    "section": "",
    "text": "Overview\n\nshinyApp(\n  ui &lt;- fluidPage(\n    titlePanel(\"Oceanus Data Visualization\"),\n    tabsetPanel(\n      tabPanel(\"Interactive Map\",\n               fluidRow(\n                 column(width = 2,\n                        h3(\"Interactive Map Filters\"),\n                        selectInput(\"filter_type\", \"Select Filter Type:\", \n                                    choices = c(\"All\", \"Fishing Ground\", \"City\", \"Island\", \n                                                \"Buoy (Navigation)\", \"Buoy (Fishing)\"), \n                                    selected = \"All\"),\n                        selectizeInput(\"selected_name\", \"Select Area:\", \n                                       choices = c(\"All\"), multiple = TRUE, \n                                       selected = c(\"All\")),\n                        selectizeInput(\"fish_species\", \"Select Fish Species:\", \n                                       choices = c(\"All\", unique_fish_species), multiple = TRUE, \n                                       selected = \"All\"),\n                        selectizeInput(\"activities\", \"Select Activities:\", \n                                       choices = unique_activities, multiple = TRUE, selected = NULL)\n                 ),\n                 column(width = 10,\n                        h3(\"Interactive Map\"),\n                        plotOutput(\"mapPlot\", height = \"600px\")\n                 )\n               )\n      ),\n      tabPanel(\"Vessel Count\",\n               fluidRow(\n                 column(width = 2,\n                        h3(\"Vessel Count Filters\"),\n                        selectizeInput(\"selected_areas\", \"Select Areas:\", \n                                       choices = NULL, \n                                       selected = c(\"City of Haacklee\", \"City of Lomark\", \"City of Himark\", \"City of Paackland\", \"City of South Paackland\"), \n                                       multiple = TRUE),\n                        h4(\"Vessel Type Color Legend\", style = \"font-size: 10px;\"),\n                        lapply(names(vessel_colors), function(type) {\n                          div(style = sprintf(\"background-color:%s; color: black; font-size: 10px; padding: 5px;\", vessel_colors[[type]]),\n                              type)\n                        })\n                 ),\n                 column(width = 10,\n                        h3(\"Unique Vessels per Area\"),\n                        plotOutput(\"vesselPlot\", height = \"600px\")\n                 )\n               )\n      ),\n      tabPanel(\"Cargo Quantity\",\n               fluidRow(\n                 column(width = 2,\n                        h3(\"Cargo Quantity Filters\"),\n                        selectizeInput(\"port\", \"Select Destination Port:\", \n                                       choices = c(\"All Ports\", unique(tx_qty$dest)), \n                                       selected = \"All Ports\", multiple = TRUE),\n                        selectizeInput(\"species\", \"Select Fish Species:\", \n                                       choices = c(\"All Species\", unique(tx_qty$fish_species)), \n                                       selected = \"All Species\"),\n                        h4(\"Fish Species Color Code\", style = \"font-size: 10px;\"),\n                        lapply(names(fish_species_color), function(species) {\n                          div(style = sprintf(\"background-color:%s; color: black; font-size: 10px; padding: 5px;\", fish_species_color[[species]]),\n                              species)\n                        })\n                 ),\n                 column(width = 10,\n                        h3(\"Total Quantity of Cargo per Destination Port\"),\n                        plotOutput(\"barPlot\", height = \"600px\")\n                 )\n               )\n      ),\n      tabPanel(\"Breakdown on Routes most travelled\",\n               fluidPage(\n                 titlePanel(\"Most Frequent Unique Areas Visited\"),\n                 sidebarLayout(\n                   sidebarPanel(\n                     dateRangeInput(\"date_range\", \n                                    label = \"Select Date Range\",\n                                    start = min(time_summary_df$start_date),\n                                    end = max(time_summary_df$end_date)),\n                     selectInput(\"start_city\", \n                                 label = \"Select Start City\",\n                                 choices = c(\"All\", unique(time_summary_df$start_city)),\n                                 selected = \"All\"),\n                     selectInput(\"end_city\", \n                                 label = \"Select End City\",\n                                 choices = c(\"All\", unique(time_summary_df$end_city)),\n                                 selected = \"All\"),\n                     selectInput(\"specific_area\", \n                                 label = \"Select Specific Area\",\n                                 choices = c(\"All\", unique(unlist(strsplit(time_summary_df$unique_areas, \", \")))),\n                                 selected = \"All\",\n                                 multiple = TRUE),\n                     selectInput(\"vessel_company\", \n                                 label = \"Select Vessel Company\",\n                                 choices = c(\"All\", unique(time_summary_df$vessel_company)),\n                                 selected = \"All\"),\n                     textOutput(\"unique_vessels\"),\n                     textOutput(\"total_trips\")\n                   ),\n                   mainPanel(\n                     plotOutput(\"areaPlot\"),\n                     tableOutput(\"summaryTable\")\n                   )\n                 )\n               )\n      )\n    )\n  ),\n  \n  server &lt;- function(input, output, session) {\n    # Geography Plot\n    OceanusGeography &lt;- OceanusGeography %&gt;%\n      mutate(Activities = str_replace_all(Activities, 'c\\\\(|\"|\\\\)', '')) %&gt;%\n      mutate(Activities = str_split(Activities, ', '))\n    \n    filteredData &lt;- reactive({\n      data &lt;- OceanusGeography\n      \n      if (input$filter_type == \"Fishing Ground\") {\n        data &lt;- data %&gt;% filter(X.Kind == \"Fishing Ground\")\n      } else if (input$filter_type == \"City\") {\n        data &lt;- data %&gt;% filter(X.Kind == \"city\")\n      } else if (input$filter_type == \"Island\") {\n        data &lt;- data %&gt;% filter(X.Kind == \"Island\")\n      } else if (input$filter_type == \"Buoy (Navigation)\") {\n        data &lt;- data %&gt;% filter(X.Kind == \"buoy\" & Activities == \"Navigation\")\n      } else if (input$filter_type == \"Buoy (Fishing)\") {\n        data &lt;- data %&gt;% filter(X.Kind == \"buoy\" & grepl(\"fishing\", Activities, ignore.case = TRUE))\n      }\n      \n      if (!is.null(input$fish_species) && \"All\" %in% input$fish_species == FALSE) {\n        data &lt;- data %&gt;% filter(grepl(paste(input$fish_species, collapse = \"|\"), fish_species_present))\n      }\n      \n      if (!is.null(input$activities) && length(input$activities) &gt; 0) {\n        data &lt;- data %&gt;% filter(map_lgl(Activities, ~ any(. %in% input$activities)))\n      }\n      \n      data\n    })\n    \n    observe({\n      selected_names &lt;- unique(filteredData()$Name)\n      default_selections &lt;- c(\"Himark\", \"Paackland\", \"Lomark\", \"Paacklee\", \"South Paacklee\")\n      \n      updateSelectizeInput(session, \"selected_name\",\n                           choices = c(\"All\", unique(c(selected_names, default_selections))),\n                           selected = input$selected_name)\n    })\n    \n    highlightedData &lt;- reactive({\n      if (\"All\" %in% input$selected_name) {\n        filteredData()\n      } else {\n        filteredData() %&gt;% filter(Name %in% input$selected_name)\n      }\n    })\n    \n    output$mapPlot &lt;- renderPlot({\n      plotData &lt;- if (\"All\" %in% input$selected_name) {\n        filteredData()\n      } else {\n        highlightedData()\n      }\n      \n      ggplot() +\n        geom_sf(data = OceanusGeography, fill = NA, color = \"black\", alpha = 0.5) +\n        geom_sf(data = OceanusGeography, aes(fill = X.Kind), alpha = 0.3) +\n        geom_sf(data = highlightedData(), aes(fill = X.Kind), color = \"red\", size = 1) +\n        geom_text_repel(data = plotData, aes(label = Name, geometry = geometry), \n                        stat = \"sf_coordinates\", size = 3) +\n        theme_minimal() +\n        scale_fill_manual(values = c(\"Island\" = \"beige\", \"Fishing Ground\" = \"lightblue\", \n                                     \"Ecological Preserve\" = \"lightgreen\", \"city\" = \"purple\", \"buoy\" = \"darkblue\")) +\n        labs(title = \"Map of Oceanus\", \n             x = \"Longitude\", y = \"Latitude\", fill = \"Type\")\n    })\n    \n    # Cargo Quantity Plot\n    output$barPlot &lt;- renderPlot({\n      if (!is.null(input$port) && \"All Ports\" %in% input$port == FALSE) {\n        filtered_data &lt;- tx_qty %&gt;% filter(dest %in% input$port)\n      } else {\n        filtered_data &lt;- tx_qty\n      }\n      \n      if (!is.null(input$species) && \"All Species\" %in% input$species == FALSE) {\n        filtered_data &lt;- filtered_data %&gt;% filter(fish_species %in% input$species)\n      }\n      \n      df_agg &lt;- filtered_data %&gt;% group_by(dest, fish_species) %&gt;% summarize(qty_tons = sum(qty_tons))\n      \n      ggplot(data = df_agg, aes(x = dest, y = qty_tons, fill = fish_species)) +\n        geom_bar(stat = \"identity\") +\n        scale_fill_manual(values = fish_species_color) +\n        geom_text(aes(label = round(qty_tons, 2)), position = position_stack(vjust = 0.5), size = 3) +\n        labs(title = \"Total Quantity of Cargo per Destination Port\",\n             x = \"Destination Port\", y = \"Total Quantity (tons)\") +\n        theme_minimal() +\n        theme(legend.position = \"none\")\n    })\n    \n    # Vessel Count Plot\n    observe({\n      updateSelectizeInput(session, \"selected_areas\",\n                           choices = unique(ping_activity$area),\n                           selected = c(\"City of Haacklee\", \"City of Lomark\", \"City of Himark\", \"City of Paackland\", \"City of South Paackland\"))\n    })\n    \n    filtered_data &lt;- reactive({\n      if (is.null(input$selected_areas)) {\n        ping_activity\n      } else {\n        ping_activity %&gt;% filter(area %in% input$selected_areas)\n      }\n    })\n    \n    data_processed &lt;- reactive({\n      filtered_data() %&gt;%\n        mutate(area = case_when(\n          area == \"City of Haacklee\" ~ \"Haacklee\",\n          area == \"City of Lomark\" ~ \"Lomark\",\n          area == \"City of Himark\" ~ \"Himark\",\n          area == \"City of Paackland\" ~ \"Paackland\",\n          area == \"City of South Paackland\" ~ \"South Paackland\",\n          TRUE ~ area\n        )) %&gt;%\n        group_by(area, vessel_type) %&gt;%\n        summarise(unique_vessels = n_distinct(vessel_id)) %&gt;%\n        ungroup()\n    })\n    \n    output$vesselPlot &lt;- renderPlot({\n      plot_data &lt;- data_processed()\n      ggplot(plot_data, aes(x = area, y = unique_vessels, fill = vessel_type)) +\n        geom_bar(stat = \"identity\") +\n        scale_fill_manual(values = vessel_colors) +\n        geom_text(data = plot_data %&gt;% filter(vessel_type %in% c(\"Fishing\", \"Cargo_Vessel\")),\n                  aes(label = unique_vessels), position = position_stack(vjust = 0.5), size = 3) +\n        labs(title = \"Unique Vessels per Area\",\n             x = \"Area\",\n             y = \"Count of Unique Vessels\") +\n        theme_minimal() +\n        theme(axis.text.x = element_text(hjust = 1),\n              legend.position = \"none\")\n    })\n    \n    # Breakdown on Routes most travelled Plot\n    filtered_data_routes &lt;- reactive({\n      data &lt;- time_summary_df %&gt;%\n        filter(start_date &gt;= input$date_range[1] & end_date &lt;= input$date_range[2])\n      \n      if (input$start_city != \"All\") {\n        data &lt;- data %&gt;% filter(start_city == input$start_city)\n      }\n      \n      if (input$end_city != \"All\") {\n        data &lt;- data %&gt;% filter(end_city == input$end_city)\n      }\n      \n      if (input$vessel_company != \"All\") {\n        data &lt;- data %&gt;% filter(vessel_company == input$vessel_company)\n      }\n      \n      if (\"All\" %in% input$specific_area) {\n        data\n      } else {\n        data %&gt;% filter(sapply(strsplit(unique_areas_cleaned, \", \"), function(x) any(input$specific_area %in% x)))\n      }\n    })\n    \n    area_summary &lt;- reactive({\n      filtered_data_routes() %&gt;%\n        group_by(unique_areas_cleaned) %&gt;%\n        summarise(\n          unique_vessels = n_distinct(vessel_id),\n          total_trips = n()\n        ) %&gt;%\n        arrange(desc(total_trips)) %&gt;%\n        head(10)\n    })\n    \n    output$unique_vessels &lt;- renderText({\n      paste(\"Count of unique vessels:\", n_distinct(filtered_data_routes()$vessel_id))\n    })\n    \n    output$total_trips &lt;- renderText({\n      paste(\"Total count of trips:\", nrow(filtered_data_routes()))\n    })\n    \n    output$areaPlot &lt;- renderPlot({\n      ggplot(area_summary(), aes(x = reorder(unique_areas_cleaned, total_trips), y = total_trips)) +\n        geom_bar(stat = \"identity\", fill = 'skyblue') +\n        coord_flip() +\n        labs(title = \"Most Frequent Unique Areas Visited\",\n             x = \"Unique Areas\",\n             y = \"Total Trips\") +\n        theme_minimal()\n    })\n    \n    output$summaryTable &lt;- renderTable({\n      top_route &lt;- area_summary() %&gt;%\n        slice(1) %&gt;%\n        pull(unique_areas_cleaned)\n      \n      filtered_data_routes() %&gt;%\n        filter(unique_areas_cleaned == top_route) %&gt;%\n        group_by(vessel_id, vessel_company, vessel_type) %&gt;%\n        summarise(trips = n()) %&gt;%\n        arrange(desc(trips)) %&gt;%\n        head(10)\n    })\n  }\n)\n\n\n\n\n\n\nSouth Seafood Express\n\nping_activity &lt;- ping_activity %&gt;%\n  mutate(area = gsub(\"^City of\", \"\", area)) %&gt;%\n  mutate(area = gsub(\"^\\\\s+\", \"\", area))\n\n# combining location coordinates with ping activity\nping_activity &lt;- ping_activity %&gt;%\n  left_join(OceanusLocations_df %&gt;% select(c(\"Name\", \"XCOORD\", \"YCOORD\")),\n            by = c(\"area\" = \"Name\"))\n\n# convert dataframe into point data.frame with x and y coords.\n\nvessel_movement_sf &lt;- ping_activity %&gt;%\n  st_as_sf(coords = c(\"XCOORD\", \"YCOORD\"), \n           crs = 4326)\n\nvessel_movement_sf &lt;- vessel_movement_sf %&gt;%\n  arrange(vessel_id, start_time)\n\n#write_csv(vessel_movement_sf, \"data/vessel_movement.csv\")\n\n# Getting median dwell time statistics \nvessel_movement_sf$start_time &lt;- as.POSIXct(vessel_movement_sf$start_time, format=\"%Y-%m-%dT%H:%M:%SZ\")\n\nvessel_movement_sf &lt;- vessel_movement_sf %&gt;%\n  group_by(vessel_id, area, geometry) %&gt;%\n  summarise(median_dwell_time = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'vessel_id', 'area'. You can override using\nthe `.groups` argument.\n\n# to include filter for start time - period of interest\n\n\n# Allocating location groups\n\ngroup_mapping &lt;- list(\n  \"City\" = c(\"Haacklee\", \"Himark\", \"Lomark\", \"Paackland\", \"South Paackland\", \"Port Grove\"),\n  \"Navigation\" = c(\"Nav 1\", \"Nav 2\", \"Nav 3\", \"Nav A\", \"Nav B\", \"Nav C\", \"Nav D\", \"Nav E\"),\n  \"FishingGround\" = c(\"Cod Table\", \"Tuna Shelf\", \"Wrasse Beds\"),\n  \"Buoy(Fishing)\" = c(\"Exit East\", \"Exit South\", \"Exit North\", \"Exit West\"),\n  \"EcologicalPreserve\" = c(\"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\")\n)\n\n# Add a column for the group in the dataframe\nvessel_movement_sf &lt;- vessel_movement_sf %&gt;%\n  mutate(group = case_when(\n    area %in% group_mapping$City ~ \"City\",\n    area %in% group_mapping$Navigation ~ \"Navigation\",\n    area %in% group_mapping$FishingGround ~ \"FishingGround\",\n    area %in% group_mapping$`Buoy(Fishing)` ~ \"Buoy(Fishing)\",\n    area %in% group_mapping$EcologicalPreserve ~ \"EcologicalPreserve\",\n    TRUE ~ \"Other\"\n  ))\n\n\nvessel_trajectory &lt;- vessel_movement_sf %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(do_union = FALSE) %&gt;%\n  st_cast(\"LINESTRING\")\n\nkind_colors &lt;- c(\n  \"Island\" = \"beige\", \n  \"Fishing Ground\" = \"lightblue\", \n  \"Ecological Preserve\" = \"lightgreen\", \n  \"City\" = \"purple\", \n  \"Buoy(Fishing)\" = \"blue\"\n)\n\n# UI for the Shiny app\nshinyApp( ui &lt;- fluidPage(\n  titlePanel(\"Vessel Movement and Median Dwell Time at Locations\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"vessel\", \"Select Vessel\", choices = unique(vessel_movement_sf$vessel_id), selected = \"roachrobberdb6\"),\n      sliderInput(\"percentile\", \"Select Percentile for Box Plot\", min = 90, max = 100, value = 90, step = 1)\n    ),\n    mainPanel(\n      tabsetPanel(\n        tabPanel(\"Route Taken\", \n                 plotOutput(\"trajectoryPlot\", height = \"600px\")\n        ),\n        tabPanel(\"Dwell Time on Map\", \n                 plotOutput(\"mapPlot\", height = \"600px\")\n        ),\n        tabPanel(\"Cities, Fishing Ground, Preserve\", \n                 plotOutput(\"group1Plot\", height = \"600px\")\n        ),\n        tabPanel(\"Navigation & Fishing Buoy\", \n                 plotOutput(\"group2Plot\", height = \"600px\")\n        )\n      )\n    )\n  )\n) , \n\n# Server logic for the Shiny app\nserver &lt;- function(input, output) {\n  filteredData &lt;- reactive({\n    vessel_movement_sf %&gt;% filter(vessel_id == input$vessel)\n  })\n  \n  percentileFilteredData &lt;- reactive({\n    percent &lt;- input$percentile / 100\n    otherData &lt;- vessel_movement_sf %&gt;% filter(vessel_id != input$vessel)\n    \n    lower_bound &lt;- otherData %&gt;% \n      st_set_geometry(NULL) %&gt;% # Temporarily remove geometry for quantile calculation\n      group_by(area) %&gt;% \n      summarise(lower = quantile(median_dwell_time, (1 - percent) / 2, na.rm = TRUE))\n    \n    upper_bound &lt;- otherData %&gt;% \n      st_set_geometry(NULL) %&gt;% # Temporarily remove geometry for quantile calculation\n      group_by(area) %&gt;% \n      summarise(upper = quantile(median_dwell_time, 1 - (1 - percent) / 2, na.rm = TRUE))\n    \n    filtered_otherData &lt;- otherData %&gt;%\n      left_join(lower_bound, by = \"area\") %&gt;%\n      left_join(upper_bound, by = \"area\") %&gt;%\n      filter(!is.na(median_dwell_time) & median_dwell_time != \"\", \n             median_dwell_time &gt;= lower & median_dwell_time &lt;= upper) %&gt;%\n      st_as_sf() # Convert back to sf object if needed\n    \n    return(filtered_otherData)\n  })\n  \n  vessel_trajectory_selected &lt;- reactive({\n    vessel_trajectory &lt;- vessel_movement_sf %&gt;%\n      group_by(vessel_id) %&gt;%\n      summarize(do_union = FALSE) %&gt;%\n      st_cast(\"LINESTRING\")\n    \n    vessel_trajectory %&gt;% filter(vessel_id == input$vessel)\n  })\n  \n  output$trajectoryPlot &lt;- renderPlot({\n    plotData &lt;- filteredData()\n    trajectoryData &lt;- vessel_trajectory_selected()\n    \n    ggplot() +\n      geom_sf(data = OceanusGeography, fill = NA, color = \"black\", alpha = 0.5) +\n      geom_sf(data = OceanusGeography, aes(fill = X.Kind), alpha = 0.3) + \n      scale_fill_manual(values = kind_colors) +\n      geom_sf(data = trajectoryData, \n              aes(color = \"red\"), \n              size = 1) +\n      geom_text(data = OceanusLocations_df, \n                aes(x = XCOORD, y = YCOORD, label = Name), \n                size = 2, hjust = 1, vjust = 1) +\n      theme_minimal() +\n      labs(title = \"Trajectories of Selected Vessel\", \n           x = \"Longitude\", y = \"Latitude\", color = \"Vessel ID\")\n  })\n  \n  output$mapPlot &lt;- renderPlot({\n    plotData &lt;- filteredData()\n    \n    ggplot() +\n      geom_sf(data = OceanusGeography, fill = NA, color = \"black\", alpha = 0.5) +\n      geom_sf(data = OceanusGeography, aes(fill = X.Kind), alpha = 0.3) +\n      geom_point(data = plotData, aes(x = st_coordinates(geometry)[,1], y = st_coordinates(geometry)[,2], size = median_dwell_time), color = \"red\", alpha = 0.5) +\n      geom_text_repel(data = plotData, aes(x = st_coordinates(geometry)[,1], y = st_coordinates(geometry)[,2], label = area), size = 3) +\n      theme_minimal() +\n      scale_fill_manual(values = kind_colors) +\n      labs(title = \"Map of Oceanus\", x = \"Longitude\", y = \"Latitude\", fill = \"Type\") +\n      theme(aspect.ratio = 1) # Ensure square aspect ratio for map\n  })\n  \n  output$group1Plot &lt;- renderPlot({\n    plotData &lt;- filteredData()\n    filteredOtherData &lt;- percentileFilteredData()\n    \n    # Filter data for group 1\n    group1Data &lt;- filteredOtherData %&gt;% filter(area %in% unlist(group_mapping[c(\"City\", \"FishingGround\", \"EcologicalPreserve\")]))\n    \n    ggplot() +\n      geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf), fill = NA) +\n      geom_rect(aes(xmin = -Inf, xmax = 6.5, ymin = -Inf, ymax = Inf), fill = \"beige\", alpha = 0.5) +\n      geom_rect(aes(xmin = 6.5, xmax = 9.5, ymin = -Inf, ymax = Inf), fill = \"lightblue\", alpha = 0.5) +\n      geom_rect(aes(xmin = 9.5, xmax = Inf, ymin = -Inf, ymax = Inf), fill = \"lightgreen\", alpha = 0.5) +\n      geom_boxplot(data = group1Data, aes(x = factor(area, levels = unlist(group_mapping[c(\"City\", \"FishingGround\", \"EcologicalPreserve\")])), y = median_dwell_time), outlier.shape = NA, fill = \"grey\", alpha = 0.5) +\n      geom_jitter(data = group1Data, aes(x = factor(area, levels = unlist(group_mapping[c(\"City\", \"FishingGround\", \"EcologicalPreserve\")])), y = median_dwell_time), width = 0.2, alpha = 0.5) +\n      geom_point(data = plotData %&gt;% filter(area %in% unlist(group_mapping[c(\"City\", \"FishingGround\", \"EcologicalPreserve\")])), aes(x = factor(area, levels = unlist(group_mapping[c(\"City\", \"FishingGround\", \"EcologicalPreserve\")])), y = median_dwell_time), color = \"red\", size = 3) +\n      annotate(\"text\", x = 3.5, y = Inf, label = \"City\", vjust = 1.5) +\n      annotate(\"text\", x = 8, y = Inf, label = \"Fishing Ground\", vjust = 1.5) +\n      annotate(\"text\", x = 11.5, y = Inf, label = \"Ecological Preserve\", vjust = 1.5) +\n      theme_minimal() +\n      labs(title = \"Median Dwell Time at City, Fishing Grounds, and Ecological Preserves\", x = \"Location\", y = \"Median Dwell Time\") +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for better readability\n  })\n  \n  output$group2Plot &lt;- renderPlot({\n    plotData &lt;- filteredData()\n    filteredOtherData &lt;- percentileFilteredData()\n    \n    # Filter data for group 2\n    group2Data &lt;- filteredOtherData %&gt;% filter(area %in% unlist(group_mapping[c(\"Navigation\", \"Buoy(Fishing)\")]))\n    \n    ggplot() +\n      geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf), fill = NA) +\n      geom_rect(aes(xmin = -Inf, xmax = 8.5, ymin = -Inf, ymax = Inf), fill = \"lightgrey\", alpha = 0.5) +\n      geom_rect(aes(xmin = 8.5, xmax = Inf, ymin = -Inf, ymax = Inf), fill = \"darkblue\", alpha = 0.5) +\n      geom_boxplot(data = group2Data, aes(x = factor(area, levels = unlist(group_mapping[c(\"Navigation\", \"Buoy(Fishing)\")])), y = median_dwell_time), outlier.shape = NA, fill = \"grey\", alpha = 0.5) +\n      geom_jitter(data = group2Data, aes(x = factor(area, levels = unlist(group_mapping[c(\"Navigation\", \"Buoy(Fishing)\")])), y = median_dwell_time), width = 0.2, alpha = 0.5) +\n      geom_point(data = plotData %&gt;% filter(area %in% unlist(group_mapping[c(\"Navigation\", \"Buoy(Fishing)\")])), aes(x = factor(area, levels = unlist(group_mapping[c(\"Navigation\", \"Buoy(Fishing)\")])), y = median_dwell_time), color = \"red\", size = 3) +\n      annotate(\"text\", x = 4.25, y = Inf, label = \"Navigation\", vjust = 1.5) +\n      annotate(\"text\", x = 10.25, y = Inf, label = \"Buoy Fishing\", vjust = 1.5) +\n      theme_minimal() +\n      labs(title = \"Median Dwell Time at Navigation and Buoy Fishing Areas\", x = \"Location\", y = \"Median Dwell Time\") +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for better readability\n  })\n}\n)\n\n\n\n\n\n\nSeasonality & Suspicious Vessel\n\ntx_qty &lt;- read_csv(\"data/tx_qty.csv\")\n\nRows: 5307 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): last_edited_by, cargo_id, dest, fish_species\ndbl  (1): qty_tons\ndttm (3): date_added, last_edited_date, tx_date\ndate (1): deliver_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntx_qty_2035 &lt;- tx_qty %&gt;%\n  mutate(date = as.Date(format(tx_date, \"%Y-%m-%d\")))\n\n# Prepare Cargo Count Data\nall_dates_cargo &lt;- seq(min(tx_qty_2035$date), max(tx_qty_2035$date), by = \"day\")\nall_dests &lt;- unique(tx_qty_2035$dest)\ncomplete_grid_cargo &lt;- expand.grid(date = all_dates_cargo, dest = all_dests)\n\nagg_data_cargo &lt;- tx_qty_2035 %&gt;%\n  group_by(dest, date) %&gt;%\n  summarise(count_distinct_cargo = n_distinct(cargo_id)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'dest'. You can override using the\n`.groups` argument.\n\nagg_data_cargo &lt;- complete_grid_cargo %&gt;%\n  left_join(agg_data_cargo, by = c(\"date\", \"dest\")) %&gt;%\n  replace_na(list(count_distinct_cargo = 0))\n\nagg_data_cargo &lt;- agg_data_cargo %&gt;%\n  mutate(month = month(date, label = TRUE, abbr = TRUE),\n         week = week(date),\n         weekday = wday(date, label = TRUE, abbr = TRUE, week_start = 7))\n\n# Prepare Vessel Count Data\nE_Hbrpt_v &lt;- E_Hbrpt_v %&gt;%\n  mutate(date = as.Date(format(as.POSIXct(arr_date, format=\"%Y-%m-%dT%H:%M:%SZ\"), \"%Y-%m-%d\")))\n\nall_dates_vessel &lt;- seq(min(E_Hbrpt_v$date), max(E_Hbrpt_v$date), by = \"day\")\nall_ports &lt;- unique(E_Hbrpt_v$port)\ncomplete_grid_vessel &lt;- expand.grid(date = all_dates_vessel, port = all_ports)\n\nagg_data_vessel &lt;- E_Hbrpt_v %&gt;%\n  group_by(port, date) %&gt;%\n  summarise(count_distinct_vessels = n_distinct(vessel_id)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'port'. You can override using the\n`.groups` argument.\n\nagg_data_vessel &lt;- complete_grid_vessel %&gt;%\n  left_join(agg_data_vessel, by = c(\"date\", \"port\")) %&gt;%\n  replace_na(list(count_distinct_vessels = 0))\n\nagg_data_vessel &lt;- agg_data_vessel %&gt;%\n  mutate(month = month(date, label = TRUE, abbr = TRUE),\n         day = day(date),\n         weekday = wday(date, label = TRUE, abbr = TRUE, week_start = 7))\n\n# Prepare Cargo Quantity Data\nping_activity$start_time &lt;- ymd_hms(ping_activity$start_time)\n\nWarning: 1771 failed to parse.\n\nping_activity$month &lt;- floor_date(ping_activity$start_time, \"month\")\n\nping_activity$month &lt;- as.Date(ping_activity$month)\n\nagg_data &lt;- ping_activity %&gt;%\n  group_by(area, vessel_id, month) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'area', 'vessel_id'. You can override using\nthe `.groups` argument.\n\nnearest_tx_date$tx_date &lt;- as.Date(nearest_tx_date$tx_date)\nnearest_tx_date$month &lt;- format(nearest_tx_date$tx_date, \"%m\")\n\n# Define UI for the application\nshinyApp(ui &lt;- fluidPage(\n  titlePanel(\"Interactive Calendar Heatmap\"),\n  \n  fluidRow(\n    column(12,  # Full width for the tabset panel\n      tabsetPanel(\n        tabPanel(\"Calendar Map of Cargo Count\",\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"city_cargo\", \"Select City:\", choices = unique(agg_data_cargo$dest), \n                          selected = c(\"City of Haacklee\", \"City of Lomark\", \"City of South Paackland\"), multiple = TRUE)\n            ),\n            \n            mainPanel(\n              plotlyOutput(\"calendarHeatmapCargo\", height = \"1200px\")\n            )\n          )\n        ),\n        tabPanel(\"Calendar Map of Vessel Count\",\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"city_vessel\", \"Select City:\", choices = unique(agg_data_vessel$port), \n                          selected = c(\"City of Haacklee\", \"City of Lomark\", \"City of South Paackland\"), \n                          multiple = TRUE)\n            ),\n            \n            mainPanel(\n              plotlyOutput(\"calendarHeatmapVessel\", height = \"1200px\")\n            )\n          )\n        ),\n        tabPanel(\"Distribution of Cargo Quantity by Month\",\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"fish_species\", \"Select Fish Species:\", \n                          choices = c(\"All\", unique(nearest_tx_date$fish_species)),\n                          selected = \"All\",\n                          multiple = TRUE),\n              selectInput(\"vessel_id\", \"Select Vessel ID to Highlight:\", \n                          choices = unique(nearest_tx_date$vessel_id),\n                          selected = NULL,\n                          multiple = TRUE),\n              selectInput(\"dest\", \"Select Destination:\", \n                          choices = c(\"All\", unique(nearest_tx_date$dest)),\n                          selected = \"All\",\n                          multiple = TRUE)\n            ),\n            \n            mainPanel(\n              uiOutput(\"plots\"),\n              DTOutput(\"summary_table\")\n            )\n          )\n        ),\n        tabPanel(\"Distribution of Dwell Time per Area\",\n          sidebarLayout(\n            sidebarPanel(\n              selectInput(\"selected_area\", \"Select Area(s):\", \n                          choices = c(\"All\", unique(ping_activity$area)), \n                          selected = c(\"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\"), \n                          multiple = TRUE),\n              selectInput(\"exclude_vessel\", \"Exclude Vessel ID(s):\", \n                          choices = unique(ping_activity$vessel_id), \n                          selected = \"heartofoceanusf11\", \n                          multiple = TRUE),\n              selectInput(\"highlight_vessel\", \"Highlight Vessel ID(s):\", \n                          choices = unique(ping_activity$vessel_id), \n                          selected = c(\"gurnardgrabberd9a\", \"oceanoracle1d0\"), \n                          multiple = TRUE)\n            ),\n            \n            mainPanel(\n              uiOutput(\"dwell_time_plots\")\n            )\n          )\n        )\n      )\n    )\n  )\n), \n\n# Define server logic\nserver &lt;- function(input, output) {\n  output$calendarHeatmapCargo &lt;- renderPlotly({\n    filtered_data &lt;- agg_data_cargo %&gt;%\n      filter(dest %in% input$city_cargo)\n    \n    color_palette &lt;- c(\"white\", colorRampPalette(c(\"lightgreen\", \"darkgreen\"))(20))\n    \n    fill_scale &lt;- scale_fill_manual(values = color_palette, name = \"Count of Distinct Cargo IDs\", na.value = \"white\")\n    \n    p &lt;- ggplot(filtered_data, aes(x = weekday, y = interaction(month, week), fill = factor(count_distinct_cargo))) +\n      geom_tile(color = \"white\", size = 0.5, na.rm = FALSE) +\n      fill_scale +\n      facet_wrap(~dest, scales = \"free_y\", nrow = 1) +\n      labs(title = \"Calendar Heatmap of Distinct Cargo Counts per City for 2035 (Feb to Nov)\", x = \"Day of Week\", y = \"Month and Week\") +\n      theme_minimal() +\n      theme(panel.grid.major = element_line(color = \"grey\", size = 0.5),\n            panel.grid.minor = element_line(color = \"grey\", size = 0.5),\n            axis.text.y = element_text(size = 6),\n            axis.text.x = element_text(angle = 90, hjust = 1))\n    \n    ggplotly(p)\n  })\n  \n  output$calendarHeatmapVessel &lt;- renderPlotly({\n    filtered_data &lt;- agg_data_vessel %&gt;%\n      filter(port %in% input$city_vessel)\n    \n    color_palette &lt;- c(\"white\", colorRampPalette(c(\"lightblue\", \"darkblue\"))(20))\n    \n    fill_scale &lt;- scale_fill_manual(values = color_palette, name = \"Count of Distinct Vessel IDs\", na.value = \"white\")\n    \n    p &lt;- ggplot(filtered_data, aes(x = weekday, y = month, fill = factor(count_distinct_vessels), text = paste(\"Date: \", date, \"&lt;br&gt;Count: \", count_distinct_vessels))) +\n      geom_tile(color = \"white\", size = 0.5, na.rm = FALSE) +\n      fill_scale +\n      facet_wrap(~port, scales = \"free_y\", nrow = 1) +\n      labs(title = \"Calendar Heatmap of Distinct Vessel Counts per City for 2035 (Feb to Nov)\", x = \"Day of Week\", y = \"Month\") +\n      theme_minimal() +\n      theme(panel.grid.major = element_line(color = \"grey\", size = 0.5),\n            panel.grid.minor = element_line(color = \"grey\", size = 0.5),\n            axis.text.y = element_text(size = 10),\n            axis.text.x = element_text(angle = 90, hjust = 1))\n    \n    ggplotly(p, tooltip = \"text\")\n  })\n  \n  output$plots &lt;- renderUI({\n    selected_dests &lt;- if(\"All\" %in% input$dest) unique(nearest_tx_date$dest) else input$dest\n    selected_species &lt;- if(\"All\" %in% input$fish_species) unique(nearest_tx_date$fish_species) else input$fish_species\n    \n    if (\"All\" %in% input$dest & \"All\" %in% input$fish_species) {\n      plot_output_list &lt;- list(plotlyOutput(\"plot_aggregate\"))\n    } else {\n      plot_output_list &lt;- lapply(selected_dests, function(destination) {\n        plot_output_sublist &lt;- lapply(selected_species, function(species) {\n          plotlyOutput(paste0(\"plot_\", destination, \"_\", species))\n        })\n        do.call(tagList, plot_output_sublist)\n      })\n    }\n    do.call(tagList, plot_output_list)\n  })\n  \n  output$plot_aggregate &lt;- renderPlotly({\n    tryCatch({\n      filtered_data &lt;- nearest_tx_date %&gt;% \n        filter(fish_species %in% unique(nearest_tx_date$fish_species), \n               dest %in% unique(nearest_tx_date$dest))\n      \n      filtered_data$color &lt;- ifelse(filtered_data$vessel_id %in% input$vessel_id, \"red\", \"blue\")\n      \n      p &lt;- ggplot(filtered_data, aes(x = month, y = qty_tons)) +\n        geom_jitter(aes(color = color, text = vessel_id), width = 0.4, alpha = 0.3, size = 1) +\n        geom_boxplot(alpha = 0.6, outlier.shape = NA) +\n        labs(title = \"Aggregate Cargo Weight Across All Fish Species and Destinations\",\n             x = \"Month\", y = \"Quantity in Tons\") +\n        scale_color_identity()\n      \n      ggplotly(p, tooltip = \"text\")\n    }, error = function(e) {\n      renderText(\"No Plot Available\")\n    })\n  })\n  \n  lapply(unique(nearest_tx_date$dest), function(destination) {\n    lapply(unique(nearest_tx_date$fish_species), function(species) {\n      output[[paste0(\"plot_\", destination, \"_\", species)]] &lt;- renderPlotly({\n        selected_dests &lt;- if(\"All\" %in% input$dest) unique(nearest_tx_date$dest) else input$dest\n        selected_species &lt;- if(\"All\" %in% input$fish_species) unique(nearest_tx_date$fish_species) else input$fish_species\n        if (!(species %in% selected_species) || !(destination %in% selected_dests)) return(NULL)\n        \n        tryCatch({\n          filtered_data &lt;- nearest_tx_date %&gt;% \n            filter(fish_species == species, dest == destination)\n          \n          filtered_data$color &lt;- ifelse(filtered_data$vessel_id %in% input$vessel_id, \"red\", \"blue\")\n          \n          p &lt;- ggplot(filtered_data, aes(x = month, y = qty_tons)) +\n            geom_jitter(aes(color = color, text = vessel_id), width = 0.4, alpha = 0.3, size = 1) +\n            geom_boxplot(alpha = 0.6, outlier.shape = NA) +\n            labs(title = paste(\"Cargo Weight for\", species, \"at\", destination),\n                 x = \"Month\", y = \"Quantity in Tons\") +\n            scale_color_identity()\n          \n          ggplotly(p, tooltip = \"text\")\n        }, error = function(e) {\n          renderText(\"No Plot Available\")\n        })\n      })\n    })\n  })\n  \n  output$summary_table &lt;- renderDT({\n    selected_dests &lt;- if(\"All\" %in% input$dest) unique(nearest_tx_date$dest) else input$dest\n    selected_species &lt;- if(\"All\" %in% input$fish_species) unique(nearest_tx_date$fish_species) else input$fish_species\n    \n    filtered_data &lt;- nearest_tx_date %&gt;% \n      filter(fish_species %in% selected_species, dest %in% selected_dests)\n    \n    summary_stats &lt;- filtered_data %&gt;%\n      group_by(month) %&gt;%\n      summarize(\n        upper_limit = quantile(qty_tons, 0.9)\n      )\n    \n    filtered_data &lt;- filtered_data %&gt;%\n      left_join(summary_stats, by = \"month\")\n    \n    exceeding_data &lt;- filtered_data %&gt;%\n      filter(qty_tons &gt; upper_limit)\n    \n    frequency_data &lt;- exceeding_data %&gt;%\n      group_by(vessel_id) %&gt;%\n      summarize(frequency = n()) %&gt;%\n      arrange(desc(frequency))\n    \n    datatable(frequency_data, options = list(pageLength = 5))\n  })\n  \n  filtered_dwell_data &lt;- reactive({\n    data &lt;- agg_data %&gt;% \n      filter(!vessel_id %in% input$exclude_vessel,\n             if (\"All\" %in% input$selected_area) TRUE else area %in% input$selected_area)\n    data\n  })\n  \n  output$dwell_time_plots &lt;- renderUI({\n    areas &lt;- if (\"All\" %in% input$selected_area) unique(ping_activity$area) else input$selected_area\n    plot_list &lt;- lapply(areas, function(area) {\n      plotlyOutput(outputId = paste0(\"plot_\", gsub(\" \", \"_\", area)), height = 300)\n    })\n    do.call(tagList, plot_list)\n  })\n  \n  observeEvent(filtered_dwell_data(), {\n    areas &lt;- if (\"All\" %in% input$selected_area) unique(ping_activity$area) else input$selected_area\n    lapply(areas, function(area) {\n      area_data &lt;- filtered_dwell_data() %&gt;% filter(area == area)\n      \n      output[[paste0(\"plot_\", gsub(\" \", \"_\", area))]] &lt;- renderPlotly({\n        p &lt;- ggplot(area_data, aes(x = month, y = median_dwell, text = vessel_id)) +\n          geom_boxplot(outlier.shape = NA) +\n          geom_jitter(data = area_data %&gt;% filter(vessel_id %in% input$highlight_vessel), \n                      aes(group = vessel_id), width = 0.2, color = \"red\", alpha = 0.5, size = 1.5) +\n          geom_jitter(data = area_data %&gt;% filter(!vessel_id %in% input$highlight_vessel), \n                      aes(group = vessel_id), width = 0.2, color = \"blue\", alpha = 0.5, size = 1.5) +\n          labs(title = area,\n               x = \"Month\",\n               y = \"Median Dwell Time\") +\n          scale_x_date(date_labels = \"%b\", date_breaks = \"1 month\") +\n          theme_minimal() +\n          theme(legend.position = \"none\")\n        ggplotly(p, tooltip = \"text\")\n      })\n    })\n  })\n})"
  }
]
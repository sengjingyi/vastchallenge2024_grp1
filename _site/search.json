[
  {
    "objectID": "Proposal.html",
    "href": "Proposal.html",
    "title": "Proposal for Mini Challenge 2",
    "section": "",
    "text": "To prevent illegal fishing from happening again, FishEye analyst aims to perform geographic and temporal analysis of CatchNet data."
  },
  {
    "objectID": "Proposal.html#use-of-network-analysis",
    "href": "Proposal.html#use-of-network-analysis",
    "title": "Proposal for Mini Challenge 2",
    "section": "3.1. Use of Network Analysis:",
    "text": "3.1. Use of Network Analysis:\n\nNetwork Metrics Analysis (e.g., Centrality indices) to identify relationship of actors within the network data.\nUse of Facet Graphs to visualise relationship across edges (facet_edges()) and nodes (facet_nodes())\n\nReference: Modelling, Visualising and Analysing Network Data with R"
  },
  {
    "objectID": "Proposal.html#use-of-geospatial-analysis",
    "href": "Proposal.html#use-of-geospatial-analysis",
    "title": "Proposal for Mini Challenge 2",
    "section": "3.2. Use of Geospatial Analysis",
    "text": "3.2. Use of Geospatial Analysis\n\nPlot vessel movement across Oceanus geography given Oceanus geojson file to identify most frequent routes and travel patterns by vessel.\nIdentify if the fish species caught in cargos delivered to port is reasonable and if any illegal fishes caught from ecological preserves.\n\nReference: Visualising and Analysing Geographical Data - Choropleth Mapping with R"
  },
  {
    "objectID": "Proposal.html#use-of-temporal-analysis",
    "href": "Proposal.html#use-of-temporal-analysis",
    "title": "Proposal for Mini Challenge 2",
    "section": "3.3. Use of Temporal Analysis",
    "text": "3.3. Use of Temporal Analysis\n\nPinpoint rough timeline where South Seafood Express Corp has been caught for illegal behaviour based on vessel movement.\nCompare the fishing behaviour (cargo loaded, vessels movement) before and after South Seafood Express Corp has been caught.\nIdentify any seasonality in fishing patterns across time at various ports.\n\nReference: Visualising and Analysing Time-oriented Data"
  },
  {
    "objectID": "Proposal.html#sub-question-1",
    "href": "Proposal.html#sub-question-1",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.1 Sub-question 1:",
    "text": "4.1 Sub-question 1:\nIn order to associate vessels with their probable cargo, Transaction data and delivery doc data can be match first to determine which cargo contain which fish species.\nThis step is followed by connecting transponder ping data of vessels to ports with deliver date of cargo. This will give probable link between and vessels and cargo.\n\nUsing this data, visualisations can be performed to show which vessels/company deliver which cargo/ fish species. These visualisations can be further break down by season to check any seasonal trends in cargo delivery.\n\n4.1.1 Early Prototype for Sub-question 1:\n\nInteractive data table with the purpose of returning the list of `cargo_id` and `vessel_id` based on filtering of `Port name` and `Date` (+/- 5 days) and underlying conditions as defined above."
  },
  {
    "objectID": "Proposal.html#sub-question-2",
    "href": "Proposal.html#sub-question-2",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.2 Sub-question 2:",
    "text": "4.2 Sub-question 2:\nTo answer where SouthSeafood Express Corp vessels perform their illegal fishing, graph visualization based on Vessels’ transponder ping data can be used to map locations that SouthSeafood Express Corp vessels been to. This visualization will uncover suspicious activities such as vessel visiting locations not designated for fishing.  By checking the timestamp of these suspicious activities, it is possible to determine when illegal fishing was being performed.  The vessels movement of SouthSeafood Express Corp can be visualized in comparison with other companies in Oceanus to confirm SouthSeafood illegal fishing behaviour.\nReferring to sub-question 1, vessels can be connected to their respective probable cargo. Visualization of SouthSeafood Express Corp vessels and their probable cargo can be compared to that of other companies to determine how does the fishing activity varies.\nOn measure used to describe fishing activity is the relative time spent at respective regions, in comparison to other vessels of similar nature. Filtering the vessel by type (fishing), tonnage and overall length and most frequently visited ports, we can observe the typical behaviour of vessels similar to South Seafood Express. From there, we can compare their relative catch to see if South Seafood Express is able to have higher cargo tonnage at their subsequent port.\n\n4.2.1 Early Prototype for Sub-question 2:\nSouthSeafood Express Corp Vessels Movement\n\nExploring the relative dwell time that SouthSeafood Express Corp Vessels spend at their respective regions in comparison to other vessels. (Red: SouthSeafood Express Corp Vessels; Grey: Other vessels)\n(Note: Diagrams below are illustrative, further fine-tuning is required for representative visualization)\n\nAfter mapping the cargo to their probable vessels, we identify the expected catch from vessels that have taken similar routes as South Seafood Express Corp vessels. Comparing the breakdown of their cargo, we should observe that South Seafood Express Corp has more catch from their illegal fishing activities.\n(Note: Diagrams below are illustrative, further fine-tuning is required for representative visualization)"
  },
  {
    "objectID": "Proposal.html#sub-question-3",
    "href": "Proposal.html#sub-question-3",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.3 Sub-question 3:",
    "text": "4.3 Sub-question 3:\n\nIdentifying vessels with similar travel pattern as South Seafood Express Corp\nIdentifying vessels with high dwell time in non-fishing areas.\nIdentifying vessels that have associated cargo with illegal fish species."
  },
  {
    "objectID": "Proposal.html#sub-question-4",
    "href": "Proposal.html#sub-question-4",
    "title": "Proposal for Mini Challenge 2",
    "section": "4.4 Sub-question 4:",
    "text": "4.4 Sub-question 4:\n\nPerform temporal analysis to see when South Seafood Vessels stop operation.\nCompare the travel patterns of other vessels before and after the timeframe that South Seafood Vessels ceased operation.\nCompare the cargo quantity of fish caught at the various ports before and after South Seafood Vessels ceased operation.\n\n\n4.4.1 Early Prototype for Sub-question 4:\nTemporal Analysis on SouthSeafood Express Corp’s vessel’s operations."
  },
  {
    "objectID": "Observations/Observation_2.html",
    "href": "Observations/Observation_2.html",
    "title": "Observation on Suspicious Fishing Behaviours",
    "section": "",
    "text": "In this article, we will explore the possible signs of suspicious fishing behaviour in relation to IUU.\n\n\n\n\n\n\n\nIUU\nPossible visualisations\n\n\n\n\nIllegal: Unauthorised fishing by vessels that in restricted areas (e.g., Ecological Reserves).\nIdentifying vessels that have overstayed in the ecological preserves.\n\n\nUnregulated: Overfishing that depletes natural fish stocks and disrupts marine ecosystems.\nIdentify vessels that have consistently out-perform comparable peers, and potentially suggest fishing beyond allowable limits.\n\n\nUnreported: Fishing activities that are not reported or under-reported to ports which hampers accurate assessment of fish stocks.\nIdentify suspicious vessels that have changed their route to avoid “Ghoti Reserve” after SSEC was caught.\n\n\n\n\n\nCode\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly, RColorBrewer)\n\ntx_qty &lt;- read_csv(\"data/tx_qty.csv\")\nping_activity &lt;- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v &lt;- read_csv(\"data/hbrpt.csv\")\nN_vessel &lt;- read_csv(\"data/N_vessel.csv\")\n#location_legend &lt;- read_csv(\"data/location_legend.csv\")\n#vessel_movement &lt;- read_rds(\"data/rds/vessel_movement_data.rds\")\nnearest_tx_date &lt;- read_csv(\"data/mapped_records.csv\")\ntime_summary_df &lt;- read_csv(\"data/time-summary.csv\")\n\n\n\n\nZooming into the 3 ecological preserves, we observed the Transponder Ping records to identify any fishing vessels that have overstayed their visits.\nSteps taken:\n\nSummarise the median dwell time of vessels per month at each area.\nIdentify those vessels that is of the top 90% of the area per month and include a counter Is above 90%. Where vessels are flagged at least once, return these vessels details for investigation.\n\n\n\nCode\nping_activity$start_time &lt;- ymd_hms(ping_activity$start_time)\nping_activity$month &lt;- floor_date(ping_activity$start_time, \"month\")\n\n# Convert the month column to Date format (first day of each month)\nping_activity$month &lt;- as.Date(ping_activity$month)\n\n# Calculate median dwell time per vessel_id per month for each area\nagg_data &lt;- ping_activity %&gt;%\n  group_by(area, vessel_id, month) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nagg_data2 &lt;- agg_data %&gt;%\n  group_by(area, month) %&gt;%\n  mutate(`90%_dwell_time` = quantile(median_dwell, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(`Is_above_90%` = ifelse(median_dwell &gt; `90%_dwell_time`, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\n# count the number of times that vessel stayed &gt;90% dwell time\nsummary_data &lt;- agg_data2 %&gt;%\n  filter(area %in% c( \"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\"), \n         `Is_above_90%` == \"Yes\") %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(count_above_90 = n()) %&gt;%\n  filter(count_above_90 &gt;=2) %&gt;% ungroup()\n\nsummary_data_DT &lt;- summary_data %&gt;% \n  left_join(N_vessel %&gt;% select(\"vessel_id\", \"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\"),  \n            by = c(\"vessel_id\" = \"vessel_id\"))\n\nsummary_data_DT &lt;- summary_data_DT %&gt;%  select(-vessel_id) %&gt;% select(\"area\", \"count_above_90\", \"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\")\n\ncolnames(summary_data_DT) &lt;- c(\"Overstayed Area\", \"Frequency\", \"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\nghoti_overstay &lt;- summary_data_DT %&gt;% filter(`Overstayed Area` == \"Ghoti Preserve\")\nnemo_overstay &lt;- summary_data_DT %&gt;% filter(`Overstayed Area` == \"Nemo Reef\")\ndon_overstay &lt;- summary_data_DT %&gt;% filter(`Overstayed Area` == \"Don Limpet Preserve\")\n\ndatatable(ghoti_overstay, options (pageLength = 3))  # 12 vessels\n\n\n\n\n\n\nCode\ndatatable(nemo_overstay, options (pageLength = 3))   #6 vessels \n\n\n\n\n\n\nCode\ndatatable(nemo_overstay, options (pageLength = 2))  # 2 vessels         \n\n\n\n\n\n\n\n\nWe further observed that there maybe some false positive, when visualising on the Transponder Ping data set. Notably suspicious vessels include: Gunard Grabber, Sockeye Salmon Seeker, Largemouth Bass Looter, Brill Bandit, Sea Bass Bandit\nWe observed that despite SSEC’s Snapper Snatcher being caught in May 2035, some vessels seek cover for the month of June, while others continued their operations from July 2035 onwards.\n\n\nCode\nselected_vessels &lt;- ghoti_overstay$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Ghoti Preserve\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Ghoti Preserve\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nWe further repeated this test for Nemo Reefs, and noted vessels such as “Mr Ray” and “Louie the II” consistently overstayed in Nemo Reefs, and this is much higher than other vessels. As well as “Clown Fish” and “Bluefish Bandit” with fluctuating median dwell time above the 75%.\nNote: The vessel of “Heart of Oceanus” was excluded as it has exceptionally long dwell time in February 2035 that distorted the plot. “Costa Smeralda” and “Dolphin Dasher” excluded from April 2035 plot.\n\n\nCode\nselected_vessels &lt;- nemo_overstay$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Nemo Reef\", vessel_id != \"heartofoceanusf11\", \n         vessel_name != \"Costa Smeralda\", vessel_name != \"Dolphin Dasher\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np2 &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Nemo Reef\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p2, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nFor Don Limpet Preserve, we noted 2 vessels with exceptionally long dwell time - Himark Royal and Mr Ray. However, for Himark Royal, the median time per month is relatively constant, and this may point to the vessel being permanently located there. Instead, Mr Ray is more suspicious with fluctuating activities in September 2035 and November 2035.\n\n\nCode\nselected_vessels &lt;- don_overstay$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Don Limpet Preserve\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np3 &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Nemo Reef\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p3, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\nAnother sign of suspicious activity is where the vessel or it’s company is able to consistently return high volumes of catch, comparing it with its peers.\nSteps taken:\n\nCreate a calculated field for the column on Percent_fill to see the relative proportion the cargo associated with the vessel occupies for each cargo-vessel mapping.\nFor vessels whose Percent_fill contributes to the top 90 percentile per month, highlight these vessel in new column of Percent_fill_above_90\nReturn the count of suspicious vessel who is able to return Percent_fill_above_90 for 20 or more times.\n\nWe observed a total of 19 vessels have consistently returned cargo with high percentage filled of their vessels. This may be due to small vessel size or possibility of over-fishing. Hence, we will further investigate these 19 vessels.\nTo test out, we will be focusing on the 3 species:\n\nBeauvoir - That can be found in all ecological preserves and fishing grounds.\nHarland - Only found in Tuna Shelf\nWrasse - Found in Wrasse Beds, Ghoti Preserve and Nemo Reefs and contributing to the highest quantity, besides Cod that peaks during September and October.\n\nOut of these 19 vessels, we note 2 foreign fishing vessels, namely:\n\nVessel of “Redfin Pickerel Raider” from the company “Solis PLC” from the nation of “Solterrix”\nVessel of “Bigeye Tuna Buccaneer” from the company “Gomez-Mccormick” from the nation of “Calabrand”.\n\n\n\nCode\nfish_species_labels &lt;- c(\n  \"gadusnspecificatae4ba\" = \"Cod/Gadus n.specificatae\", \n  \"piscesfrigus900\" = \"Birdseye/Pisces frigus\", \n  \"piscesfoetidaae7\" = \"Sockfish/Pisces foetida\", \n  \"labridaenrefert9be\" = \"Wrasse/Labridae n.refert\", \n  \"habeaspisces4eb\" = \"Beauvoir/Habeas pisces\", \n  \"piscissapidum9b7\" = \"Harland/Piscis sapidum\", \n  \"thunnininveradb7\" = \"Tuna/Thunnini n.vera\", \n  \"piscisosseusb6d\" = \"Offidiaa/Piscis osseus\", \n  \"piscessatisb87\" = \"Helenaa/Pisces satis\", \n  \"oncorhynchusrosea790\" = \"Salmon\"\n)\n\nvessel_cargo_map &lt;- nearest_tx_date %&gt;% \n  left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\")) %&gt;% \n  group_by(cargo_id, tx_date, vessel_id, fish_species) %&gt;%\n  summarise(percent_fill = qty_tons/tonnage)\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;% mutate(tx_date = as.Date(tx_date))\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;%\n  group_by(fish_species, month = floor_date(tx_date, \"month\")) %&gt;%\n  mutate(monthly_mean = mean(percent_fill, na.rm = TRUE),\n         percentile_90 = quantile(percent_fill, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(percent_fill_above_90 = ifelse(percent_fill &gt; percentile_90, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\nvessel_percent_fill_counts &lt;- vessel_cargo_map %&gt;%\n  filter(percent_fill_above_90 == \"Yes\") %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(count_above_90 = n()) %&gt;%\n  ungroup()\n\n# Filter for vessel_id with count &gt;= 5\nfiltered_vessel_counts &lt;- vessel_percent_fill_counts %&gt;%\n  filter(count_above_90 &gt;= 20)\n\n# Summarising for table \nsus_overfish_cargo &lt;- nearest_tx_date %&gt;% \n  filter(vessel_id %in% filtered_vessel_counts$vessel_id) %&gt;%\n  group_by(vessel_id, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE),\n            distinct_cargo_count = n_distinct(cargo_id)) %&gt;%\n  ungroup()\n            \nN_vessel_overfish &lt;- N_vessel %&gt;% filter(vessel_id %in% sus_overfish_cargo$vessel_id) %&gt;% select(c(\"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\")) \n\ncolnames(N_vessel_overfish) &lt;- c(\"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\ndatatable(N_vessel_overfish, options(page_length = 3))\n\n\n\n\n\n\n\n\nWe observed that there are 19 suspects that may have overfished Beauvoir, and this included the usual suspect of “Gurnard Grabber” and “Largemouth Bass Looter” that has overstayed in Ghoti and also new suspects of “Prawn Predator” and “Barracuda Baiter”.\nThere is a notable single instance by “Swimming Safely” vessel from Tanamarine Fishing Co, that has contributed to 44% of their vessel filled for that 1 particular cargo. This is unusual as most fishing vessels tend to have a combination of other fishes and do not fill to max capacity.\n\n\nCode\nbeauvoir_suspects &lt;- sus_overfish_cargo %&gt;% filter(fish_species == \"habeaspisces4eb\") # 19\n\nfish_species_filtered &lt;- \"habeaspisces4eb\" # Replace with desired fish species\nfiltered_data &lt;- nearest_tx_date %&gt;%\n  filter(fish_species == fish_species_filtered) %&gt;%\n  mutate(month = floor_date(tx_date, \"month\"))\n\nfiltered_data &lt;- filtered_data %&gt;% left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\"))\n\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(percent_fill = qty_tons / tonnage)\n\n# Calculate the median percent_fill per vessel per month\nmedian_percent_fill_data &lt;- filtered_data %&gt;%\n  group_by(month, vessel_id, vessel_name, vessel_company) %&gt;%\n  summarize(median_percent_fill = median(percent_fill, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# List of suspect vessel IDs\nsuspect_vessels &lt;- beauvoir_suspects$vessel_id\n\n# Create a unique color for each suspect vessel and assign black to others\nunique_suspect_vessels &lt;- unique(suspect_vessels)\nn_colors &lt;- length(unique_suspect_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_suspect_vessels)\n\nvessel_name_colors &lt;- median_percent_fill_data %&gt;%\n  filter(vessel_id %in% suspect_vessels) %&gt;%\n  distinct(vessel_id, vessel_name) %&gt;%\n  mutate(color = vessel_colors[vessel_id]) %&gt;%\n  select(vessel_name, color) %&gt;%\n  deframe()\n\n# Add black color for \"Other\" vessels\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(color = ifelse(vessel_id %in% suspect_vessels, vessel_name, \"Other\"))\n\n# Set color for \"Other\" vessels to black\nvessel_name_colors[\"Other\"] &lt;- \"black\"\n\n# Create a new column for the text label\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(text_label = paste(\"Vessel Name:\", vessel_name, \"&lt;br&gt;\",\n                            \"Vessel Company:\", vessel_company, \"&lt;br&gt;\",\n                            \"Percent Fill:\", round(median_percent_fill, 2)))\n\n# Create the plot\np4 &lt;- ggplot(median_percent_fill_data, aes(x = month, y = median_percent_fill, color = color)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = text_label), width = 0.5, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_name_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = paste(\"Median Percent Fill per Vessel by Month for Beauvoir\"),\n       x = \"Month\",\n       y = \"Median Percent Fill\",\n       color = \"Vessel ID\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p4, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nWe observed that there overlapping 19 suspects that have overfished Harland, similar to Beavoir, thought the quantities and percentile vary. New prominent suspects include “Cutthroat Trout Catcher” in May and September, and “Swimming Safely” in July.\nThe foreign vessel of “Bigeye Tuna Buccaneer” from Solterrix has also notably high catch fill in September, and this coincides with the catch for Beavoir in September in the earlier plot. This may suggest that foreign vessels have offloaded their cargo in Oceanus during the peak seasons of fishing, but may not have abided to the fishing limits.\n\n\nCode\nharland_suspects &lt;- sus_overfish_cargo %&gt;% filter(fish_species == \"piscissapidum9b7\")\n\nfish_species_filtered &lt;- \"piscissapidum9b7\"\nfiltered_data &lt;- nearest_tx_date %&gt;%\n  filter(fish_species == fish_species_filtered) %&gt;%\n  mutate(month = floor_date(tx_date, \"month\"))\n\nfiltered_data &lt;- filtered_data %&gt;% left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\"))\n\n# Add percent_fill column\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(percent_fill = qty_tons / tonnage)\n\n# Calculate the median percent_fill per vessel per month\nmedian_percent_fill_data &lt;- filtered_data %&gt;%\n  group_by(month, vessel_id, vessel_name, vessel_company) %&gt;%\n  summarize(median_percent_fill = median(percent_fill, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# List of suspect vessel IDs\nsuspect_vessels &lt;- harland_suspects$vessel_id\n\n# Create a unique color for each suspect vessel and assign black to others\nunique_suspect_vessels &lt;- unique(suspect_vessels)\nn_colors &lt;- length(unique_suspect_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_suspect_vessels)\n\nvessel_name_colors &lt;- median_percent_fill_data %&gt;%\n  filter(vessel_id %in% suspect_vessels) %&gt;%\n  distinct(vessel_id, vessel_name) %&gt;%\n  mutate(color = vessel_colors[vessel_id]) %&gt;%\n  select(vessel_name, color) %&gt;%\n  deframe()\n\n# Add black color for \"Other\" vessels\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(color = ifelse(vessel_id %in% suspect_vessels, vessel_name, \"Other\"))\n\n# Set color for \"Other\" vessels to black\nvessel_name_colors[\"Other\"] &lt;- \"black\"\n\n# Create a new column for the text label\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(text_label = paste(\"Vessel Name:\", vessel_name, \"&lt;br&gt;\",\n                            \"Vessel Company:\", vessel_company, \"&lt;br&gt;\",\n                            \"Percent Fill:\", round(median_percent_fill, 2)))\n\n# Create the plot\np5 &lt;- ggplot(median_percent_fill_data, aes(x = month, y = median_percent_fill, color = color)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = text_label), width = 0.5, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_name_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = paste(\"Median Percent Fill per Vessel by Month for Harland\"),\n       x = \"Month\",\n       y = \"Median Percent Fill\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p5, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nSimilar to Harland and Beavoir, the 19 suspected vessels are also likely suspects for overfishing for Wrasse. The usual suspect of “Prawn Predator”, “Cutthroat Trout Catcher”, “Swimming Safely” has high percent fill relative to other fishing vessels.\nInterestingly, while SSEC’s vessels were previously not identified as overfishing suspects with 20 counts of cargo greater than monthly 90 percentile, the plot has illustrated possibility of Snapper Snatcher overfishing in May, with a fill of 26% of Wrasse out of it’s vessels tonnage. This suggest that the filter of 20 counts could be narrowed or proportion based on the total cargoes returned by the same vessel to catch more overfishing suspects.\n\n\nCode\nwrasse_suspects &lt;- sus_overfish_cargo %&gt;% filter(fish_species == \"labridaenrefert9be\")\n\nfish_species_filtered &lt;- \"labridaenrefert9be\"\nfiltered_data &lt;- nearest_tx_date %&gt;%\n  filter(fish_species == fish_species_filtered) %&gt;%\n  mutate(month = floor_date(tx_date, \"month\"))\n\nfiltered_data &lt;- filtered_data %&gt;% left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\"))\n\n# Add percent_fill column\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(percent_fill = qty_tons / tonnage)\n\n# Calculate the median percent_fill per vessel per month\nmedian_percent_fill_data &lt;- filtered_data %&gt;%\n  group_by(month, vessel_id, vessel_name, vessel_company) %&gt;%\n  summarize(median_percent_fill = median(percent_fill, na.rm = TRUE), .groups = 'drop')\n\n# List of suspect vessel IDs\nsuspect_vessels &lt;- wrasse_suspects$vessel_id\n\n# Create a unique color for each suspect vessel and assign black to others\nunique_suspect_vessels &lt;- unique(suspect_vessels)\nn_colors &lt;- length(unique_suspect_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_suspect_vessels)\n\nvessel_name_colors &lt;- median_percent_fill_data %&gt;%\n  filter(vessel_id %in% suspect_vessels) %&gt;%\n  distinct(vessel_id, vessel_name) %&gt;%\n  mutate(color = vessel_colors[vessel_id]) %&gt;%\n  select(vessel_name, color) %&gt;%\n  deframe()\n\n# Add black color for \"Other\" vessels\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(color = ifelse(vessel_id %in% suspect_vessels, vessel_name, \"Other\"))\n\n# Set color for \"Other\" vessels to black\nvessel_name_colors[\"Other\"] &lt;- \"black\"\n\n# Create a new column for the text label\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(text_label = paste(\"Vessel Name:\", vessel_name, \"&lt;br&gt;\",\n                            \"Vessel Company:\", vessel_company, \"&lt;br&gt;\",\n                            \"Percent Fill:\", round(median_percent_fill, 2)))\n\n# Create the plot\np6 &lt;- ggplot(median_percent_fill_data, aes(x = month, y = median_percent_fill, color = color, group = month)) +\n  geom_boxplot(outlier.shape = NA) +\n  geom_jitter(aes(text = text_label), width = 0.5, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_name_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = paste(\"Median Percent Fill per Vessel by Month for Wrasse\"),\n       x = \"Month\",\n       y = \"Median Percent Fill\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p6, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\nLastly, we considered any drastic shift in vessel routes, especially away from Ghoti Reserve, where SSEC’s Snapper Snatcher has trespass.\nSteps taken:\n\nSubset the trips taken per vessel into 3 time periods. (1) Before SSEC was caught (before 14 May 2035), (2) Immediately after SSEC was caught, for the month of June, and (3) July onwards.\nListed down the unique areas visited by the vessel and did a comparison on the changes in areas that the vessel has Avoided in June , Avoided_after May and Newly visited after May.\n\nWe observed that there are 29 vessels that have previously visited “Ghoti Preserve” in May and before, but has purposefully avoided it in June 2035 and returned again in July onwards. While the change in travel route may be due to coincidence, there’s also a high possibility these vessels were intentionally avoiding scrutiny from the authorities for their dubious activities in June, and resumed from July onwards.\nOut of this 29 vessels, we observed the usual suspects of Oceanus fishing vessels “Bigeye Tuna Buccaneer”, “Barracuda Bandit” and “Fish Finder”. And 3 foreign vessels, 2 of which were suspects of overfishing as mentioned earlier.\n\n(New) Vessel of “Sockeye Salmon Seeker”, from company of “Mcpherson-Wright” from nation of “Kethilim”\n(Overfishing Suspect) Vessel of “Redfin Pickerel Raider” from the company “Solis PLC” from the nation of “Solterrix”\n(Overfishing Suspect) Vessel of “Bigeye Tuna Buccaneer” from the company “Gomez-Mccormick” from the nation of “Calabrand”.\n\n\n\nCode\nvessel_trips &lt;- time_summary_df %&gt;%\n  mutate(start_date = as.Date(start_date))\n\n# Define the cutoff date for 14 May 2035\ncutoff_date &lt;- as.Date(\"2035-05-14\")\n\ntrips_before_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &lt;= cutoff_date)\n\n# Filter trips that started in June 2035\ntrips_in_june &lt;- vessel_trips %&gt;%\n  filter(start_date &gt;= as.Date(\"2035-06-01\") & start_date &lt; as.Date(\"2035-07-01\"))\n\n# Filter trips that started after 14 May 2035\ntrips_after_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &gt; cutoff_date)\n\n# Function to get unique areas\nget_unique_areas &lt;- function(data) {\n  data %&gt;%\n    pull(unique_areas) %&gt;%\n    strsplit(\", \") %&gt;%\n    unlist() %&gt;%\n    unique()\n}\n\n# Get unique areas per vessel before the cutoff date\nareas_before_cutoff &lt;- trips_before_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_before = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel after the cutoff date\nareas_after_cutoff &lt;- trips_after_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_after = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel in June 2035\nareas_in_june &lt;- trips_in_june %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_june = list(get_unique_areas(cur_data())))\n\n# Combine the data\ncombined_areas &lt;- full_join(areas_before_cutoff, areas_after_cutoff, by = \"vessel_id\") %&gt;%\n  full_join(areas_in_june, by = \"vessel_id\")\n\n# Determine new areas visited, old areas avoided, and old areas avoided in June for each vessel\nresults &lt;- combined_areas %&gt;%\n  rowwise() %&gt;%\n  mutate(new_areas = if(length(setdiff(areas_after, areas_before)) &gt; 0) \n                        paste(setdiff(areas_after, areas_before), collapse = \", \") else NA,\n         old_areas_avoided = if(length(setdiff(areas_before, areas_after)) &gt; 0) \n                                paste(setdiff(areas_before, areas_after), collapse = \", \") else NA,\n         old_areas_avoided_june = if(length(setdiff(areas_before, areas_june)) &gt; 0) \n                                    paste(setdiff(areas_before, areas_june), collapse = \", \") else NA,\n         new_areas_count = ifelse(is.na(new_areas), 0, length(unlist(strsplit(new_areas, \", \")))),\n         old_areas_avoided_count = ifelse(is.na(old_areas_avoided), 0, length(unlist(strsplit(old_areas_avoided, \", \")))),\n         old_areas_avoided_june_count = ifelse(is.na(old_areas_avoided_june), 0, length(unlist(strsplit(old_areas_avoided_june, \", \"))))\n         ) %&gt;%\n  ungroup()\n\n# Add new columns to identify vessels that avoided \"Ghoti Preserve\" in June but returned after the cutoff period\nresults &lt;- results %&gt;%\n  mutate(avoided_ghoti_june = ifelse(grepl(\"Ghoti Preserve\", old_areas_avoided_june), TRUE, FALSE),\n         returned_to_ghoti_after_cutoff = ifelse(avoided_ghoti_june & grepl(\"Ghoti Preserve\", areas_after), TRUE, FALSE))\n\n# Select relevant columns for the final output\nfinal_results &lt;- results %&gt;%\n  select(vessel_id, new_areas, old_areas_avoided, old_areas_avoided_june, new_areas_count, old_areas_avoided_count, old_areas_avoided_june_count, avoided_ghoti_june, returned_to_ghoti_after_cutoff)\n\n\n# Print the results\ndatatable(results, options = list(pagelength = 10), filter = \"top\")\n\n\n\n\n\n\nCode\nsubset_avoid_ghoti_june_returned_aft &lt;- final_results %&gt;% filter(avoided_ghoti_june == TRUE & returned_to_ghoti_after_cutoff == TRUE)\n\nN_vessel_avoid_ghoti &lt;- N_vessel %&gt;% \n  filter(vessel_id %in% subset_avoid_ghoti_june_returned_aft$vessel_id) %&gt;%\n  select(c(\"vessel_name\", \"vessel_company\", \"vessel_type\", \n           \"tonnage\", \"length_overall\", \"flag_country\")) \n\ncolnames(N_vessel_avoid_ghoti) &lt;- c(\"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\ndatatable(N_vessel_avoid_ghoti, options = list(pageLength = 3, autowidth = TRUE))\n\n\n\n\n\n\nIllustration of Vessels Avoiding Ghoti in June and Returning in\n\n\nCode\nN_vessel_avoid_ghoti_c &lt;- N_vessel_avoid_ghoti %&gt;% \n  filter(`Vessel Name` != \"White Marlin Master\", \n         `Vessel Name` !=  \"Ocean Oracle\", \n         `Vessel Name` !=  \"Sailfish Swindler\")\n\nselected_vessels &lt;- N_vessel_avoid_ghoti_c$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Ghoti Preserve\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Ghoti Preserve\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p, tooltip = \"text\")"
  },
  {
    "objectID": "Observations/Observation_2.html#unauthorised---vessels-with-possibility-of-illegal-fishing",
    "href": "Observations/Observation_2.html#unauthorised---vessels-with-possibility-of-illegal-fishing",
    "title": "Observation on Suspicious Fishing Behaviours",
    "section": "",
    "text": "Zooming into the 3 ecological preserves, we observed the Transponder Ping records to identify any fishing vessels that have overstayed their visits.\nSteps taken:\n\nSummarise the median dwell time of vessels per month at each area.\nIdentify those vessels that is of the top 90% of the area per month and include a counter Is above 90%. Where vessels are flagged at least once, return these vessels details for investigation.\n\n\n\nCode\nping_activity$start_time &lt;- ymd_hms(ping_activity$start_time)\nping_activity$month &lt;- floor_date(ping_activity$start_time, \"month\")\n\n# Convert the month column to Date format (first day of each month)\nping_activity$month &lt;- as.Date(ping_activity$month)\n\n# Calculate median dwell time per vessel_id per month for each area\nagg_data &lt;- ping_activity %&gt;%\n  group_by(area, vessel_id, month) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nagg_data2 &lt;- agg_data %&gt;%\n  group_by(area, month) %&gt;%\n  mutate(`90%_dwell_time` = quantile(median_dwell, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(`Is_above_90%` = ifelse(median_dwell &gt; `90%_dwell_time`, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\n# count the number of times that vessel stayed &gt;90% dwell time\nsummary_data &lt;- agg_data2 %&gt;%\n  filter(area %in% c( \"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\"), \n         `Is_above_90%` == \"Yes\") %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(count_above_90 = n()) %&gt;%\n  filter(count_above_90 &gt;=2) %&gt;% ungroup()\n\nsummary_data_DT &lt;- summary_data %&gt;% \n  left_join(N_vessel %&gt;% select(\"vessel_id\", \"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\"),  \n            by = c(\"vessel_id\" = \"vessel_id\"))\n\nsummary_data_DT &lt;- summary_data_DT %&gt;%  select(-vessel_id) %&gt;% select(\"area\", \"count_above_90\", \"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\")\n\ncolnames(summary_data_DT) &lt;- c(\"Overstayed Area\", \"Frequency\", \"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\nghoti_overstay &lt;- summary_data_DT %&gt;% filter(`Overstayed Area` == \"Ghoti Preserve\")\nnemo_overstay &lt;- summary_data_DT %&gt;% filter(`Overstayed Area` == \"Nemo Reef\")\ndon_overstay &lt;- summary_data_DT %&gt;% filter(`Overstayed Area` == \"Don Limpet Preserve\")\n\ndatatable(ghoti_overstay, options (pageLength = 3))  # 12 vessels\n\n\n\n\n\n\nCode\ndatatable(nemo_overstay, options (pageLength = 3))   #6 vessels \n\n\n\n\n\n\nCode\ndatatable(nemo_overstay, options (pageLength = 2))  # 2 vessels         \n\n\n\n\n\n\n\n\nWe further observed that there maybe some false positive, when visualising on the Transponder Ping data set. Notably suspicious vessels include: Gunard Grabber, Sockeye Salmon Seeker, Largemouth Bass Looter, Brill Bandit, Sea Bass Bandit\nWe observed that despite SSEC’s Snapper Snatcher being caught in May 2035, some vessels seek cover for the month of June, while others continued their operations from July 2035 onwards.\n\n\nCode\nselected_vessels &lt;- ghoti_overstay$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Ghoti Preserve\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Ghoti Preserve\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nWe further repeated this test for Nemo Reefs, and noted vessels such as “Mr Ray” and “Louie the II” consistently overstayed in Nemo Reefs, and this is much higher than other vessels. As well as “Clown Fish” and “Bluefish Bandit” with fluctuating median dwell time above the 75%.\nNote: The vessel of “Heart of Oceanus” was excluded as it has exceptionally long dwell time in February 2035 that distorted the plot. “Costa Smeralda” and “Dolphin Dasher” excluded from April 2035 plot.\n\n\nCode\nselected_vessels &lt;- nemo_overstay$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Nemo Reef\", vessel_id != \"heartofoceanusf11\", \n         vessel_name != \"Costa Smeralda\", vessel_name != \"Dolphin Dasher\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np2 &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Nemo Reef\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p2, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nFor Don Limpet Preserve, we noted 2 vessels with exceptionally long dwell time - Himark Royal and Mr Ray. However, for Himark Royal, the median time per month is relatively constant, and this may point to the vessel being permanently located there. Instead, Mr Ray is more suspicious with fluctuating activities in September 2035 and November 2035.\n\n\nCode\nselected_vessels &lt;- don_overstay$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Don Limpet Preserve\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np3 &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Nemo Reef\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p3, tooltip = \"text\")"
  },
  {
    "objectID": "Observations/Observation_2.html#unregulated---vessels-with-possibility-of-overfishing",
    "href": "Observations/Observation_2.html#unregulated---vessels-with-possibility-of-overfishing",
    "title": "Observation on Suspicious Fishing Behaviours",
    "section": "",
    "text": "Another sign of suspicious activity is where the vessel or it’s company is able to consistently return high volumes of catch, comparing it with its peers.\nSteps taken:\n\nCreate a calculated field for the column on Percent_fill to see the relative proportion the cargo associated with the vessel occupies for each cargo-vessel mapping.\nFor vessels whose Percent_fill contributes to the top 90 percentile per month, highlight these vessel in new column of Percent_fill_above_90\nReturn the count of suspicious vessel who is able to return Percent_fill_above_90 for 20 or more times.\n\nWe observed a total of 19 vessels have consistently returned cargo with high percentage filled of their vessels. This may be due to small vessel size or possibility of over-fishing. Hence, we will further investigate these 19 vessels.\nTo test out, we will be focusing on the 3 species:\n\nBeauvoir - That can be found in all ecological preserves and fishing grounds.\nHarland - Only found in Tuna Shelf\nWrasse - Found in Wrasse Beds, Ghoti Preserve and Nemo Reefs and contributing to the highest quantity, besides Cod that peaks during September and October.\n\nOut of these 19 vessels, we note 2 foreign fishing vessels, namely:\n\nVessel of “Redfin Pickerel Raider” from the company “Solis PLC” from the nation of “Solterrix”\nVessel of “Bigeye Tuna Buccaneer” from the company “Gomez-Mccormick” from the nation of “Calabrand”.\n\n\n\nCode\nfish_species_labels &lt;- c(\n  \"gadusnspecificatae4ba\" = \"Cod/Gadus n.specificatae\", \n  \"piscesfrigus900\" = \"Birdseye/Pisces frigus\", \n  \"piscesfoetidaae7\" = \"Sockfish/Pisces foetida\", \n  \"labridaenrefert9be\" = \"Wrasse/Labridae n.refert\", \n  \"habeaspisces4eb\" = \"Beauvoir/Habeas pisces\", \n  \"piscissapidum9b7\" = \"Harland/Piscis sapidum\", \n  \"thunnininveradb7\" = \"Tuna/Thunnini n.vera\", \n  \"piscisosseusb6d\" = \"Offidiaa/Piscis osseus\", \n  \"piscessatisb87\" = \"Helenaa/Pisces satis\", \n  \"oncorhynchusrosea790\" = \"Salmon\"\n)\n\nvessel_cargo_map &lt;- nearest_tx_date %&gt;% \n  left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\")) %&gt;% \n  group_by(cargo_id, tx_date, vessel_id, fish_species) %&gt;%\n  summarise(percent_fill = qty_tons/tonnage)\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;% mutate(tx_date = as.Date(tx_date))\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;%\n  group_by(fish_species, month = floor_date(tx_date, \"month\")) %&gt;%\n  mutate(monthly_mean = mean(percent_fill, na.rm = TRUE),\n         percentile_90 = quantile(percent_fill, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(percent_fill_above_90 = ifelse(percent_fill &gt; percentile_90, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\nvessel_percent_fill_counts &lt;- vessel_cargo_map %&gt;%\n  filter(percent_fill_above_90 == \"Yes\") %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(count_above_90 = n()) %&gt;%\n  ungroup()\n\n# Filter for vessel_id with count &gt;= 5\nfiltered_vessel_counts &lt;- vessel_percent_fill_counts %&gt;%\n  filter(count_above_90 &gt;= 20)\n\n# Summarising for table \nsus_overfish_cargo &lt;- nearest_tx_date %&gt;% \n  filter(vessel_id %in% filtered_vessel_counts$vessel_id) %&gt;%\n  group_by(vessel_id, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE),\n            distinct_cargo_count = n_distinct(cargo_id)) %&gt;%\n  ungroup()\n            \nN_vessel_overfish &lt;- N_vessel %&gt;% filter(vessel_id %in% sus_overfish_cargo$vessel_id) %&gt;% select(c(\"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\")) \n\ncolnames(N_vessel_overfish) &lt;- c(\"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\ndatatable(N_vessel_overfish, options(page_length = 3))\n\n\n\n\n\n\n\n\nWe observed that there are 19 suspects that may have overfished Beauvoir, and this included the usual suspect of “Gurnard Grabber” and “Largemouth Bass Looter” that has overstayed in Ghoti and also new suspects of “Prawn Predator” and “Barracuda Baiter”.\nThere is a notable single instance by “Swimming Safely” vessel from Tanamarine Fishing Co, that has contributed to 44% of their vessel filled for that 1 particular cargo. This is unusual as most fishing vessels tend to have a combination of other fishes and do not fill to max capacity.\n\n\nCode\nbeauvoir_suspects &lt;- sus_overfish_cargo %&gt;% filter(fish_species == \"habeaspisces4eb\") # 19\n\nfish_species_filtered &lt;- \"habeaspisces4eb\" # Replace with desired fish species\nfiltered_data &lt;- nearest_tx_date %&gt;%\n  filter(fish_species == fish_species_filtered) %&gt;%\n  mutate(month = floor_date(tx_date, \"month\"))\n\nfiltered_data &lt;- filtered_data %&gt;% left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\"))\n\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(percent_fill = qty_tons / tonnage)\n\n# Calculate the median percent_fill per vessel per month\nmedian_percent_fill_data &lt;- filtered_data %&gt;%\n  group_by(month, vessel_id, vessel_name, vessel_company) %&gt;%\n  summarize(median_percent_fill = median(percent_fill, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# List of suspect vessel IDs\nsuspect_vessels &lt;- beauvoir_suspects$vessel_id\n\n# Create a unique color for each suspect vessel and assign black to others\nunique_suspect_vessels &lt;- unique(suspect_vessels)\nn_colors &lt;- length(unique_suspect_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_suspect_vessels)\n\nvessel_name_colors &lt;- median_percent_fill_data %&gt;%\n  filter(vessel_id %in% suspect_vessels) %&gt;%\n  distinct(vessel_id, vessel_name) %&gt;%\n  mutate(color = vessel_colors[vessel_id]) %&gt;%\n  select(vessel_name, color) %&gt;%\n  deframe()\n\n# Add black color for \"Other\" vessels\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(color = ifelse(vessel_id %in% suspect_vessels, vessel_name, \"Other\"))\n\n# Set color for \"Other\" vessels to black\nvessel_name_colors[\"Other\"] &lt;- \"black\"\n\n# Create a new column for the text label\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(text_label = paste(\"Vessel Name:\", vessel_name, \"&lt;br&gt;\",\n                            \"Vessel Company:\", vessel_company, \"&lt;br&gt;\",\n                            \"Percent Fill:\", round(median_percent_fill, 2)))\n\n# Create the plot\np4 &lt;- ggplot(median_percent_fill_data, aes(x = month, y = median_percent_fill, color = color)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = text_label), width = 0.5, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_name_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = paste(\"Median Percent Fill per Vessel by Month for Beauvoir\"),\n       x = \"Month\",\n       y = \"Median Percent Fill\",\n       color = \"Vessel ID\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p4, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nWe observed that there overlapping 19 suspects that have overfished Harland, similar to Beavoir, thought the quantities and percentile vary. New prominent suspects include “Cutthroat Trout Catcher” in May and September, and “Swimming Safely” in July.\nThe foreign vessel of “Bigeye Tuna Buccaneer” from Solterrix has also notably high catch fill in September, and this coincides with the catch for Beavoir in September in the earlier plot. This may suggest that foreign vessels have offloaded their cargo in Oceanus during the peak seasons of fishing, but may not have abided to the fishing limits.\n\n\nCode\nharland_suspects &lt;- sus_overfish_cargo %&gt;% filter(fish_species == \"piscissapidum9b7\")\n\nfish_species_filtered &lt;- \"piscissapidum9b7\"\nfiltered_data &lt;- nearest_tx_date %&gt;%\n  filter(fish_species == fish_species_filtered) %&gt;%\n  mutate(month = floor_date(tx_date, \"month\"))\n\nfiltered_data &lt;- filtered_data %&gt;% left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\"))\n\n# Add percent_fill column\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(percent_fill = qty_tons / tonnage)\n\n# Calculate the median percent_fill per vessel per month\nmedian_percent_fill_data &lt;- filtered_data %&gt;%\n  group_by(month, vessel_id, vessel_name, vessel_company) %&gt;%\n  summarize(median_percent_fill = median(percent_fill, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# List of suspect vessel IDs\nsuspect_vessels &lt;- harland_suspects$vessel_id\n\n# Create a unique color for each suspect vessel and assign black to others\nunique_suspect_vessels &lt;- unique(suspect_vessels)\nn_colors &lt;- length(unique_suspect_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_suspect_vessels)\n\nvessel_name_colors &lt;- median_percent_fill_data %&gt;%\n  filter(vessel_id %in% suspect_vessels) %&gt;%\n  distinct(vessel_id, vessel_name) %&gt;%\n  mutate(color = vessel_colors[vessel_id]) %&gt;%\n  select(vessel_name, color) %&gt;%\n  deframe()\n\n# Add black color for \"Other\" vessels\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(color = ifelse(vessel_id %in% suspect_vessels, vessel_name, \"Other\"))\n\n# Set color for \"Other\" vessels to black\nvessel_name_colors[\"Other\"] &lt;- \"black\"\n\n# Create a new column for the text label\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(text_label = paste(\"Vessel Name:\", vessel_name, \"&lt;br&gt;\",\n                            \"Vessel Company:\", vessel_company, \"&lt;br&gt;\",\n                            \"Percent Fill:\", round(median_percent_fill, 2)))\n\n# Create the plot\np5 &lt;- ggplot(median_percent_fill_data, aes(x = month, y = median_percent_fill, color = color)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = text_label), width = 0.5, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_name_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = paste(\"Median Percent Fill per Vessel by Month for Harland\"),\n       x = \"Month\",\n       y = \"Median Percent Fill\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p5, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\nSimilar to Harland and Beavoir, the 19 suspected vessels are also likely suspects for overfishing for Wrasse. The usual suspect of “Prawn Predator”, “Cutthroat Trout Catcher”, “Swimming Safely” has high percent fill relative to other fishing vessels.\nInterestingly, while SSEC’s vessels were previously not identified as overfishing suspects with 20 counts of cargo greater than monthly 90 percentile, the plot has illustrated possibility of Snapper Snatcher overfishing in May, with a fill of 26% of Wrasse out of it’s vessels tonnage. This suggest that the filter of 20 counts could be narrowed or proportion based on the total cargoes returned by the same vessel to catch more overfishing suspects.\n\n\nCode\nwrasse_suspects &lt;- sus_overfish_cargo %&gt;% filter(fish_species == \"labridaenrefert9be\")\n\nfish_species_filtered &lt;- \"labridaenrefert9be\"\nfiltered_data &lt;- nearest_tx_date %&gt;%\n  filter(fish_species == fish_species_filtered) %&gt;%\n  mutate(month = floor_date(tx_date, \"month\"))\n\nfiltered_data &lt;- filtered_data %&gt;% left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\"))\n\n# Add percent_fill column\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(percent_fill = qty_tons / tonnage)\n\n# Calculate the median percent_fill per vessel per month\nmedian_percent_fill_data &lt;- filtered_data %&gt;%\n  group_by(month, vessel_id, vessel_name, vessel_company) %&gt;%\n  summarize(median_percent_fill = median(percent_fill, na.rm = TRUE), .groups = 'drop')\n\n# List of suspect vessel IDs\nsuspect_vessels &lt;- wrasse_suspects$vessel_id\n\n# Create a unique color for each suspect vessel and assign black to others\nunique_suspect_vessels &lt;- unique(suspect_vessels)\nn_colors &lt;- length(unique_suspect_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_suspect_vessels)\n\nvessel_name_colors &lt;- median_percent_fill_data %&gt;%\n  filter(vessel_id %in% suspect_vessels) %&gt;%\n  distinct(vessel_id, vessel_name) %&gt;%\n  mutate(color = vessel_colors[vessel_id]) %&gt;%\n  select(vessel_name, color) %&gt;%\n  deframe()\n\n# Add black color for \"Other\" vessels\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(color = ifelse(vessel_id %in% suspect_vessels, vessel_name, \"Other\"))\n\n# Set color for \"Other\" vessels to black\nvessel_name_colors[\"Other\"] &lt;- \"black\"\n\n# Create a new column for the text label\nmedian_percent_fill_data &lt;- median_percent_fill_data %&gt;%\n  mutate(text_label = paste(\"Vessel Name:\", vessel_name, \"&lt;br&gt;\",\n                            \"Vessel Company:\", vessel_company, \"&lt;br&gt;\",\n                            \"Percent Fill:\", round(median_percent_fill, 2)))\n\n# Create the plot\np6 &lt;- ggplot(median_percent_fill_data, aes(x = month, y = median_percent_fill, color = color, group = month)) +\n  geom_boxplot(outlier.shape = NA) +\n  geom_jitter(aes(text = text_label), width = 0.5, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_name_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = paste(\"Median Percent Fill per Vessel by Month for Wrasse\"),\n       x = \"Month\",\n       y = \"Median Percent Fill\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p6, tooltip = \"text\")"
  },
  {
    "objectID": "Observations/Observation_2.html#disrupted---diversion-from-ghoti-preserve-after-ssec-was-caught",
    "href": "Observations/Observation_2.html#disrupted---diversion-from-ghoti-preserve-after-ssec-was-caught",
    "title": "Observation on Suspicious Fishing Behaviours",
    "section": "",
    "text": "Lastly, we considered any drastic shift in vessel routes, especially away from Ghoti Reserve, where SSEC’s Snapper Snatcher has trespass.\nSteps taken:\n\nSubset the trips taken per vessel into 3 time periods. (1) Before SSEC was caught (before 14 May 2035), (2) Immediately after SSEC was caught, for the month of June, and (3) July onwards.\nListed down the unique areas visited by the vessel and did a comparison on the changes in areas that the vessel has Avoided in June , Avoided_after May and Newly visited after May.\n\nWe observed that there are 29 vessels that have previously visited “Ghoti Preserve” in May and before, but has purposefully avoided it in June 2035 and returned again in July onwards. While the change in travel route may be due to coincidence, there’s also a high possibility these vessels were intentionally avoiding scrutiny from the authorities for their dubious activities in June, and resumed from July onwards.\nOut of this 29 vessels, we observed the usual suspects of Oceanus fishing vessels “Bigeye Tuna Buccaneer”, “Barracuda Bandit” and “Fish Finder”. And 3 foreign vessels, 2 of which were suspects of overfishing as mentioned earlier.\n\n(New) Vessel of “Sockeye Salmon Seeker”, from company of “Mcpherson-Wright” from nation of “Kethilim”\n(Overfishing Suspect) Vessel of “Redfin Pickerel Raider” from the company “Solis PLC” from the nation of “Solterrix”\n(Overfishing Suspect) Vessel of “Bigeye Tuna Buccaneer” from the company “Gomez-Mccormick” from the nation of “Calabrand”.\n\n\n\nCode\nvessel_trips &lt;- time_summary_df %&gt;%\n  mutate(start_date = as.Date(start_date))\n\n# Define the cutoff date for 14 May 2035\ncutoff_date &lt;- as.Date(\"2035-05-14\")\n\ntrips_before_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &lt;= cutoff_date)\n\n# Filter trips that started in June 2035\ntrips_in_june &lt;- vessel_trips %&gt;%\n  filter(start_date &gt;= as.Date(\"2035-06-01\") & start_date &lt; as.Date(\"2035-07-01\"))\n\n# Filter trips that started after 14 May 2035\ntrips_after_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &gt; cutoff_date)\n\n# Function to get unique areas\nget_unique_areas &lt;- function(data) {\n  data %&gt;%\n    pull(unique_areas) %&gt;%\n    strsplit(\", \") %&gt;%\n    unlist() %&gt;%\n    unique()\n}\n\n# Get unique areas per vessel before the cutoff date\nareas_before_cutoff &lt;- trips_before_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_before = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel after the cutoff date\nareas_after_cutoff &lt;- trips_after_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_after = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel in June 2035\nareas_in_june &lt;- trips_in_june %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_june = list(get_unique_areas(cur_data())))\n\n# Combine the data\ncombined_areas &lt;- full_join(areas_before_cutoff, areas_after_cutoff, by = \"vessel_id\") %&gt;%\n  full_join(areas_in_june, by = \"vessel_id\")\n\n# Determine new areas visited, old areas avoided, and old areas avoided in June for each vessel\nresults &lt;- combined_areas %&gt;%\n  rowwise() %&gt;%\n  mutate(new_areas = if(length(setdiff(areas_after, areas_before)) &gt; 0) \n                        paste(setdiff(areas_after, areas_before), collapse = \", \") else NA,\n         old_areas_avoided = if(length(setdiff(areas_before, areas_after)) &gt; 0) \n                                paste(setdiff(areas_before, areas_after), collapse = \", \") else NA,\n         old_areas_avoided_june = if(length(setdiff(areas_before, areas_june)) &gt; 0) \n                                    paste(setdiff(areas_before, areas_june), collapse = \", \") else NA,\n         new_areas_count = ifelse(is.na(new_areas), 0, length(unlist(strsplit(new_areas, \", \")))),\n         old_areas_avoided_count = ifelse(is.na(old_areas_avoided), 0, length(unlist(strsplit(old_areas_avoided, \", \")))),\n         old_areas_avoided_june_count = ifelse(is.na(old_areas_avoided_june), 0, length(unlist(strsplit(old_areas_avoided_june, \", \"))))\n         ) %&gt;%\n  ungroup()\n\n# Add new columns to identify vessels that avoided \"Ghoti Preserve\" in June but returned after the cutoff period\nresults &lt;- results %&gt;%\n  mutate(avoided_ghoti_june = ifelse(grepl(\"Ghoti Preserve\", old_areas_avoided_june), TRUE, FALSE),\n         returned_to_ghoti_after_cutoff = ifelse(avoided_ghoti_june & grepl(\"Ghoti Preserve\", areas_after), TRUE, FALSE))\n\n# Select relevant columns for the final output\nfinal_results &lt;- results %&gt;%\n  select(vessel_id, new_areas, old_areas_avoided, old_areas_avoided_june, new_areas_count, old_areas_avoided_count, old_areas_avoided_june_count, avoided_ghoti_june, returned_to_ghoti_after_cutoff)\n\n\n# Print the results\ndatatable(results, options = list(pagelength = 10), filter = \"top\")\n\n\n\n\n\n\nCode\nsubset_avoid_ghoti_june_returned_aft &lt;- final_results %&gt;% filter(avoided_ghoti_june == TRUE & returned_to_ghoti_after_cutoff == TRUE)\n\nN_vessel_avoid_ghoti &lt;- N_vessel %&gt;% \n  filter(vessel_id %in% subset_avoid_ghoti_june_returned_aft$vessel_id) %&gt;%\n  select(c(\"vessel_name\", \"vessel_company\", \"vessel_type\", \n           \"tonnage\", \"length_overall\", \"flag_country\")) \n\ncolnames(N_vessel_avoid_ghoti) &lt;- c(\"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\ndatatable(N_vessel_avoid_ghoti, options = list(pageLength = 3, autowidth = TRUE))\n\n\n\n\n\n\nIllustration of Vessels Avoiding Ghoti in June and Returning in\n\n\nCode\nN_vessel_avoid_ghoti_c &lt;- N_vessel_avoid_ghoti %&gt;% \n  filter(`Vessel Name` != \"White Marlin Master\", \n         `Vessel Name` !=  \"Ocean Oracle\", \n         `Vessel Name` !=  \"Sailfish Swindler\")\n\nselected_vessels &lt;- N_vessel_avoid_ghoti_c$`Vessel Name`\n\n# Filter data for the specified area\nsubset_data &lt;- ping_activity %&gt;%\n  filter(area == \"Ghoti Preserve\") %&gt;%\n  mutate(month = floor_date(ymd_hms(start_time), \"month\"))\n\n# Calculate the median dwell time per vessel per month\nmedian_dwell_data &lt;- subset_data %&gt;%\n  group_by(month, vessel_name) %&gt;%\n  summarize(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;% mutate(month = as.Date(month))\n\n# Create a new column to categorize vessels into 'Selected' and 'Other'\nmedian_dwell_data &lt;- median_dwell_data %&gt;%\n  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, \"Other\"))\n\n# Create a unique color for each vessel\nunique_vessels &lt;- unique(median_dwell_data$vessel_name)\nn_colors &lt;- length(unique_vessels)\ncolor_palette &lt;- colorRampPalette(brewer.pal(12, \"Paired\"))(n_colors)\nvessel_colors &lt;- setNames(color_palette, unique_vessels)\n\n# Add black color for \"Other\"\nvessel_colors[\"Other\"] &lt;- \"black\"\n\n# Create the plot\np &lt;- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +\n  geom_boxplot(aes(group = month), outlier.shape = NA) +\n  geom_jitter(aes(text = paste(\"Vessel Name:\", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +\n  scale_color_manual(values = vessel_colors) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +  # Ensure all months are shown\n  labs(title = \"Median Dwell Time of Vessels by Month in Ghoti Preserve\",\n       x = \"Month\",\n       y = \"Median Dwell Time\",\n       color = \"Vessel Name\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability\n\n# Convert to interactive plotly plot\nggplotly(p, tooltip = \"text\")"
  },
  {
    "objectID": "Observations/data/shp/Oceanus Geography.html",
    "href": "Observations/data/shp/Oceanus Geography.html",
    "title": "IS608 - Group 1",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Meeting_minutes/minutes_8.html",
    "href": "Meeting_minutes/minutes_8.html",
    "title": "Meeting Minute #8",
    "section": "",
    "text": "Date: 22 June 2024\nTime: 4pm to 5pm\nLocation: Physical, after class meeting.\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on existing Shiny R plots\nDiscussion on areas of abnormalities\nDiscussion on final deliverables (Shiny Plot, User Guide, Poster)\n\nMeeting Notes:\nDiscussion on the functionality and areas for improvement for the r Shiny Plots:\n\nShiny Plot 1: Interactive Map of Oceanus\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Help users understand the location in relation to each other on a map.\n\nAllows users to select type of area that they are interested in (e.g., Fishing Ground).\nAllows users to select type of fish species they are interested in to see location of origin.\nAllows users to select activities that they are interested in to see the authorized areas to conduct these activities.\n\n\n\n\n\n\n\n\n\nReview Decision:\n\n\n\nExclude this plot from the final dashboard as although it provides contextual information, the guide on relative proximity of areas will be more meaningful when including vessel trajectory or dwell time for vessels.\nTo highlight where certain fish species are found in certain location, this can be done with a simple matrix to map the possible fish species (rows) to location (columns), focusing on fishing grounds and ecological preserves.\n\n\n\nShiny Plot 2: Quantity of cargoes received per month\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Help users understand the quantity of cargo caught per month for the various species.\n\nAllows users to zoom into their “Port of Interest”\nTrend line of month on month change to identify the pattern (increase/ decrease)\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\n\nColor of “Salmon” to be shifted to a darker yellow for greater visibility\nInclude mapping of possible vessels that delivered these cargo & association with the companies that delivered these cargo.\nIntroduce trend line of “Median” across the year to show the relative catch amount difference for the respective months.\nCalculation for trend line below should not be “Percentage Change” and instead should be based on absolute amount in the form of Sparklines, to highlight the min and max values.\n\n\n\n\nShiny Plot 3: Network Graph of Vessel ID to Cargo ID mapping\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users to identify the cargo associated with the vessel of interest.\n\nAllows users to filter to identify the cargo mapping and vessel mapping per company.\nAllows user to see the summary of cargo and vessels mapped for each port.\nSize of the nodes for cargo is dependent on the cargo quantity in tons.\nColor of the cargo node reflects if the fish species caught is legal or illegal. (Red: Illegal, Orange: Legal).\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nInclude reference on what is the selected fish species for user’s readability.\nInclude details on which port are these cargo delivered to and which months these cargo are delivered on a summary plot.\nInclude dotted line where the match between vessel and cargo is poor (e.g., &gt;7 days difference between vessel arrival date and cargo transaction date)\n\n\n\n\nShiny Plot 4: Vessel dwell time & relative dwell time to other vessels\n\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users have a quick view of vessel’s dwell time at various locations (on Oceanus geographical map) and in relation to other vessels.\n\nAllows users to filter based on interested time period to compare dwell across selected periods (e.g., before SSEC was caught, after SSEC was caught).\nColors on boxplot background allows users to quickly identify the type of geographical region in relation to Oceanus map. (e.g., Beige for cities, light blue for fishing grounds and light green for ecological preserves).\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\n\nMake box plot interactive with plotly such that when hovering on the specific point, users are able to identify the underlying vessel associated with it.\nAlso, to additional details (e.g., Vessel Company, Dwell Time) can be added to provide context on the vessel of interest.\nTo zoom in to key areas of interest, namely fishing grounds and ecological preserve, the other non-critical areas such as “Cities, Navigation Buoy, Deep Sea fishing buoys” should be excluded to minimise distraction.\n\n\n\n\nShiny Plot 5: Interactive Calendar Heatmap\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps user see the seasonality of when cargo reaches the respective ports based on a calendar map\n\nAllows users to compare the cargo count across various port at specific dates.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nInclude filter to allow users to zoom into selected dates of interest.\nRelabel of the y axis to make it reasonable instead of using count of weeks.\nTo include reference to other data set (e.g., Count of vessels that is at the port, return the breakdown of fish species caught)\n\n\n\n\nShiny Plot 6: Summary of the most frequent route taken by vessels.\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Identifies the most travelled distinct routes by vessel.\n\nAllow users to select areas of interest that they are looking at and count the number of vessel for these top routes.\nAllow users to zoom into specific companies to identify the distinct locations visited.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nHighlight routes that have trespass illegal fishing route in “Red”\nHighlight routes that have visited fishing grounds and deep sea fishing navigation buoy in “Dark blue”\nInclude reference to map to plot the geographical route taken on the map.\n\n\n\n\nShiny Plot 7: Box Plot of Cargo Weight by Fish Species by Month\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users to identify which vessel contributes to which cargo and the relative position within the month.\n\nAllows users to drill down into desired fish species\nAllows users to drill down into specific port of interest.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nHandling error where there is no record for that fish species for the given port, to properly return “No Available Record”.\nIntroduce option for user to select color for highlighted vessels (Multiple) to contrast\n\n\n\n\nShiny Plot 8: Median Dwell Time of vessel by Area\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users identify the monthly median dwell time of the vessel at the respective area of interest.\n\nAllows users to identify area that they want to contrast to see the median dwell time spent\nAllows users to zoom into specific vessels of interest\nBy hovering on the plot, users are able to see the name of the vessel id contributing to this median dwell time at the area of interest.\n\n\n\n\n\n\n\n\n\nArea for Improvement\n\n\n\n\nIntroduce filter to identify vessel by company\nIntroduce option for user to select color for highlighted vessels (Multiple) to contrast\nIntroduce reference line that maps the % increase / decrease for month on month median dwell time changes for all vessels & selected vessels.\nIntroduce data table that returns the vessels and their details for those that are included in the “Highlighted Vessel ID”\n\n\n\n\nShiny Plot 9: Route taken by vessels\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Helps users zoom into the trajectory of vessels of interest to see the route taken and locations visited sequentially.\n\nAllows users to select vessel of interest to plot route taken.\nAllows users to select vessel of interest to plot dwell time at each area.\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\n\nInclude selection of multiple vessels such that users are able to include up to 3 vessels to compare their trajectory.\nUpdate the input selection field such that it is filtered by “Vessel Name” for readability and also returns the associated “Vessel Company” for user’s reference.\nInclude a filter on the time frame such that users are able to drill down into specific pocket of time of interest for temporal analysis. (e.g., Before SSEC was caught, immediately after, and months after SSEC was caught for any new suspicious trajectories).\n\n\n\n\nShiny Plot 10: Comparison of dwell time by vessel company at the areas visited across time\n\n\n\n\n\n\n\n\nPurpose & Functionality\n\n\n\nPurpose: Help users visualise the changes in dwell time spent by various vessel of the same company over the months at each location.\n\nHelps users identify which vessels in the company are active at which location in which months. (e.g., For Bernett, Jones and Millet company, only Perch Plunderer was active in Wrasse Bed, while Brine Bucaneer is active in Cod Table).\nComparison with median dwell time helps users identify the cause of long dwell time at each area (e.g., High frequency of short visits or few visits but long stays).\n\n\n\n\n\n\n\n\n\nAreas for Improvement\n\n\n\n\nReturn summary text on the most visited location for each vessel ID for the selected vessel company.\nInclude filter option to allow users to filter and zoom into areas of interest for side-by-side comparison of key regions (e.g., Fishing grounds, Ecological Preserve) that vessel has entered into.\n\n\n\nDiscussion on how to combine the r Shiny Plots to address the sub-questions\nIntegrating all the charts above, the sketch below illustrates the possible navigation tabs in our Shiny application.\n\n\n\n\n\n\n\n\nMenu\nPlots and layout\n\n\n\n\nQ1a - Mapping of Cargo Delivered by Vessels\n\nNetwork graph that links cargo to vessel (Plot 3)\nQuantity of cargoes received per month (Plot 2)\n\n\n\nQ1b - Seasonality of Oceanus Catch\n\nCalendar heat map on the count of cargo at each port over the months, with filter on fish species for the cargo displayed. (Plot 5)\n\n\n\nQ2 - Geographical mapping & dwell time\n\nGeographical Map of Vessel Trajectory (Plot 9)\nGeographical Map of Dwell time in circle with box plot on relative dwell time vis-a-vis other vessels. (Plot 4)\n\n\n\nQ3 - Visual analytics workflow to identify other vessels engaging in behaviour similar to SSEC.\nThis will be based on qualitative assessment by exploring the outputs of interactive visualisations in Q1 & Q2 (e.g., vessel of similar trajectories, prolonged dwell time in Ghoti, Cod Table and Wrasse Beds)\n\n\nQ4 - Changes in fishing behaviour after SSEC was caught and new suspicious behaviour.\n\nLine graph of dwell time over months and facet over various locations. (Plot 10)\nBar chart on the most traveled route by vessels in various months and selected location. (Plot 6)\n\n\n\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nRefine the r Shiny Plots and document a “User Guide”\nArya, Jing Yi, Myat\n24 June 2024\n\n\nCombine the r Shiny Plots and introduce links between various plots for coordinated linked view.\nArya, Jing Yi, Myat\n24 June 2024\n\n\nInvestigate the possible suspicious behaviours with the r Shiny plots and document down findings in “Observations”\nArya, Jing Yi, Myat\n24 June 2024\n\n\nSummarise the methodology and findings in the poster.\nArya, Jing Yi, Myat\n24 June 2024\n\n\n\nAgenda for Next Meeting:\n\nReview the refined r Shiny plots & test for instance where there is any errors\nReview the observations and potential finding for concurrence and reasonableness check."
  },
  {
    "objectID": "Meeting_minutes/minutes_6.html",
    "href": "Meeting_minutes/minutes_6.html",
    "title": "Meeting Minute #6",
    "section": "",
    "text": "Date: 8 June 2024\nTime: 4pm – 5pm\nLocation: Physical, after class meeting.\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on approach to breaking down questions for Mini Challenge 2\nDiscussion on which areas to venture for Take-home assignment 3 leading up to project deliverable.\n\nMeeting Notes & Action Items:\nWith Take-home assignment due on 9 June 2024, the team discussed how we should address different sub-questions to maximise the coverage of mini-challenge 2 deliverable. As majority of the focus for mini-challenge 2 is associated with the mapping of vessels to cargo based on the harbor import report and the vessel movement report, the team decided on the following breakdown.\n\nEveryone to attempt Q1\nFor subsequent questions 2,3,4 this will be split evenly amongst the group mates.\n\nEventual assignment of sub-question is as shown.\n\n\n\n\n\n\n\nSub-question & key focus\nTeam member\n\n\n\n\nQ1 & Q2 - Understanding South Seafood’s behaviour in terms of locations visited and dwell time to identify areas of suspicious activity.\nMyat\n\n\nQ1 & Q3 - Identifying vessels that have similar patterns to South Seafood and identify if these behaviour are suspicious.\nArya\n\n\nQ1 & Q4 - Comparing the behaviour of vessels before and after South Seafood was caught (i.e., dwell time at various areas, vessel count at each area, cargo count before and after with time series)\nJing Yi\n\n\n\nAgenda for next meeting:\n\nReview the insights derived from each sub-question covered by the team members.\nPreliminary selection of the plots to use for the final project on Shiny.\nReview possible areas of improvement for the plot to improve clarity and make them more aesthetically pleasing."
  },
  {
    "objectID": "Meeting_minutes/minutes_4.html",
    "href": "Meeting_minutes/minutes_4.html",
    "title": "Meeting Minute #4",
    "section": "",
    "text": "Date: 23/05/2024\nTime: 10 – 10.30 pm\nLocation: SMU\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on dilemma faced during data cleaning for MC2.\nDiscussion on insights derived from knowledge graphs and other visualisations.\nDiscussion on details for project proposal.\n\nMeeting Notes:\nTeam discussed the considerations during data cleaning for MC2, ranging from relabelling of columns, removing of duplicates and possible connector for MC2 sub-question 1 on linking cargo_id to vessel_id.\n\nDiscussion point #1: Aligning of headers and dropping of duplicate columns.\n\n\n\n\n\n\n\nDecision\n\n\n\nIdentified primary keys to link the “Event” edges with the “Entity” nodes.\n\nCargo_id between Event. Transaction, Entity.Delivery.Report\nVessel_id between Event.TransponderPing and Event.HaborReport with Entity.Vessel\n\nColumns to drop due to duplicated information.\n\nCity_name with City_id\nRegion_name with Region_id\nPoint_name with Point_id\nData_author with city_name\n\n\n\n\nDiscussion point #2: Handling nested list within data tables.\n\n\n\n\n\n\n\nDecision\n\n\n\nFor Entity.Region.Point, nested list include:\n\nActivities in region (e.g., Commercial fishing, Deep Sea Fishing)\nFish species in Region (e.g.,Wrasse/Labridae n.refert, Beauvoir/Habeas pisces)\n\n\n\n\nDiscussion point #3: Handling unique columns for certain entity tables.\n\n\n\n\n\n\n\nDecision\n\n\n\nEvent.Transponder,Ping: To determine meaning of “Key”\n\n\n\nDiscussion point #4: Possible calculated fields\n\n\n\n\n\n\n\nDecision\n\n\n\nFor “Event.Transponder.Ping”: Aggregate the dwell time per vessel per ping source to identify time that the vessel spent most.\nFor “Event.Transaction”:\n\nIdentify cargo with illegal fish species\nMatch possible regions where fish can be fished vs city_name where the ship has been to see if there’s any overlap for illegal fishing.\n\n\n\nTeam also discussed the possible connection between the different data table. This can be used as a basis to draw the preliminary knowledge graph used for visualisation of relationship between the various nodes.\n\nTeam discussed possible visualisation to explore:\n\nVisualisation #1: Distribution of fish species captured by the respective vessel companies.\n\nSubsequent steps:\n\nIdentifying companies that deviate from the norm\nIdentifying companies that have uncommon or suspicious fish species.\n\n\n\nVisualisation #2: Interactive data-table to return the list of cargos and the vessels at the ports by specifying the date and selected port.\n\n\n\nVisualisation #3: Vessel movement, zooming into South Seafood Express Corp\n\nSubsequent steps:\n\nIdentifying the common regions that vessel move.\nIdentifying common areas where fishing occurs & dwell time.\n\n\n\nVisualisation #4: Diving into the time spent by vessels at the respective areas to identify vessels that have over-stayed in areas where fishing is not allowed (e.g., Ghoti Reserve)\n\n\nNext steps are agreed as follows:\n\nWork on the details for the project proposal (Deadline of 25 May 2024).\nPush project proposal details onto git.\n\nAction Items:\n\nAgenda for Next Meeting:\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nData cleaning and processing for MC2\nArya, Jing Yi, Myat\n28 May 2024\n\n\nExploring knowledge graph and potential visualizations for MC2 sub questions\nArya, Jing Yi, Myat\n28 May 2024\n\n\nDraft details for project proposal\nArya, Jing Yi, Myat\n28 May 2024\n\n\nCommit, push and pull files from common git\nArya, Jing Yi, Myat\n28 May 2024\n\n\n\n\nAction items review from previous meetings.\nGo through process and challenges from data cleaning for MC2.\nGo through insights derived from knowledge graphs and other visualisations.\nDiscuss project proposal details."
  },
  {
    "objectID": "Meeting_minutes/minutes_2.html",
    "href": "Meeting_minutes/minutes_2.html",
    "title": "Meeting Minute #2",
    "section": "",
    "text": "Date: 15/05/2024\nTime: 10 – 10.30 pm\nLocation: Online – Teams Meeting\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on new project options – China Vis\nDiscussion on preliminary review of Vast Challenge Mini-case 2\nDiscussion on questions for clarification with Prof Kam\nAOB\n\nMeeting Notes:\nTeam went through the context and question for China Vis track 1:\n\n\n\n\n\n\n\nChina Vis Track 1\nComments from Team\n\n\n\n\nTime-Series Multivariate Education Data Visual Analytics Challenge\n\nSimilar to previous batch dataset on PISA results.\nPossible to leverage on similar visualisation methods while adding context for China Vis\nDataset is relatively scattered and requires combination from the various files to aggregate and estimate student’s competency.\n\n\n\nMultivariate Recruitment Data Visual Analytics Challenge\n\nData set relatively clean and easy to read as it is a single excel file.\nPossibility of visualising with distribution graphs and correlation plots or heat map to see the count per education level, work experience.\n\nConsult question for Prof:\n\nIf it is possible to make any assumptions on the relatively encoding for job titles, company.\nIf no meaningful insights from the anonymised job titles, companies, are there other ways to visualise to minimise granularity.\n\n\n\n\nAttempt for visualisation for China Vis:\n\nPlot breakdown of job titles per dimensions\nWhich candidate profile is most in demand – Education & Experience\n\n\n\nBreakdown of opportunities by city and company type à possibly major cities, or cities that specialise in certain area.\n\n\n\nFollowing meeting 1’s agreement to explore Mini Challenge 2, team members voiced challenges faced with viewing the data as the json file includes multiple levels, including nested list and overlapping header names.\nInterim measure for Mini Challenge 2 is to use the extracted files from the “Nodes” and “Edges” data table and segregate into separate tables based on the “Entity.Type” for nodes and “Event.Type” for edges.\n\nNext steps agreed are as follows:\n\nExplore ways to parse Vast Challenge – Mini Case 2 .json file into readable format for future graph drawing.\nExploring ways to use knowledge graphs and other appropriate visualisation methods to visualise interlinked data set within Mini Case 2.\nArrange time for consult with Prof on handling data for 2 shortlisted topics.\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nExplore ways to parse mc2 json. file into readable format and relabeling of columns.\nArya, Jing Yi, Myat\n18 May 2024\n\n\nSearch for ways to overcome challenges faced in exploring China Vis Topic 2 and Vast Challenge MC2.\nArya, Jing Yi, Myat\n18 May 2024\n\n\nArrange time for consult with Prof on assumptions that can be made when handling China Vis and Vast Challenge datasets.\nArya, Jing Yi, Myat\n18 May 2024\n\n\n\nAgenda for Next Meeting:\n\nAction items review from previous meetings.\nGo through possible solutions to overcome data extraction, processing from json file.\nGo through possible visualisations (e.g., network graphs) for mini case 2 data.\nDiscuss possible approach for project proposal (Due: 25 May 2024)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Vast Challenge 2024 - MC 2",
    "section": "",
    "text": "Introduction\nFishEye, a non-profit organization that focuses on illegal fishing, has assembled a knowledge graph from multiple structured and unstructured data sources.\nThe team will focus on Mini-Challenge 2: Creating Signatures for Geo-Temporal Patterns. This focuses on analyzing ship movements and shipping records to understand illegal fishing practices.\n\n\n\nKey objectives\n\nCreate visualisations to show patterns of ship movements and identify suspicious behaviours.\nUnderstand how commercial fishing community changed after a company was caught fishing illegally.\n\n\n\nReferences\nFor more information on VAST Challenge 2024 Mini-Challenge 2, please visit the official website here."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Project Team & Poster",
    "section": "",
    "text": "We are students from SMU (MITB) IS608 - Visual Analytics, exploring the Vast Challenge 2024 under the guidance of Dr. Kam Tin Seong, Associate Professor of Information Systems (Practice).\nWe will like to show our deepest appreciation to Dr. Kam Tin Seong for his unwavering support and endless patience in guiding our team through Mini-challenge 2.\n\nSummary of our work done in Project Poster:"
  },
  {
    "objectID": "Meeting_minutes/minutes_1.html",
    "href": "Meeting_minutes/minutes_1.html",
    "title": "Meeting Minute #1",
    "section": "",
    "text": "Date: 11/05/2024\nTime: 3:45-4:00pm\nLocation: SMU\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on creating group project website\nDiscussion on setting up git to enable code pushing by group members\nChoosing project topic\nAOB\n\nMeeting Notes:\n\nTeam went through together the background of Vast Challenge 2024. Next, team further deep dive in to Mini Challenge 1, Mini Challenge 2, Mini Challenge and Grand Challenge and their respective objectives and tasks.\nTeam agreed on working on Mini Challenge 2 since all team members resonate with the objective to discover and understand signatures of different types of fishing behaviour to prevent illegal fishing.\nNext steps are agreed as follows:\n\no Familiarise with data - Exploring dataset for mc2.\no Think of 1 visualisation each for each sub-qn (1-4).\no Work on launching group website.\no Post a word doc for meeting minute.\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nExploring dataset for mc2\nArya, Jing Yi, Myat\n15 May 2024\n\n\nThink of 1 visualisation each for each sub-qn (1-4)\nArya, Jing Yi, Myat\n15 May 2024\n\n\nWork on launching group website\nArya, Jing Yi, Myat\n15 May 2024\n\n\nPost a word doc for meeting minute\nArya, Jing Yi, Myat\n15 May 2024\n\n\n\nAgenda for Next Meeting:\n\nAction items review from previous meetings\nGo through findings from dataset for mc2\nGo through visualisations idea for each sub-qn\nDiscuss group website launching"
  },
  {
    "objectID": "Meeting_minutes/minutes_3.html",
    "href": "Meeting_minutes/minutes_3.html",
    "title": "Meeting Minute #3",
    "section": "",
    "text": "Date: 18/05/2024\nTime: 3.45-4:00pm\nLocation: SMU\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on final project selection based on 2 shortlisted topics.\nDiscussion on setting up git to enable code pushing by group members.\nDiscussion on potential roadblocks and possible mitigations\nAOB\n\nMeeting Notes:\nTeam went through the possible competencies and potential challenges for the 2 short-listed projects, namely:\n\nVast Challenge – Mini Case 2\nChina Vis – Track 1, Topic 2 on Job Recruitment.\n\n\n\n\n\n\n\n\n\nProject Topic\nWhy team believes this project is manageable\nPotential challenges\n\n\n\n\nChina Vis\n\nData of “Job Wanted.xlsx” is relatively clean, making it easy to load and visualise.\n\n\nAnonymised “Job Description” offers little context for analysis (e.g., not possible to do text analysis, clustering as each instance is unique)\n\n\n\nVast Challenge MC2\n\nRich context given for location, vessel type and events.\nInteresting topic of identifying illegal fishing behaviour given a particular target to focus on of “South Seafood Express”\n\n\nData file is in JSON which is new to the project team.\nDifficulty interpreting the links between the various data set where the crucial link of vessel_id to cargo_id is missing.\n\n\n\n\n\nTeam sought feedback from Prof Kam during the break on whether assumptions can be made during the data processing and analysis of the dataset.\nTeam agreed to continue venturing on Mini Challenge 2, where the learnings from today’s class on Network Analysis will be highly beneficial and useful in uncovering the relationships between the nodes (Vessels, Cargo, Location).\nTeam discussed about the possible avenues to detect abnormal fishing behaviour. This includes:\n\n\nDrilling into extreme values that deviate from interquartile range.\nIdentifying routine patterns from vessels and common cargo and subsequently identifying those records that diverge.\n\n\nOpportunities based on prof’s recommendation include:\n\n\nProcess of elimination to exclude reasonable records.\nUncovering illegal fishing based on the context of the case (e.g., fishing for shark fins by comparing quantity of tons and species.\n\nNext steps are agreed as follows:\n\nData cleaning, processing and introducing links between silo-ed datasets.\nExploring knowledge graphs and network diagrams to identify central nodes.\nWork on the details for the project proposal (Deadline of 25 May 2024).\nTrying to commit to a common git repository set-up, with push and pull.\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nData cleaning and processing for MC2\nArya, Jing Yi, Myat\n23 May 2024\n\n\nExploring knowledge graph and potential visualizations for MC2 sub questions\nArya, Jing Yi, Myat\n23 May 2024\n\n\nDraft details for project proposal\nArya, Jing Yi, Myat\n23 May 2024\n\n\nCommit, push and pull files from common git\nArya, Jing Yi, Myat\n23 May 2024\n\n\n\nAgenda for Next Meeting:\n\nAction items review from previous meetings.\nGo through process and challenges from data cleaning for MC2.\nGo through insights derived from knowledge graphs and other visualisations.\nDiscuss project proposal details."
  },
  {
    "objectID": "Meeting_minutes/minutes_5.html",
    "href": "Meeting_minutes/minutes_5.html",
    "title": "Meeting Minute #5",
    "section": "",
    "text": "Date: 28 May 2024\nTime: 2pm – 3pm\nLocation: Online – Teams Meeting\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on what constitute as illegal fishing.\nDiscussion on improvements to existing visualisation.\nClarification with Prof Kam\nAOB\n\nMeeting Notes:\nTeam discussed possible signs of illegal fishing, which includes:\n\nFishing for illegal fish species.\nFishing in ecological preserves.\n\nAdding to Prof Kam’s suggestions of considering IUU – Illegal, Unreported and Unregulated Fishing, the team will be exploring the following:\nReference: https://www.imo.org/en/OurWork/IIIS/Pages/IUU-FISHING.aspx.\n\n\n\n\n\n\n\nIUU\nPossible visualisations\n\n\n\n\nIllegal: Unauthorised fishing by vessels that are not given the permission to fish from a particular country. \nIdentifying “Unknown” vessels and activities of vessels that are not registered with “Oceanus” flag.\n\n\nUnreported: Fishing activities that are not reported or under-reported to ports which hampers accurate assessment of fish stocks.\nIdentify vessels that have been identified by transponder ping and port report, but consistently not reporting or under-reporting the volume of fish caught.\n\n\nUnregulated: Overfishing that depletes natural fish stocks and disrupts marine ecosystems.\nIdentify vessels that have consistently out-perform comparable peers, and potentially suggest fishing beyond allowable limits.\n\n\n\nWith Prof Kam’s suggestions of cross-referencing to summons issued for over-fishing based on articles given in Mini-challenge 1, we filtered out the articles with key words of “overfishing”, “summons”, “police”, “illegal”.\n\npacman::p_load(tidyverse, DT)\nsuspicious &lt;- read_csv(\"data/suspicious.csv\")\n\ndatatable(suspicious, options = list(pageLength = 1))\n\n\n\n\n\nExamples include:\n\n\n\n\n\n\n\nCompanies Identified\nBehaviour Identified\n\n\n\n\nRechFish Freight Plc\nRepeatedly summoned for overfishing in Cod Table, Wrasse Beds, and Don Limpet Preserve (February, March, April, May 2035)\n\n\nArawakFish Cargo Ges.m.b.H.\nOverfishing in Tuna Shelf, Cod Table, Wrasse Beds, Nemo Reef, and Ghoti Preserve (February, March, April 2035)\n\n\nDry CreekRybachit Marine A/S\nOverfishing in Wrasse Beds (March, July 2035)\n\n\nBaringoAmerica Marine Ges.m.b.H.\nOverfishing in Cod Table and Tuna Shelf (May 2035)\n\n\nDry CreekWorldLogistics Ltd.\nAlleged Overfishing in Wrasse Beds - The company is caught fishing outside their designated area, the Wrasse Beds, and using unauthorized vessels. The company has been summoned multiple times by the cities of Lomark and Himark throughout 2035.\n\n\nKambalaSea Freight Inc.\nOverfishing in the Cod Table, Tuna Shelf, and Wrasse Beds on or around May 1, 2035.\n\n\nKisumuSeafoodBrothers\n\n\n\nLtd.\nOverfishing in Nemo Reef on April 2, 2035.\n\n\n\nDrilling into mini-challenge 2, sub-question 1, the team surfaced challenges mapping the vessels and cargo at each port based on the individual date. As illustrated in the data table below, the count of vessel and cargo at each port on the same date varies.\n\nPossible reason: This may be due to variance in time needed to offload cargo, refuel the ships at the respective ports.\nMoreover, fishing models needs to be considered such as the use of “Transhipment Vessels” where fishing vessel deposit their catch onto cargo vessels with attempt to maximise fishing time in sea.\nReference: https://www.oceansinc.earth/transshipment\nForeseeable challenges include different styles that fishing vessels corporate with cargo vessels. Such as:\n\nSame company owning both fishing vessels and transhipment vessels.\nIndividual fisherman cooperating with larger companies for shipment.\n\nOn improving existing visualisation, to identify the route taken by vessels, the path taken by each vessel will be reordered by date to identify the usual routes taken. Any deviation of fishing route may prompt further investigation. The sailing route will further be transposed on Oceanus map.  \nAction Items:\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nArya, Jing Yi, Myat\n4 June 2024\n\n\n\nAgenda for Next Meeting:"
  },
  {
    "objectID": "Meeting_minutes/minutes_7.html",
    "href": "Meeting_minutes/minutes_7.html",
    "title": "Meeting Minute #7",
    "section": "",
    "text": "Date: 15 June 2024\nTime: 4pm to 5pm\nLocation: Physical, after class meeting.\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDiscussion on findings from Take Home Assignment 3\nDiscussion on charts to include for Project Shiny\nClarification with Prof Kam\n\nMeeting Notes:\nReviewing the learnings from our fellow classmates\n\nLearning 1: Jaya’s “Fish Arrival by City over Time”\n\n\n\n\n\n\n\n\nInsights & Possible Area for Further Investigation\n\n\n\n\nPossibility of transfer of illegal fish species from one port to another delivery port after South Seafood Express Corp was flagged for illegal fishing.\nDecline in illegal fish species for “City of Paackland” in May and shift to “City of Himark” or “City of Haacklee”.\n\n\n\n\nLearning 2: Jaya’s & Wei Peng’s Combined Path of Vessel Locations over Time\n\n\n\n\n\n\n\n\nInsights & Possible Area for Further Investigation\n\n\n\n\nConsidering possibility of transhipment arising from overlap of transponder ping\nBy identifying vessels at the same location on the same date for possibility of transfer.\n\n\n\n\nLearning 3: Rydia’s Changes in Visit Frequency by Month by Fishing Vessels\n\n\n\n\n\n\n\n\nInsights & Possible Area for Further Investigation\n\n\n\n\nPlot of visit frequency of fishing vessels by month which showed decline in visit aft South Seafood was caught, while other cities (e.g., City of Lomark) showed an increase.\nFurther investigation where plot shows that frequency visit to Nav C has decreased after South Seafood Express was caught.\n\n\n\nDiscussion on plots to include for the project:\nThe team circled back to the Mini-challenge 2 questions and summarised the intended visualizations for the respective questions.\n\nSub-question 1a: Develop a visualization system to associate vessels with their probable cargos.\n\n![](images/clipboard-4038435692.png)\n\n\n\n\n\n\nConsiderations\n\n\n\nFilter:\n\nTransaction date to filter scope of cargo\nCargo of specific fish species\nSpecific vessels\n\nAesthetics:\n\nGrey out links where it is a poor match\nCargo coloured red where it belongs to illegal fish species.\n\n\n\n\nSub-question 1b: Which vessels deliver which products and when?\n\n\n\n\n\n\n\nIdeal visualisation / data table\n\n\n\nFor each vessel, return the details of the associated cargo, including tx_date and fish_species for that respective cargoes.\n\n\n\nSub-question 1c: What are the seasonal trends and anomalies in the port exit records?\n\n\n\n\n\n\n\n\nConsiderations\n\n\n\nPlot of calendar heat map\n\nFilter by port\nFilter by fish species of interest\n\nAnalysis to include trendline comparing month-on-month change\n\n\n\nSub-question 2a: Develop visualizations that illustrate the inappropriate behavior of SouthSeafood Express Corp vessels.\n\n\n\n\n\n\n\n\nConsiderations\n\n\n\nPlot the path taken by South Seafood Express Corp to observe areas where South Seafood Vessels may have trespass.\n\n\n\nSub-question 2b: How do their movement and catch contents compare to other fishing vessels? .\n\n\n\n\n\n\n\nIdeal visualisation / data table\n\n\n\n\nInclude map and interactive filter by fish species to show probable fishing location and dwell time of vessels at each location.\nInclude parallel coordinate plot with (x axis as location, y as median dwell time, each vessel drawing a line)\n\n\n\n\nSub-question 2c: Develop a visualization system to associate vessels with their probable cargoes.\n\n\n\n\n\n\n\n\nIdeal visualisation / data table\n\n\n\n\nInteractive plot where the median dwell time spent by each vessel is highlighted by circle.\nCompare the median dwell time of this vessel with other vessel to see if this vessel is overstaying its visit.\nCompare the transponder ping record for each vessel across regions it visited over the period and see any difference per month.\n\n\n\n\nSub-question 2d: How many different types of suspicious behaviors are observed? Use visual evidence to justify your conclusions.\n\n\n\n\n\n\n\nPossible Area for Investigation\n\n\n\nSuspicious behaviour include:\n\nOverstaying in ecological preserves\nCatch of illegal fish species\nRepeatedly catching top 90% of cargo (possibility of overfishing)\n\n\n\n\nSub-question 3: To support further Fisheye investigations, develop visual analytics workflows that allow you to discover other vessels engaging in behaviors similar to SouthSeafood Express Corp’s illegal activities? Provide visual evidence of the similarities.\n\n\n\n\n\n\n\nPlanned Approach\n\n\n\nVisualisations will be taken from Q1 and Q2 to identify common groups of illegal fishing behaviour.\n\n\n\nSub-question 4a: How did fishing activity change after SouthSeafood Express Corp was caught?\n\n\n\n\n\n\n\nPlanned Approach\n\n\n\nVisualisation will be taken from Q1 and Q2 to include filter on time parameter to compare the before and after May 2035.\n\n\n\nSub-question 4b: What new behaviors in the Oceanus commercial fishing community are most suspicious and why?\n\n\n\n\n\n\n\nPlanned Approach\n\n\n\nIdentify any drastic change immediately in June (post May) and subsequent month.\nArea of investigation include:\n\nDiversion of vessel path from where South Seafood was at. (Port, Fishing Ground, Ecological Preserve)\nVessels that have remained at the port in June and no activity in June.\nChange in cargo quantity and fish species caught\n\n\n\nAreas to note:\n\nWhen comparing with other fishing vessel and cargo vessel, consider their capacity.\nWhen using the mapped records of vessel to cargo, take note of the denominator to prevent duplicate records. (e.g., vessel_id, or cargo_id).\nFor interactive plot, it is possible to call ggplotly within Shiny.\nTo have coordinated link view, introduce the common ID to have a common data table and filters applied. https://rstudio.github.io/crosstalk/shiny.html\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nPlot the r Shiny plots for the respective sub-questions\nArya, Jing Yi, Myat\n22 June 2024\n\n\nSummarise the insights derived from exploring the r Shiny plots.\nArya, Jing Yi, Myat\n22 June 2024\n\n\n\nAgenda for Next Meeting:\n\nReview of Shiny Plot Progress\nReview of possible observations arising from Shiny Plots (more granular deep dive)"
  },
  {
    "objectID": "Meeting_minutes/minutes_9.html",
    "href": "Meeting_minutes/minutes_9.html",
    "title": "Meeting Minute #9",
    "section": "",
    "text": "Date: 24 June 2024\nTime: 9pm to 10pm\nLocation: Virtual, Teams Meeting\nAttendees: Arya Siahaan, Seng Jing Yi, Thet Myat Noe\nAgenda:\n\nDigesting feedback from Prof Kam on first dashboard iteration.\nSummarise the findings obtained from the plots.\nFinalise the deliverables (Shiny Plot, User Guide, Poster).\n\nMeeting Notes:\nPiecing the various plots together, we have a first iteration of our dashboard. This comprises of 5 main section, 3 of which had multiple tabs for breakdown for respective plots to address the 4 mini-challenge 2 sub-questions. Click here to access Dashboard 1.\n\n\n\n\nDiscussion and revision based on Prof Kam’s feedback for first dashboard iteration:\nDuring the consultation with Prof. Kam, we received valuable feedback on how to improve the visualisation on our Shiny app. Below are the main takeaways:\n\nReview Note 1: Incorporate Time as a dimension for analysing vessel trajectories.\n\n\n\n\n\n\n\n\nNext steps:\n\n\n\n\nImplement a Time Slider for to distinguish trajectories over a period of time or based on vessel’s trip\n\nThis slider will allow users to distinguish between different trips (e.g., first trip, second trip, third trip) and observe changes in vessel movement patterns over time. This functionality addresses potential duplicate visits and provides a clearer understanding of the vessel’s travel history.\n\nLeverage on Line Transparency and Width to highlight overlaps.\n\nTo differentiate overlapping paths, use line transparency and increase line width. This way, if a vessel travels the same path multiple times, the line will appear thicker due to the overlap. Vessels that make repeat trips between ecological preserve and certain location of interest can be further investigated.\n\nVessel Trajectory Comparisons\n\nFor the vessel trajectories, incorporate a comparison between vessels belonging to SouthSeafood Express Corp and those of other companies. This should highlight behavioral similarities or differences, providing evidence of patterns. Specifically, focus on comparing the trajectories of individual vessels, such as ‘Snapper Snatcher’ and ‘Roach Robber,’ as well as the overall routes of SouthSeafood Express Corp vessels versus others at different fishing grounds.\n\n\n\nReview Note 2: Improving clarity on Box Plot for comparison of vessel’s dwell time.\n\n\n\n\n\n\n\n\nNext Steps:\n\n\n\n\nBox Plot Comparison:\n\nProf. Kam suggested we need to refine the box plots so that they can be used to compare dwell times across different vessels at each specific location. Each vessel should have its own box plot representing dwell times in various fishing areas. This can be achieved by calculating the start and end times to determine the total dwell time within each area.\n\nIndependent Scale for Box Plots:\n\nEnsure that the scale for the box plots is independent for each vessel to prevent the plots from being squished and to accurately reflect the data distribution\n\nCombining Plots:\n\nCombine the two plots (dwell time map and dwell time box plot) within a single tab, displaying them side by side. Remove the box plots for ports and cities, and focus on fishing grounds where the primary activities occur. Emphasize dwell times at sea (fishing grounds) and compare them with other vessels to identify patterns.\n\nSlider Usage:\n\nThis tab does not require a slider, simplifying the interface and focusing the user’s attention on the combined visualization.\n\n\n\nReview Note 3: Remove plots that does not offer meaningful insights to zoom into key areas.\n\n\n\n\n\n\n\n\nNext Steps\n\n\n\n\nDuring the consultation, Prof. Kam noted that the current plot, which compares median dwell times in navigation and buoy fishing areas, doesn’t provide clear insights or tell much of a story. The key feedback was: “This one doesn’t really tell much. What can you tell with this plot?”\nUse of multi-select does not bring value to the interactive plot as separate plots are returned. Selection of a single sample at a time would suffice, rather than having multiple select.\n\nThis prompted deep reflection for our project team to clearly identify the purpose of each plot before introducing into our Shiny App. Where a clear use case was not evident, these plots were removed to minimise distraction to users which may potentially lead to dilution of insights.\n\n\n\nReview Note 4: Include labels for user’s understanding on cargo-vessel mapping\n\n\n\n\n\n\n\n\nNext Steps:\n\n\n\nFor the network graph of vessel ID to cargo ID, it is necessary to map the cargo to its contents, specifically identifying the fish species contained in each cargo.\n\n\n\nReview Note 5: Tidying up redundant points, filters & description to minimise distractions.\n\n\n\n\n\n\n\n\nNext Steps:\n\n\n\n\nRemoving the black dot representing the outlier that is distracting and unnecessary, as the outliers are already clearly visible with the blue and red dots.\nWhile the breakdown of fish species in cargo over time has a good concept to identify abnormal fish species caught over time, the execution needs improvement. The vessel IDs at the bottom are confusing, as they appear to be mixed up with fish IDs. Alignment of the labels is needed to improve readability of the interactive data table below.\n\n\n\nRevised dashboard and key take-away:\n\n\n\n\n\n\nKey take-away:\n\n\n\nClarity and user-centric design is key! By removing unnecessary plots that confuse users, the team is able to truly focus on 4 main plots to uncover the suspicious behaviour of vessels in Oceanus. This helped to streamline the Shiny App and focus on the most impactful and relevant visualisations.\nOur team focused on including filters based on user’s interest (e.g., Slide for time period of interest for temporal analysis), and readability of plots (e.g., Standardised input based on vessel name, and returning corresponding details on vessel company).\n\n\nClick here to access Revised Dashboard.\n\nRevised Plot 1: Routes travelled by 3 selected vessels\n\n\n\n\n\n\n\nKey Revisions:\n\n\n\nFor Clarity:\n\nComparison of 3 selected vessels on each other to highlight overlap in routes. Users can now compare SSEC vessel of “Snapper Snatcher” and “Roach Robber” in relation to vessels from other companies.\nAdjust width of trajectory line that thickens to highlight repeated travel on the same route, and distinguish suspicious routes taken at high frequency.\n“Next” button included for users to observe behaviour of vessels in 30 days interval with each click.\nSlider input for date range to filter trips made by vessel based on start and end date of interest. This allows users to explore based on specific time frames and observe changes of vessel trajectories over time.\n\nFor Aesthetics:\n\nMaximised size of the geo-spatial plot such that it expands to fill screen width\nRemoved color legend from plot to maximise plot size, and color legend in side bar layout for readability.\n\n\n\n\n\n\n\n\n\n\nInsights from Revised Plot 1: Routes Travelled by Selected Vessels\n\n\n\nComparing 2 other suspicious vessels (Sea Bass Bandit, Gurnard Grabber) with South Seafood Express Corp’s Snapper Snatcher, we observe repeated overlaps of vessel trajectory and repeated entry in Ghoti Preserve, Cod Table and Wrasse Beds, pointing to possible illegal fishing activities in ecological preserve and overfishing in Wrasse Beds and Cod Table.\n\n\n\nRevised Plot 2: Median Dwell Time\n\n\n\n\n\n\n\nKey Revisions:\n\n\n\nFor Clarity:\n\nHaving a side-by-side plot of dwell time on map and relative dwell time comparison with other company allows users to have a quick birds-eye view on where vessel spent their time and if it is reasonable.\nIncluded reference of the company which the vessel of interest belongs to under the filter.\nFocused on critical areas of Fishing grounds and ecological preserve, with green dotted line to segment these 2 groups of area. (Between Wrasse Beds, fishing ground & Ghoti Preserve, ecological preserve)\nIncluded interactivity to the box plot with tool tip that reveals the vessel name, company and median dwell time when hovered on.\nWith Plotly, users are able to zoom into the selected region, offering them to greater flexibility to scrutinize details of the box plot where points are previously cluttered together due to the existing scale.\nSlider input for date range for users to perform temporal analysis on any changes to median dwell time relative to other vessels.\nTo exclude distortion of box plot by outliers, the option of “Exclude Specific Vessel” was introduced to remove outliers and provide appropriate scale to the relevant data points.\n\nFor Aesthetics:\n\nSimilarly, to maximise plot size, the legends are removed from the plot and included in the side bar panel for users ease of reference.\nThe box plot dot size of the selected vessel is also maximised for users ease to pinpoint the selected vessel where it was previously hard to see, despite being in a different color.\n\n\n\n\n\n\n\n\n\n\nInsights from Revised Plot 2: Median Dwell Time for Largemouth Bass Looter\n\n\n\nLooking at another suspicious vessel, Largemouth Bass Looter from the company of Solis-Lopez, we observed that it has much higher dwell time in ecological reserve of Ghoti Preserve and fishing ground of Cod Table, which points to potential illegal fishing in restricted areas and overfishing of Cods in Cod Table.\n\n\n\nRevised Plot 3: Vessel Cargo Mapping\n\n\n\n\n\n\n\nKey Revisions:\n\n\n\nFor Clarity:\n\nUpdated filters such that users have more option to filter by “Vessel Name” aside from the initial vessel of “Transaction Date”, “Destination”, “Fish Species” and “Vessel Company”.\nRecoded the fish species labels into readable text and concatenating the quantity for each cargo node returned.\nFor the summary data table below, the columns are also updated to only retain fields of interest and renamed to a user friendly format, removing the code labels of (tx_qty, cargo_id, etc) that is not meaningful to end users.\n\nFor Aesthetics:\n\nSimilarly, to minimise clutter in the plot itself, the color legend for fish species were removed from the plot and included in the side bar panel for ease of reference.\n\n\n\n\n\n\n\n\n\n\nInsights from Revised Plot 3: Vessel Cargo Mapping\n\n\n\nFor the vessel of “Fish Finder” alone, in the 2 weeks of 16 September to 30 September at City of Lomark, we observed abnormally high quantity of cargo for some fish species. For illustration, approximately 12 cargoes of Birdseye Pisces and more than 30 cargoes of Cod Fish. This highlights possible signs of overfishing, especially where some cargos are of unusually high quantity of 50 tons and above.\n\n\n\nRevised Plot 4: Treemap of Vessel Cargo Comparison\n\n\n\n\n\n\n\nKey Revisions and introduction of new plot:\n\n\n\n\nInclusion of side-by-side comparison for various vessels and the fish species caught. The larger the area filled by the particular fish species and vessel name, it would show the relative quantity of fishes caught.\nTo put into perspective the actual volume and quantity of cargo each vessel caught, a summary text is included at the bottom of the side bar to inform users on the breakdown.\nA time filter is applied to enable users to perform analysis on cargo volumes based on the same period of time, such that effects of seasonality could be minimised.\n\n\n\n\n\n\n\n\n\n\nInsights from Revised Plot 4: Treemap of Vessel Cargo Comparison\n\n\n\nThe treemap above compares the catch from Gurnard Grabber from Schmidt company and Snapper Snatcher from South Seafood Express Corp, that has similar vessel trajectories per revised plot 1. We observe that cumulatively, Gurnard Grabber has substantially higher volume of cargo caught, with striking 2,647 tons of Cod Fish, highlight possible overfishing in Cod Table.\nWhile Snapper Snatcher has notably lesser catch, it has a notably high quantity of illegal fish species caught for Sockfish (4 cargoes, totalling to 113 tons), as highlighted in the red boxes.\n\n\nAction Items:\n\n\n\n\n\n\n\n\nAction items\nOwner(s)\nDeadline\n\n\n\n\nPresentation of Poster on 29 June 2024\nArya, Jing Yi, Myat\n29 June 2024"
  },
  {
    "objectID": "Observations/Observation_1.html",
    "href": "Observations/Observation_1.html",
    "title": "Observation on South Seafood Express Corp",
    "section": "",
    "text": "This article seeks to describe the inappropriate behaviour of South Seafood Express Corp Vessels. We will be exploring it’s activities in 2 prongs.\n\nRoutes travelled & exception dwell time in ecological preserves.\nComparing catch of South Seafood Express Corp with comparable peers.\n\n\n\nLooking at Oceanus’ registry for Vessels, South Seafood Express Corp owns 2 fishing vessels of different size.\n\n\nCode\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly, treemapify)\n\ntx_qty &lt;- read_csv(\"data/tx_qty.csv\")\nping_activity &lt;- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v &lt;- read_csv(\"data/hbrpt.csv\")\nN_vessel &lt;- read_csv(\"data/N_vessel.csv\")\n#location_legend &lt;- read_csv(\"data/location_legend.csv\")\n#vessel_movement &lt;- read_rds(\"data/rds/vessel_movement_data.rds\")\nnearest_tx_date &lt;- read_csv(\"data/mapped_records.csv\")\ntime_summary_df &lt;- read_csv(\"data/time-summary.csv\")\n\nSSEC_v &lt;- N_vessel %&gt;% \n  filter(vessel_company == \"SouthSeafood Express Corp\") %&gt;% \n  select(c(\"vessel_name\", \"vessel_company\", \"vessel_type\", \n           \"tonnage\", \"length_overall\", \"flag_country\")) \n\ncolnames(SSEC_v) &lt;- c(\"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\ndatatable(SSEC_v, options = list(pageLength = 2, autowidth = TRUE))"
  },
  {
    "objectID": "Observations/Observation_1.html#understanding-south-seafood-express-corp",
    "href": "Observations/Observation_1.html#understanding-south-seafood-express-corp",
    "title": "Observation on South Seafood Express Corp",
    "section": "",
    "text": "Looking at Oceanus’ registry for Vessels, South Seafood Express Corp owns 2 fishing vessels of different size.\n\n\nCode\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly, treemapify)\n\ntx_qty &lt;- read_csv(\"data/tx_qty.csv\")\nping_activity &lt;- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v &lt;- read_csv(\"data/hbrpt.csv\")\nN_vessel &lt;- read_csv(\"data/N_vessel.csv\")\n#location_legend &lt;- read_csv(\"data/location_legend.csv\")\n#vessel_movement &lt;- read_rds(\"data/rds/vessel_movement_data.rds\")\nnearest_tx_date &lt;- read_csv(\"data/mapped_records.csv\")\ntime_summary_df &lt;- read_csv(\"data/time-summary.csv\")\n\nSSEC_v &lt;- N_vessel %&gt;% \n  filter(vessel_company == \"SouthSeafood Express Corp\") %&gt;% \n  select(c(\"vessel_name\", \"vessel_company\", \"vessel_type\", \n           \"tonnage\", \"length_overall\", \"flag_country\")) \n\ncolnames(SSEC_v) &lt;- c(\"Vessel Name\", \"Vessel Company\", \"Vessel Type\", \"Tonnage\", \"Overall Length\", \"Country Flag\")\n\ndatatable(SSEC_v, options = list(pageLength = 2, autowidth = TRUE))"
  },
  {
    "objectID": "Observations/Observation_1.html#snapper-snatcher",
    "href": "Observations/Observation_1.html#snapper-snatcher",
    "title": "Observation on South Seafood Express Corp",
    "section": "Snapper Snatcher",
    "text": "Snapper Snatcher\nSnapper Snatcher took a total of 19 trips from the 1 February 2035 to 14 May 2035, with an average trip duration of 5.3 days.\n\n\n\n\nCode\ntime_summary_ss &lt;- time_summary_df %&gt;% filter(vessel_id == \"snappersnatcher7be\")  %&gt;%\n  select(\n    trip_id,\n    list_of_areas,\n    start_date,\n    end_date,\n    day_diff\n  ) %&gt;%\n  rename(\n    \"Trip Count\" = trip_id,\n    \"Route Travelled\" = list_of_areas,\n    \"Start Date\" = start_date,\n    \"End Date\" = end_date,\n    \"Trip Duration (Days)\" = day_diff\n  ) %&gt;%\n  mutate(`Trip Count` = row_number(), \n         `Start Date` = format(as.Date(`Start Date`), \"%d-%b\"),\n    `End Date` = format(as.Date(`End Date`), \"%d-%b\"),\n    `Trip Duration (Days)` = round(`Trip Duration (Days)`, 1))\n\ndatatable(time_summary_ss, options = list(pageLength = 3, autowidth = TRUE))\n\n\n\n\n\n\nCode\n#average_trip_duration &lt;- time_summary_ss %&gt;% summarise(average_duration = mean(`Trip Duration (Days)`))"
  },
  {
    "objectID": "Observations/Observation_1.html#roach-robber",
    "href": "Observations/Observation_1.html#roach-robber",
    "title": "Observation on South Seafood Express Corp",
    "section": "Roach Robber",
    "text": "Roach Robber\nRoach Robber took a total of 22 trips from the 2 February 2035 to 12 May 2035, with an average trip duration of 4.2 days.\n\n\n\n\nCode\ntime_summary_rr &lt;- time_summary_df %&gt;% filter(vessel_id == \"roachrobberdb6\")  %&gt;%\n  select(\n    trip_id,\n    list_of_areas,\n    start_date,\n    end_date,\n    day_diff\n  ) %&gt;%\n  rename(\n    \"Trip Count\" = trip_id,\n    \"Route Travelled\" = list_of_areas,\n    \"Start Date\" = start_date,\n    \"End Date\" = end_date,\n    \"Trip Duration (Days)\" = day_diff\n  ) %&gt;%\n  mutate(`Trip Count` = row_number(), \n         `Start Date` = format(as.Date(`Start Date`), \"%d-%b\"),\n    `End Date` = format(as.Date(`End Date`), \"%d-%b\"),\n    `Trip Duration (Days)` = round(`Trip Duration (Days)`, 1))\n\ndatatable(time_summary_rr, options = list(pageLength = 3, autowidth = TRUE))\n\n\n\n\n\n\nCode\naverage_trip_duration &lt;- time_summary_rr %&gt;% summarise(average_duration = mean(`Trip Duration (Days)`))"
  },
  {
    "objectID": "Observations/Observation_1.html#peer-comparison-on-dwell-time-of-vessel-for-similar-size",
    "href": "Observations/Observation_1.html#peer-comparison-on-dwell-time-of-vessel-for-similar-size",
    "title": "Observation on South Seafood Express Corp",
    "section": "Peer Comparison on dwell time of vessel for similar size",
    "text": "Peer Comparison on dwell time of vessel for similar size\nConsidering that the time a vessel is detected at an area is dependent on it’s length and speed to cover the area. We seek to understand if the dwell time of SSEC vessels are reasonable by comparing the vessels behaviour with other vessels of similar nature (Fishing vessels of relative length).\nOut of the 178 fishing vessels, we observed that Snapper Snatcher (Red) is relatively small, whereas Roach Robber (Purple) is comparatively large. With distinct clusters by length, we subsequently compare the dwell time.\n\n\nCode\nN_vessel_fishing &lt;- N_vessel %&gt;% filter(vessel_type == \"Fishing\") %&gt;% \n  mutate(color = case_when(\n    vessel_id == \"snappersnatcher7be\" ~ \"red\",\n    vessel_id == \"roachrobberdb6\" ~ \"purple\",\n    TRUE ~ \"grey\")) %&gt;%\n   mutate(tooltip_text = paste(\n    \"Vessel name: \", vessel_name, \"&lt;br&gt;\",\n    \"Vessel company: \", vessel_company, \"&lt;br&gt;\",\n    \"Tonnage: \", tonnage, \"&lt;br&gt;\",\n    \"Length: \", length_overall, \"&lt;br&gt;\"\n  ))\n\np &lt;- ggplot(N_vessel_fishing, aes(x = length_overall, fill = color, text = tooltip_text)) +\n  geom_histogram(bins = 20, color = \"black\", alpha = 0.7) +\n  scale_fill_manual(values = c(\"grey\" = \"grey\", \"red\" = \"red\", \"purple\" = \"purple\")) +\n  labs(title = \"Histogram of Vessel Count per Overall Length\", x = \"Overall Length\", y = \"Vessel Count\", fill = \"Vessel\") +\n  theme(legend.position = \"none\") + \n  theme_minimal()\n\np_interactive &lt;- ggplotly(p, tooltip = \"text\") %&gt;%\n  layout(title = \"Histogram of Vessel Count per Overall Length\") %&gt;% layout(showlegend = FALSE)\n\np_interactive\n\n\n\n\n\n\nCode\n# Create the second histogram based on tonnage\np2 &lt;- ggplot(N_vessel_fishing, aes(x = tonnage, fill = color, text = tooltip_text)) +\n  geom_histogram(bins = 30, color = \"black\", alpha = 0.7) +\n  scale_fill_manual(values = c(\"grey\" = \"grey\", \"red\" = \"red\", \"purple\" = \"purple\"))+\n  labs(title = \"Histogram of Vessel Count per Tonnage\", x = \"Tonnage\", y = \"Vessel Count\", fill = \"Vessel\") +theme(legend.position = \"none\") + \n  theme_minimal()\n\np2_interactive &lt;- ggplotly(p2, tooltip = \"text\") %&gt;%\n  layout(title = \"Histogram of Vessel Count per Tonnage\") %&gt;% layout(showlegend = FALSE)\n\np2_interactive\n\n\n\n\n\n\nOut of the 178 fishing vessels, we identified 36 small vessels (Tonnage &lt;= 800, Length &lt;= 50) and 18 large vessels (Tonnage &gt;= 9000, Length &gt;= 110). Of which, we observed their dwell times for the fishing grounds and ecological preserve for the same time period where SSEC vessels were active. (1 February 2035 to 14 May 2035).\nWe observed that Snapper Snatcher has overstayed in multiple regions, Cod Table, and especially in Ghoti Reserve and Wrasse Beds. Meanwhile, Roach Robber has stayed largely in Wrasse Bed only, and have 2 notable instances of overstaying. Interestingly, large vessels such as Roach Robber do not stay long in Ghoti Preserve, and has not appeared in Don Limpet Preserve.\n\n\nCode\n# conditions, length &lt;= 50, tonnage 800 - 36 vessels \nN_vessel_fishing_small &lt;- N_vessel_fishing %&gt;% filter(tonnage &lt;= 800, \n                                                      length_overall &lt;= 50)\n  \n# conditions, length &gt; 110 ,  tonnage &gt;= 9,000 - 18 vessels\nN_vessel_fishing_large &lt;- N_vessel_fishing %&gt;% filter(tonnage &gt;= 9000, \n                                                      length_overall &gt;= 110)\n\nping_activity$start_time &lt;- ymd_hms(ping_activity$start_time)\n\n# Define cutoff time\ncutoff_time &lt;- ymd_hms(\"2035-05-14 00:00:00\")\n\n# ping activity of small fishing vessel \nping_activity_small &lt;-  ping_activity %&gt;%\n  filter(vessel_id %in% N_vessel_fishing_small$vessel_id, \n         area %in% c(\"Cod Table\", \"Tuna Shelf\", \"Wrasse Beds\", \n                     \"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\"), \n         start_time &lt;= cutoff_time) %&gt;%\n  mutate(start_time_formatted = format(start_time, \"%d-%m-%Y\")) %&gt;%\n  mutate(color = case_when(\n    vessel_id == \"snappersnatcher7be\" ~ \"red\",\n    vessel_id == \"roachrobberdb6\" ~ \"purple\",\n    TRUE ~ \"grey\"\n  ))\n\nping_activity_small &lt;- ping_activity_small %&gt;%\n  mutate(tooltip_text = paste(\n    \"Start Time: \", start_time_formatted, \"&lt;br&gt;\",\n    \"Dwell: \", dwell, \"&lt;br&gt;\",\n    \"Vessel ID: \", vessel_id, \"&lt;br&gt;\",\n    \"Vessel Company: \", vessel_company\n  ))\n  \np3 &lt;- ggplot(ping_activity_small, aes(x = area, y = dwell, text = tooltip_text)) +\n  geom_boxplot(outlier.shape = NA) + # Remove outliers since we'll show all points with jitter\n  geom_jitter(aes(color = color), width = 0.2, size = 1.5, alpha = 0.7) + # Add jitter\n  scale_color_identity() + # Use the color values as is\n  labs(title = \"Boxplot of Dwell Time for Small Sized Fishing Vessels\",\n       x = \"Area\",\n       y = \"Dwell Time (seconds)\") +\n  theme_minimal()\n\n# Convert to plotly for interactivity\np3_interactive &lt;- ggplotly(p3, tooltip = \"text\")\n\n\n# repeat plot for large vessel\nping_activity_large &lt;-  ping_activity %&gt;%\n  filter(vessel_id %in% N_vessel_fishing_large$vessel_id, \n         area %in% c(\"Cod Table\", \"Tuna Shelf\", \"Wrasse Beds\", \n                     \"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\"), \n         start_time &lt;= cutoff_time) %&gt;%\n  mutate(start_time_formatted = format(start_time, \"%d-%m-%Y\")) %&gt;%\n  mutate(color = case_when(\n    vessel_id == \"snappersnatcher7be\" ~ \"red\",\n    vessel_id == \"roachrobberdb6\" ~ \"purple\",\n    TRUE ~ \"grey\"\n  ))\n\nping_activity_large &lt;- ping_activity_large %&gt;%\n  mutate(tooltip_text = paste(\n    \"Start Time: \", start_time_formatted, \"&lt;br&gt;\",\n    \"Dwell: \", dwell, \"&lt;br&gt;\",\n    \"Vessel ID: \", vessel_id, \"&lt;br&gt;\",\n    \"Vessel Company: \", vessel_company\n  ))\n  \np4 &lt;- ggplot(ping_activity_large, aes(x = area, y = dwell, text = tooltip_text)) +\n  geom_boxplot(outlier.shape = NA) + # Remove outliers since we'll show all points with jitter\n  geom_jitter(aes(color = color), width = 0.2, size = 1.5, alpha = 0.7) + # Add jitter\n  scale_color_identity() + # Use the color values as is\n  labs(title = \"Boxplot of Dwell Time for Large Sized Fishing Vessels\",\n       x = \"Area\",\n       y = \"Dwell Time (seconds)\") +\n  theme_minimal()\n\n# Convert to plotly for interactivity\np4_interactive &lt;- ggplotly(p4, tooltip = \"text\")\n\np3_interactive\n\n\n\n\n\n\nCode\np4_interactive"
  },
  {
    "objectID": "Observations/Observation_4.html",
    "href": "Observations/Observation_4.html",
    "title": "Summary of Suspicious Vessels & Companies",
    "section": "",
    "text": "Objectives\nIn this article, we will summarise our findings on suspicious vessels and companies based on the vessels identified under “IUU Suspicion”.\n\n\nCode\n# Summary of codes to identify suspicious vessels based on IUU suspicion\n\npacman::p_load(jsonlite, tidyverse, tidyr, \n               knitr, lubridate, dplyr, \n               igraph, ggraph, ggdist, ggplot2, \n               SmartEDA, sf, tidygraph, reshape2, readr,\n               DT, patchwork,plotly, RColorBrewer)\n\ntx_qty &lt;- read_csv(\"data/tx_qty.csv\")\nping_activity &lt;- read_csv(\"data/ping_activity.csv\")\nE_Hbrpt_v &lt;- read_csv(\"data/hbrpt.csv\")\nN_vessel &lt;- read_csv(\"data/N_vessel.csv\")\n#location_legend &lt;- read_csv(\"data/location_legend.csv\")\n#vessel_movement &lt;- read_rds(\"data/rds/vessel_movement_data.rds\")\nnearest_tx_date &lt;- read_csv(\"data/mapped_records.csv\")\ntime_summary_df &lt;- read_csv(\"data/time-summary.csv\")\n\n## Determine vessels that have overstayed \nping_activity$start_time &lt;- ymd_hms(ping_activity$start_time)\nping_activity$month &lt;- floor_date(ping_activity$start_time, \"month\")\n\n# Convert the month column to Date format (first day of each month)\nping_activity$month &lt;- as.Date(ping_activity$month)\n\n# Calculate median dwell time per vessel_id per month for each area\nagg_data &lt;- ping_activity %&gt;%\n  group_by(area, vessel_id, month) %&gt;%\n  summarise(median_dwell = median(dwell, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nagg_data2 &lt;- agg_data %&gt;%\n  group_by(area, month) %&gt;%\n  mutate(`90%_dwell_time` = quantile(median_dwell, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(`Is_above_90%` = ifelse(median_dwell &gt; `90%_dwell_time`, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\n# count the number of times that vessel stayed &gt;90% dwell time\nsummary_data &lt;- agg_data2 %&gt;%\n  filter(area %in% c( \"Ghoti Preserve\", \"Nemo Reef\", \"Don Limpet Preserve\"), \n         `Is_above_90%` == \"Yes\") %&gt;%\n  group_by(vessel_id, area) %&gt;%\n  summarise(count_above_90 = n()) %&gt;%\n  filter(count_above_90 &gt;=2) %&gt;% ungroup()\n\nsummary_data_DT &lt;- summary_data %&gt;% \n  left_join(N_vessel %&gt;% select(\"vessel_id\", \"vessel_name\", \"vessel_company\", \"vessel_type\", \"tonnage\", \"length_overall\", \"flag_country\"),  \n            by = c(\"vessel_id\" = \"vessel_id\"))\n\n\n\n## Codes to identify overfishing vessels \n\nvessel_cargo_map &lt;- nearest_tx_date %&gt;% \n  left_join(N_vessel, by = c(\"vessel_id\" = \"vessel_id\")) %&gt;% \n  group_by(cargo_id, tx_date, vessel_id, fish_species) %&gt;%\n  summarise(percent_fill = qty_tons/tonnage)\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;% mutate(tx_date = as.Date(tx_date))\n\nvessel_cargo_map &lt;- vessel_cargo_map %&gt;%\n  group_by(fish_species, month = floor_date(tx_date, \"month\")) %&gt;%\n  mutate(monthly_mean = mean(percent_fill, na.rm = TRUE),\n         percentile_90 = quantile(percent_fill, 0.90, na.rm = TRUE)) %&gt;%\n  mutate(percent_fill_above_90 = ifelse(percent_fill &gt; percentile_90, \"Yes\", \"No\")) %&gt;%\n  ungroup()\n\nvessel_percent_fill_counts &lt;- vessel_cargo_map %&gt;%\n  filter(percent_fill_above_90 == \"Yes\") %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(count_above_90 = n()) %&gt;%\n  ungroup()\n\n# Filter for vessel_id with count &gt;= 5\nfiltered_vessel_counts &lt;- vessel_percent_fill_counts %&gt;%\n  filter(count_above_90 &gt;= 20)\n\n# Summarising for table \nsus_overfish_cargo &lt;- nearest_tx_date %&gt;% \n  filter(vessel_id %in% filtered_vessel_counts$vessel_id) %&gt;%\n  group_by(vessel_id, fish_species) %&gt;%\n  summarize(total_qty_tons = sum(qty_tons, na.rm = TRUE),\n            distinct_cargo_count = n_distinct(cargo_id)) %&gt;%\n  ungroup()\n            \n# identifying vessel diversion\n\nvessel_trips &lt;- time_summary_df %&gt;%\n  mutate(start_date = as.Date(start_date))\n\n# Define the cutoff date for 14 May 2035\ncutoff_date &lt;- as.Date(\"2035-05-14\")\n\ntrips_before_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &lt;= cutoff_date)\n\n# Filter trips that started in June 2035\ntrips_in_june &lt;- vessel_trips %&gt;%\n  filter(start_date &gt;= as.Date(\"2035-06-01\") & start_date &lt; as.Date(\"2035-07-01\"))\n\n# Filter trips that started after 14 May 2035\ntrips_after_cutoff &lt;- vessel_trips %&gt;%\n  filter(start_date &gt; cutoff_date)\n\n# Function to get unique areas\nget_unique_areas &lt;- function(data) {\n  data %&gt;%\n    pull(unique_areas) %&gt;%\n    strsplit(\", \") %&gt;%\n    unlist() %&gt;%\n    unique()\n}\n\n# Get unique areas per vessel before the cutoff date\nareas_before_cutoff &lt;- trips_before_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_before = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel after the cutoff date\nareas_after_cutoff &lt;- trips_after_cutoff %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_after = list(get_unique_areas(cur_data())))\n\n# Get unique areas per vessel in June 2035\nareas_in_june &lt;- trips_in_june %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarize(areas_june = list(get_unique_areas(cur_data())))\n\n# Combine the data\ncombined_areas &lt;- full_join(areas_before_cutoff, areas_after_cutoff, by = \"vessel_id\") %&gt;%\n  full_join(areas_in_june, by = \"vessel_id\")\n\n# Determine new areas visited, old areas avoided, and old areas avoided in June for each vessel\nresults &lt;- combined_areas %&gt;%\n  rowwise() %&gt;%\n  mutate(new_areas = if(length(setdiff(areas_after, areas_before)) &gt; 0) \n                        paste(setdiff(areas_after, areas_before), collapse = \", \") else NA,\n         old_areas_avoided = if(length(setdiff(areas_before, areas_after)) &gt; 0) \n                                paste(setdiff(areas_before, areas_after), collapse = \", \") else NA,\n         old_areas_avoided_june = if(length(setdiff(areas_before, areas_june)) &gt; 0) \n                                    paste(setdiff(areas_before, areas_june), collapse = \", \") else NA,\n         new_areas_count = ifelse(is.na(new_areas), 0, length(unlist(strsplit(new_areas, \", \")))),\n         old_areas_avoided_count = ifelse(is.na(old_areas_avoided), 0, length(unlist(strsplit(old_areas_avoided, \", \")))),\n         old_areas_avoided_june_count = ifelse(is.na(old_areas_avoided_june), 0, length(unlist(strsplit(old_areas_avoided_june, \", \"))))\n         ) %&gt;%\n  ungroup()\n\n# Add new columns to identify vessels that avoided \"Ghoti Preserve\" in June but returned after the cutoff period\nresults &lt;- results %&gt;%\n  mutate(avoided_ghoti_june = ifelse(grepl(\"Ghoti Preserve\", old_areas_avoided_june), TRUE, FALSE),\n         returned_to_ghoti_after_cutoff = ifelse(avoided_ghoti_june & grepl(\"Ghoti Preserve\", areas_after), TRUE, FALSE))\n\n# Select relevant columns for the final output\nfinal_results &lt;- results %&gt;%\n  select(vessel_id, new_areas, old_areas_avoided, old_areas_avoided_june, new_areas_count, old_areas_avoided_count, old_areas_avoided_june_count, avoided_ghoti_june, returned_to_ghoti_after_cutoff)\n\n\n# combining the 3 datasets to identify suspicious vessels\n\noverstay_vessel &lt;- summary_data\ndiverted_vessel &lt;- N_vessel %&gt;% filter(vessel_id %in% final_results$vessel_id) %&gt;% select(vessel_id, vessel_company)\noverfish_vessel &lt;- sus_overfish_cargo\n\noverstay_vessel_processed &lt;- overstay_vessel %&gt;%\n  mutate(count = 1) %&gt;%\n  pivot_wider(names_from = area, values_from = count, values_fill = list(count = 0)) %&gt;%\n  rename_at(vars(-vessel_id), ~paste0(\"overstay_\", gsub(\" \", \"_\", .)))\n\n# Aggregate to ensure one row per vessel_id\noverstay_vessel_agg &lt;- overstay_vessel_processed %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarise(across(starts_with(\"overstay_\"), ~sum(. != 0)))\n\n# Process the overfish_vessel dataframe\noverfish_vessel_processed &lt;- overfish_vessel %&gt;%\n  mutate(count = 1) %&gt;%\n  pivot_wider(names_from = fish_species, values_from = count, values_fill = list(count = 0)) %&gt;%\n  rename_at(vars(-vessel_id), ~paste0(\"overfish_\", gsub(\" \", \"_\", .)))\n\n# Aggregate to ensure one row per vessel_id\noverfish_vessel_agg &lt;- overfish_vessel_processed %&gt;%\n  group_by(vessel_id) %&gt;%\n  summarise(across(starts_with(\"overfish_\"), ~sum(. != 0)))\n\n# Process the diverted_vessel dataframe\ndiverted_vessel_processed &lt;- diverted_vessel %&gt;%\n  mutate(diverted = 1) %&gt;%\n  select(vessel_id, diverted)\n\n# Merge the dataframes\ncombined_df &lt;- overstay_vessel_agg %&gt;%\n  full_join(overfish_vessel_agg, by = \"vessel_id\") %&gt;%\n  full_join(diverted_vessel_processed, by = \"vessel_id\") %&gt;%\n  mutate(across(starts_with(\"overstay_\"), ~replace_na(.x, 0)),\n         across(starts_with(\"overfish_\"), ~replace_na(.x, 0)),\n         diverted = replace_na(diverted, 0)) %&gt;%\n  select(-c(\"overstay_count_above_90\", \"overfish_total_qty_tons\", \"overfish_distinct_cargo_count\"))\n\n# Remove specified columns\ncombined_df &lt;- combined_df %&gt;%\n  rowwise() %&gt;%\n  mutate(count_of_overstay_areas = sum(c_across(2:4)),\n         count_of_overfish_species = sum(c_across(5:12)),\n         suspicion_count = count_of_overstay_areas + count_of_overfish_species + diverted)\n\n# Remove specified columns\nlikely_suspicious &lt;- combined_df %&gt;% \n  filter(suspicion_count &gt;= 2) %&gt;% \n  arrange(desc(suspicion_count))\n  \nsus_vessel &lt;- likely_suspicious %&gt;% left_join(N_vessel %&gt;% select(vessel_id, vessel_name, vessel_company, flag_country, vessel_type, tonnage, length_overall), by = c(\"vessel_id\"))\n\n#write_csv(sus_vessel, \"data/sus_vessel.csv\")\n\n\nSummarising the suspicious vessels, we observed a total of 34 vessels.\n\nOut of the 34 vessels, 3 are tour vessels (Mr. Ray, Clown Fish and Himark Royal) and 2 vessels (Webigail and Louie the II) under “Others” which may be used for recreational use with unknown company from Oceans. Hence overstaying in preserves might be deemed reasonable.\n\nThis leaves us with 29 suspicious fishing vessels, 4 of which are non-Oceanus.\n\nRedfin Pickerel Raider from Solis PLC of Solterrrix for both overstaying in Ghoti and overfishing multiple fish species.\nBigeye Tuna Buccaneer from Calabrand for overfishing multiple fish species.\nCrappie Capturer from Kondarica & Muskellunge Master from Osterivaro for overstaying in Ghoti Preserve\n\nWe further observed 4 notable companies with more than 1 vessels identified as suspicious which prompts further investigation. This includes:\n\nCompany of “Robinson, Mcmillan and Watson” for their vessels of White Sucker Wrangler and Fish Flinger.\n\n\n\nCompany of “Faulkner, Shaffer and Moyer” for their vessels of Tide Tamer and Coho Salmon Capturer.\n\n\n\nCompany of “Smith, Collins and Johnson” for their vessels of Cutthroat Trouth Catcher and Sea Serpent\n\n\n\nCompany of “Mcpherson-Wright” for their vessels of “Brill Bandit” and “Sockeye Salmon Seeker”.\n\n\nAll of these vessels has a disappearance from Ghoti Reserve, or drastic drop in visit for Sea Serpent to Ghoti Preserve in the month of June 2035."
  },
  {
    "objectID": "Shiny_app/data/shp/Oceanus Geography.html",
    "href": "Shiny_app/data/shp/Oceanus Geography.html",
    "title": "IS608 - Group 1",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  }
]
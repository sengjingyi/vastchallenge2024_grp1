---
title: "Observation on Suspicious Fishing Behaviours"
author: "Group 1 - Arya Siahaan, Seng Jing Yi, Thet Myat Noe"
date: "June 24, 2024"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
editor: visual

format:
  html:
    code-fold: true
---

# Objectives

In this article, we will explore the possible signs of suspicious fishing behaviour in relation to IUU.

| IUU                                                                                                                                   | Possible visualisations                                                                                                        |
|---------------------------------|---------------------------------------|
| **Illegal:** Unauthorised fishing by vessels that in restricted areas (e.g., Ecological Reserves).                                    | Identifying vessels that have overstayed in the ecological preserves.                                                          |
| **Unregulated**: Overfishing that depletes natural fish stocks and disrupts marine ecosystems.                                        | Identify vessels that have consistently out-perform comparable peers, and potentially suggest fishing beyond allowable limits. |
| **Unreported**: Fishing activities that are not reported or under-reported to ports which hampers accurate assessment of fish stocks. | Identify suspicious vessels that have changed their route to avoid "Ghoti Reserve" after SSEC was caught.                      |

```{r}
pacman::p_load(jsonlite, tidyverse, tidyr, 
               knitr, lubridate, dplyr, 
               igraph, ggraph, ggdist, ggplot2, 
               SmartEDA, sf, tidygraph, reshape2, readr,
               DT, patchwork,plotly, RColorBrewer)

tx_qty <- read_csv("data/tx_qty.csv")
ping_activity <- read_csv("data/ping_activity.csv")
E_Hbrpt_v <- read_csv("data/hbrpt.csv")
N_vessel <- read_csv("data/N_vessel.csv")
#location_legend <- read_csv("data/location_legend.csv")
#vessel_movement <- read_rds("data/rds/vessel_movement_data.rds")
nearest_tx_date <- read_csv("data/mapped_records.csv")
time_summary_df <- read_csv("data/time-summary.csv")
```

## Unauthorised - Vessels with Possibility of Illegal Fishing

Zooming into the 3 ecological preserves, we observed the `Transponder Ping` records to identify any fishing vessels that have overstayed their visits.

[Steps taken:]{.underline}

1.  Summarise the median dwell time of vessels per month at each area.
2.  Identify those vessels that is of the top 90% of the area per month and include a counter `Is above 90%`. Where vessels are flagged at least once, return these vessels details for investigation.

```{r}
ping_activity$start_time <- ymd_hms(ping_activity$start_time)
ping_activity$month <- floor_date(ping_activity$start_time, "month")

# Convert the month column to Date format (first day of each month)
ping_activity$month <- as.Date(ping_activity$month)

# Calculate median dwell time per vessel_id per month for each area
agg_data <- ping_activity %>%
  group_by(area, vessel_id, month) %>%
  summarise(median_dwell = median(dwell, na.rm = TRUE)) %>%
  ungroup()

agg_data2 <- agg_data %>%
  group_by(area, month) %>%
  mutate(`90%_dwell_time` = quantile(median_dwell, 0.90, na.rm = TRUE)) %>%
  mutate(`Is_above_90%` = ifelse(median_dwell > `90%_dwell_time`, "Yes", "No")) %>%
  ungroup()

# count the number of times that vessel stayed >90% dwell time
summary_data <- agg_data2 %>%
  filter(area %in% c( "Ghoti Preserve", "Nemo Reef", "Don Limpet Preserve"), 
         `Is_above_90%` == "Yes") %>%
  group_by(vessel_id, area) %>%
  summarise(count_above_90 = n()) %>%
  filter(count_above_90 >=2) %>% ungroup()

summary_data_DT <- summary_data %>% 
  left_join(N_vessel %>% select("vessel_id", "vessel_name", "vessel_company", "vessel_type", "tonnage", "length_overall", "flag_country"),  
            by = c("vessel_id" = "vessel_id"))

summary_data_DT <- summary_data_DT %>%  select(-vessel_id) %>% select("area", "count_above_90", "vessel_name", "vessel_company", "vessel_type", "tonnage", "length_overall", "flag_country")

colnames(summary_data_DT) <- c("Overstayed Area", "Frequency", "Vessel Name", "Vessel Company", "Vessel Type", "Tonnage", "Overall Length", "Country Flag")

ghoti_overstay <- summary_data_DT %>% filter(`Overstayed Area` == "Ghoti Preserve")
nemo_overstay <- summary_data_DT %>% filter(`Overstayed Area` == "Nemo Reef")
don_overstay <- summary_data_DT %>% filter(`Overstayed Area` == "Don Limpet Preserve")

datatable(ghoti_overstay, options (pageLength = 3))  # 12 vessels
datatable(nemo_overstay, options (pageLength = 3))   #6 vessels 
datatable(nemo_overstay, options (pageLength = 2))  # 2 vessels         
```

### Ecological Preserve 1 - Ghoti Preserve

We further observed that there maybe some false positive, when visualising on the `Transponder Ping` data set. Notably suspicious vessels include: Gunard Grabber, Sockeye Salmon Seeker, Largemouth Bass Looter, Brill Bandit, Sea Bass Bandit

We observed that despite SSEC's Snapper Snatcher being caught in May 2035, some vessels seek cover for the month of June, while others continued their operations from July 2035 onwards.

```{r}
selected_vessels <- ghoti_overstay$`Vessel Name`

# Filter data for the specified area
subset_data <- ping_activity %>%
  filter(area == "Ghoti Preserve") %>%
  mutate(month = floor_date(ymd_hms(start_time), "month"))

# Calculate the median dwell time per vessel per month
median_dwell_data <- subset_data %>%
  group_by(month, vessel_name) %>%
  summarize(median_dwell = median(dwell, na.rm = TRUE)) %>%
  ungroup() %>% mutate(month = as.Date(month))

# Create a new column to categorize vessels into 'Selected' and 'Other'
median_dwell_data <- median_dwell_data %>%
  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, "Other"))

# Create a unique color for each vessel
unique_vessels <- unique(median_dwell_data$vessel_name)
n_colors <- length(unique_vessels)
color_palette <- colorRampPalette(brewer.pal(12, "Set3"))(n_colors)
vessel_colors <- setNames(color_palette, unique_vessels)

# Add black color for "Other"
vessel_colors["Other"] <- "black"

# Create the plot
p <- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +
  geom_boxplot(aes(group = month), outlier.shape = NA) +
  geom_jitter(aes(text = paste("Vessel Name:", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +
  scale_color_manual(values = vessel_colors) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b") +  # Ensure all months are shown
  labs(title = "Median Dwell Time of Vessels by Month in Ghoti Preserve",
       x = "Month",
       y = "Median Dwell Time",
       color = "Vessel Name") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability

# Convert to interactive plotly plot
ggplotly(p, tooltip = "text")


```

### Ecological Preserve 2 - Nemo Reefs

We further repeated this test for Nemo Reefs, and noted vessels such as "Mr Ray" and "Louie the II" consistently overstayed in Nemo Reefs, and this is much higher than other vessels. As well as "Clown Fish" and "Bluefish Bandit" with fluctuating median dwell time above the 75%.

*Note: The vessel of "Heart of Oceanus" was excluded as it has exceptionally long dwell time in February 2035 that distorted the plot. "Costa Smeralda" and "Dolphin Dasher" excluded from April 2035 plot.*

```{r}
selected_vessels <- nemo_overstay$`Vessel Name`

# Filter data for the specified area
subset_data <- ping_activity %>%
  filter(area == "Nemo Reef", vessel_id != "heartofoceanusf11", 
         vessel_name != "Costa Smeralda", vessel_name != "Dolphin Dasher") %>%
  mutate(month = floor_date(ymd_hms(start_time), "month"))

# Calculate the median dwell time per vessel per month
median_dwell_data <- subset_data %>%
  group_by(month, vessel_name) %>%
  summarize(median_dwell = median(dwell, na.rm = TRUE)) %>%
  ungroup() %>% mutate(month = as.Date(month))

# Create a new column to categorize vessels into 'Selected' and 'Other'
median_dwell_data <- median_dwell_data %>%
  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, "Other"))

# Create a unique color for each vessel
unique_vessels <- unique(median_dwell_data$vessel_name)
n_colors <- length(unique_vessels)
color_palette <- colorRampPalette(brewer.pal(12, "Set3"))(n_colors)
vessel_colors <- setNames(color_palette, unique_vessels)

# Add black color for "Other"
vessel_colors["Other"] <- "black"

# Create the plot
p2 <- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +
  geom_boxplot(aes(group = month), outlier.shape = NA) +
  geom_jitter(aes(text = paste("Vessel Name:", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +
  scale_color_manual(values = vessel_colors) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b") +  # Ensure all months are shown
  labs(title = "Median Dwell Time of Vessels by Month in Nemo Reef",
       x = "Month",
       y = "Median Dwell Time",
       color = "Vessel Name") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability

# Convert to interactive plotly plot
ggplotly(p2, tooltip = "text")
```

### Ecological Preserve 3 - Don Limpet Preserve

For Don Limpet Preserve, we noted 2 vessels with exceptionally long dwell time - Himark Royal and Mr Ray. However, for Himark Royal, the median time per month is relatively constant, and this may point to the vessel being permanently located there. Instead, Mr Ray is more suspicious with fluctuating activities in September 2035 and November 2035.

```{r}
selected_vessels <- don_overstay$`Vessel Name`

# Filter data for the specified area
subset_data <- ping_activity %>%
  filter(area == "Don Limpet Preserve") %>%
  mutate(month = floor_date(ymd_hms(start_time), "month"))

# Calculate the median dwell time per vessel per month
median_dwell_data <- subset_data %>%
  group_by(month, vessel_name) %>%
  summarize(median_dwell = median(dwell, na.rm = TRUE)) %>%
  ungroup() %>% mutate(month = as.Date(month))

# Create a new column to categorize vessels into 'Selected' and 'Other'
median_dwell_data <- median_dwell_data %>%
  mutate(vessel_category = ifelse(vessel_name %in% selected_vessels, vessel_name, "Other"))

# Create a unique color for each vessel
unique_vessels <- unique(median_dwell_data$vessel_name)
n_colors <- length(unique_vessels)
color_palette <- colorRampPalette(brewer.pal(12, "Set3"))(n_colors)
vessel_colors <- setNames(color_palette, unique_vessels)

# Add black color for "Other"
vessel_colors["Other"] <- "black"

# Create the plot
p3 <- ggplot(median_dwell_data, aes(x = month, y = median_dwell, color = vessel_category)) +
  geom_boxplot(aes(group = month), outlier.shape = NA) +
  geom_jitter(aes(text = paste("Vessel Name:", vessel_name)), width = 1, size = 1.5, alpha = 0.9) +
  scale_color_manual(values = vessel_colors) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b") +  # Ensure all months are shown
  labs(title = "Median Dwell Time of Vessels by Month in Nemo Reef",
       x = "Month",
       y = "Median Dwell Time",
       color = "Vessel Name") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate labels for better readability

# Convert to interactive plotly plot
ggplotly(p3, tooltip = "text")
```

## Unregulated - Vessels with possibility of Overfishing

Another sign of suspicious activity is where the vessel or it's company is able to consistently return high volumes of catch, comparing it with its peers.

-   Repeatedly high cargo catch (cargo quantity / vessel's tonnage)

-   Filter to return the vessels where frequency at above 90 percentile \>= 5 times each month.

```{r}
vessel_cargo_map <- nearest_tx_date %>% 
  left_join(N_vessel, by = c("vessel_id" = "vessel_id")) %>% 
  group_by(cargo_id, tx_date, vessel_id, fish_species) %>%
  summarise(percent_fill = qty_tons/tonnage)

vessel_cargo_map <- vessel_cargo_map %>% mutate(tx_date = as.Date(tx_date))

vessel_cargo_map <- vessel_cargo_map %>%
  group_by(fish_species, month = floor_date(tx_date, "month")) %>%
  mutate(monthly_mean = mean(percent_fill),
         percentile_90 = quantile(percent_fill, 0.90)) %>%
  ungroup()

p <- ggplot(vessel_cargo_map, aes(x = tx_date, y = percent_fill, text = vessel_id)) +
  geom_point(aes(color = percent_fill > percentile_90)) +
  scale_color_manual(values = c("FALSE" = "black", "TRUE" = "red")) +
  geom_line(aes(y = monthly_mean), linetype = "dashed", color = "blue") +
  facet_wrap(~ fish_species, scales = "free_y") +
  labs(title = "Percent Fill Over Time by Fish Species",
       x = "Transaction Date",
       y = "Percent Fill",
       color = "Above 90th Percentile") +
  theme_minimal()

# Make the plot interactive with ggplotly
ggplotly(p, tooltip = c("text", "percent_fill", "monthly_mean"))
            
```

```{r}
vessel_cargo_map_above_90th <- vessel_cargo_map %>%
  filter(percent_fill > percentile_90)

# Summarize the count of records per vessel_id, month, and fish species
summary <- vessel_cargo_map_above_90th %>%
  group_by(vessel_id, month, fish_species) %>%
  summarize(count_records_above_90th = n()) %>% 
  filter(count_records_above_90th >=5) %>%
  ungroup()

unique(summary$vessel_id)

datatable(summary, option = list(page_length = 5), filter = "top")
```

## Disrupted vessels after SSEC was caught

-   Returns route diversion for the vessels

-   Returns list of vessel_ids that have diverted from Ghoti in June, after SSEC was caught in May

```{r}
vessel_trips <- time_summary_df %>%
  mutate(start_date = as.Date(start_date))

# Define the cutoff date for 14 May 2035
cutoff_date <- as.Date("2035-05-14")

trips_before_cutoff <- vessel_trips %>%
  filter(start_date <= cutoff_date)

# Filter trips that started in June 2035
trips_in_june <- vessel_trips %>%
  filter(start_date >= as.Date("2035-06-01") & start_date < as.Date("2035-07-01"))

# Filter trips that started after 14 May 2035
trips_after_cutoff <- vessel_trips %>%
  filter(start_date > cutoff_date)

# Function to get unique areas
get_unique_areas <- function(data) {
  data %>%
    pull(unique_areas) %>%
    strsplit(", ") %>%
    unlist() %>%
    unique()
}

# Get unique areas per vessel before the cutoff date
areas_before_cutoff <- trips_before_cutoff %>%
  group_by(vessel_id) %>%
  summarize(areas_before = list(get_unique_areas(cur_data())))

# Get unique areas per vessel after the cutoff date
areas_after_cutoff <- trips_after_cutoff %>%
  group_by(vessel_id) %>%
  summarize(areas_after = list(get_unique_areas(cur_data())))

# Get unique areas per vessel in June 2035
areas_in_june <- trips_in_june %>%
  group_by(vessel_id) %>%
  summarize(areas_june = list(get_unique_areas(cur_data())))

# Combine the data
combined_areas <- full_join(areas_before_cutoff, areas_after_cutoff, by = "vessel_id") %>%
  full_join(areas_in_june, by = "vessel_id")

# Determine new areas visited, old areas avoided, and old areas avoided in June for each vessel
results <- combined_areas %>%
  rowwise() %>%
  mutate(new_areas = if(length(setdiff(areas_after, areas_before)) > 0) 
                        paste(setdiff(areas_after, areas_before), collapse = ", ") else NA,
         old_areas_avoided = if(length(setdiff(areas_before, areas_after)) > 0) 
                                paste(setdiff(areas_before, areas_after), collapse = ", ") else NA,
         old_areas_avoided_june = if(length(setdiff(areas_before, areas_june)) > 0) 
                                    paste(setdiff(areas_before, areas_june), collapse = ", ") else NA,
         new_areas_count = ifelse(is.na(new_areas), 0, length(unlist(strsplit(new_areas, ", ")))),
         old_areas_avoided_count = ifelse(is.na(old_areas_avoided), 0, length(unlist(strsplit(old_areas_avoided, ", ")))),
         old_areas_avoided_june_count = ifelse(is.na(old_areas_avoided_june), 0, length(unlist(strsplit(old_areas_avoided_june, ", "))))) %>%
  select(vessel_id, new_areas, old_areas_avoided, old_areas_avoided_june, new_areas_count, old_areas_avoided_count, old_areas_avoided_june_count) %>%
  ungroup()

# Print the results
datatable(results, options = list(pagelength = 10), filter = "top")

subset_with_ghoti <- results %>%
  filter(grepl("Ghoti", old_areas_avoided_june))

# Print the subset
unique(subset_with_ghoti$vessel_id)
```
